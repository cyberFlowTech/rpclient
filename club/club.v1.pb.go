// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: define/club.v1.proto

package club

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GroupType int32

const (
	GroupType_SUP_GROUP     GroupType = 0 // 超级群（部落）
	GroupType_SMALL_GROUP   GroupType = 1 // 普通群
	GroupType_CHANNEL_GROUP GroupType = 2 // 频道（部落子群）
)

// Enum value maps for GroupType.
var (
	GroupType_name = map[int32]string{
		0: "SUP_GROUP",
		1: "SMALL_GROUP",
		2: "CHANNEL_GROUP",
	}
	GroupType_value = map[string]int32{
		"SUP_GROUP":     0,
		"SMALL_GROUP":   1,
		"CHANNEL_GROUP": 2,
	}
)

func (x GroupType) Enum() *GroupType {
	p := new(GroupType)
	*p = x
	return p
}

func (x GroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_club_v1_proto_enumTypes[0].Descriptor()
}

func (GroupType) Type() protoreflect.EnumType {
	return &file_define_club_v1_proto_enumTypes[0]
}

func (x GroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupType.Descriptor instead.
func (GroupType) EnumDescriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{0}
}

type PlatformType int32

const (
	PlatformType_Ios     PlatformType = 0
	PlatformType_Android PlatformType = 1
	PlatformType_Unknown PlatformType = 99
)

// Enum value maps for PlatformType.
var (
	PlatformType_name = map[int32]string{
		0:  "Ios",
		1:  "Android",
		99: "Unknown",
	}
	PlatformType_value = map[string]int32{
		"Ios":     0,
		"Android": 1,
		"Unknown": 99,
	}
)

func (x PlatformType) Enum() *PlatformType {
	p := new(PlatformType)
	*p = x
	return p
}

func (x PlatformType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlatformType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_club_v1_proto_enumTypes[1].Descriptor()
}

func (PlatformType) Type() protoreflect.EnumType {
	return &file_define_club_v1_proto_enumTypes[1]
}

func (x PlatformType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlatformType.Descriptor instead.
func (PlatformType) EnumDescriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{1}
}

type ActionType int32

const (
	ActionType_ClubVisited          ActionType = 0  // 访问部落
	ActionType_ClubCreated          ActionType = 1  // 创建部落
	ActionType_ChannelCreated       ActionType = 2  // 创建频道
	ActionType_ClubShared           ActionType = 3  // 分享部落
	ActionType_ClubH5Visited        ActionType = 4  // 部落名片h5页 被访问次数
	ActionType_ClubH5Download       ActionType = 5  //部落H5页下载
	ActionType_ClubH5Active         ActionType = 6  //部落H5页唤醒
	ActionType_ClubDissolution      ActionType = 7  // 解散部落
	ActionType_ChannelDelete        ActionType = 8  // 删除频道
	ActionType_ClubQuit             ActionType = 9  // 退出部落
	ActionType_RoleCreate           ActionType = 10 // 身份组创建
	ActionType_BlockUser            ActionType = 11 // 移除、禁言
	ActionType_ClubCompletedProfile ActionType = 12 // 完善部落资料
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0:  "ClubVisited",
		1:  "ClubCreated",
		2:  "ChannelCreated",
		3:  "ClubShared",
		4:  "ClubH5Visited",
		5:  "ClubH5Download",
		6:  "ClubH5Active",
		7:  "ClubDissolution",
		8:  "ChannelDelete",
		9:  "ClubQuit",
		10: "RoleCreate",
		11: "BlockUser",
		12: "ClubCompletedProfile",
	}
	ActionType_value = map[string]int32{
		"ClubVisited":          0,
		"ClubCreated":          1,
		"ChannelCreated":       2,
		"ClubShared":           3,
		"ClubH5Visited":        4,
		"ClubH5Download":       5,
		"ClubH5Active":         6,
		"ClubDissolution":      7,
		"ChannelDelete":        8,
		"ClubQuit":             9,
		"RoleCreate":           10,
		"BlockUser":            11,
		"ClubCompletedProfile": 12,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_club_v1_proto_enumTypes[2].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_define_club_v1_proto_enumTypes[2]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{2}
}

type Access int32

const (
	Access_MMessage Access = 0 // 管理消息的权限
)

// Enum value maps for Access.
var (
	Access_name = map[int32]string{
		0: "MMessage",
	}
	Access_value = map[string]int32{
		"MMessage": 0,
	}
)

func (x Access) Enum() *Access {
	p := new(Access)
	*p = x
	return p
}

func (x Access) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Access) Descriptor() protoreflect.EnumDescriptor {
	return file_define_club_v1_proto_enumTypes[3].Descriptor()
}

func (Access) Type() protoreflect.EnumType {
	return &file_define_club_v1_proto_enumTypes[3]
}

func (x Access) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Access.Descriptor instead.
func (Access) EnumDescriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{3}
}

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`      // 0 表示正常  其它 为错误提示
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"` // 错误提示
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CommonResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// * 用户部落列表
type ClubListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`         // 分页
	UserId   int64 `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`     // 用户id
	PageSize int64 `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"` // 分页大小
}

func (x *ClubListReq) Reset() {
	*x = ClubListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubListReq) ProtoMessage() {}

func (x *ClubListReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubListReq.ProtoReflect.Descriptor instead.
func (*ClubListReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{1}
}

func (x *ClubListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ClubListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ClubListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ClubListRespList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`                     // 部落id，加密后的
	Name        string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`                 // 部落名称
	Avatar      string   `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`             // 部落头像
	Bg          string   `protobuf:"bytes,4,opt,name=Bg,proto3" json:"Bg,omitempty"`                     // 部落背景
	Status      int64    `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`            // 部落状态 0初始化 2:正常 3:已删除
	Master      int64    `protobuf:"varint,6,opt,name=Master,proto3" json:"Master,omitempty"`            // 群主
	Desc        string   `protobuf:"bytes,7,opt,name=Desc,proto3" json:"Desc,omitempty"`                 // 部落描述
	UserCount   int64    `protobuf:"varint,8,opt,name=UserCount,proto3" json:"UserCount,omitempty"`      // 部落人数
	IsPub       int64    `protobuf:"varint,9,opt,name=IsPub,proto3" json:"IsPub,omitempty"`              // 部落社区是否公开
	NewUsers    []string `protobuf:"bytes,10,rep,name=NewUsers,proto3" json:"NewUsers,omitempty"`        // 加入部落的新用户
	HasPstories bool     `protobuf:"varint,11,opt,name=HasPstories,proto3" json:"HasPstories,omitempty"` // 是否有发布动态权限
}

func (x *ClubListRespList) Reset() {
	*x = ClubListRespList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubListRespList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubListRespList) ProtoMessage() {}

func (x *ClubListRespList) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubListRespList.ProtoReflect.Descriptor instead.
func (*ClubListRespList) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{2}
}

func (x *ClubListRespList) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClubListRespList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClubListRespList) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ClubListRespList) GetBg() string {
	if x != nil {
		return x.Bg
	}
	return ""
}

func (x *ClubListRespList) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ClubListRespList) GetMaster() int64 {
	if x != nil {
		return x.Master
	}
	return 0
}

func (x *ClubListRespList) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ClubListRespList) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *ClubListRespList) GetIsPub() int64 {
	if x != nil {
		return x.IsPub
	}
	return 0
}

func (x *ClubListRespList) GetNewUsers() []string {
	if x != nil {
		return x.NewUsers
	}
	return nil
}

func (x *ClubListRespList) GetHasPstories() bool {
	if x != nil {
		return x.HasPstories
	}
	return false
}

type ClubListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64               `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`   // 当前也码
	Pages int64               `protobuf:"varint,2,opt,name=Pages,proto3" json:"Pages,omitempty"` // 总页数
	List  []*ClubListRespList `protobuf:"bytes,3,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *ClubListResp) Reset() {
	*x = ClubListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubListResp) ProtoMessage() {}

func (x *ClubListResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubListResp.ProtoReflect.Descriptor instead.
func (*ClubListResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{3}
}

func (x *ClubListResp) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ClubListResp) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *ClubListResp) GetList() []*ClubListRespList {
	if x != nil {
		return x.List
	}
	return nil
}

// * 部落详情
type ClubInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`   // 部落id
	UserId int64 `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"` // 用户ID
}

func (x *ClubInfoReq) Reset() {
	*x = ClubInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubInfoReq) ProtoMessage() {}

func (x *ClubInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubInfoReq.ProtoReflect.Descriptor instead.
func (*ClubInfoReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{4}
}

func (x *ClubInfoReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ClubInfoReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ClubInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`                  // 部落加密id
	Name       string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`              // 部落名称
	Avatar     string                 `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`          // 部落头像
	Desc       string                 `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`              // 部落简介
	Bg         string                 `protobuf:"bytes,5,opt,name=Bg,proto3" json:"Bg,omitempty"`                  // 部落背景
	IsDel      int64                  `protobuf:"varint,6,opt,name=IsDel,proto3" json:"IsDel,omitempty"`           // 部落是否删除 0否，1是
	InClub     int64                  `protobuf:"varint,7,opt,name=InClub,proto3" json:"InClub,omitempty"`         // 用户是否在部落 0否，1是
	UserCount  int64                  `protobuf:"varint,8,opt,name=UserCount,proto3" json:"UserCount,omitempty"`   // 部落总人数
	Nickname   string                 `protobuf:"bytes,9,opt,name=Nickname,proto3" json:"Nickname,omitempty"`      // 用户在部落的昵称
	Dname      string                 `protobuf:"bytes,10,opt,name=Dname,proto3" json:"Dname,omitempty"`           // 社区配置名称
	IsVerify   int64                  `protobuf:"varint,11,opt,name=IsVerify,proto3" json:"IsVerify,omitempty"`    // 加入部落是否要审核 0否，1是
	IsSearch   int64                  `protobuf:"varint,12,opt,name=IsSearch,proto3" json:"IsSearch,omitempty"`    // 部落是否可搜索 0否，1是
	IsQuery    int64                  `protobuf:"varint,13,opt,name=IsQuery,proto3" json:"IsQuery,omitempty"`      // 成员直接互相访问 0否，1是
	ShowStat   int64                  `protobuf:"varint,14,opt,name=ShowStat,proto3" json:"ShowStat,omitempty"`    // 是否显示统计 0否，1是
	Type       int64                  `protobuf:"varint,15,opt,name=Type,proto3" json:"Type,omitempty"`            // 部落类型
	Notify     int64                  `protobuf:"varint,16,opt,name=Notify,proto3" json:"Notify,omitempty"`        // 通知状态
	Zones      []*ClubInfoResZones    `protobuf:"bytes,17,rep,name=Zones,proto3" json:"Zones,omitempty"`           // 部落分组
	AccessList *ClubInfoResAccessList `protobuf:"bytes,18,opt,name=AccessList,proto3" json:"AccessList,omitempty"` // 权限信息
	Dynamic    []*ClubInfoResDynamic  `protobuf:"bytes,19,rep,name=Dynamic,proto3" json:"Dynamic,omitempty"`       // 部落动态
	Dapp       *ClubInfoResZonesDapp  `protobuf:"bytes,20,opt,name=Dapp,proto3" json:"Dapp,omitempty"`             // 部落应用
	Users      []int64                `protobuf:"varint,21,rep,packed,name=Users,proto3" json:"Users,omitempty"`   // 最近加入部落到用户users Id
	CommonResp *CommonResp            `protobuf:"bytes,22,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *ClubInfoRes) Reset() {
	*x = ClubInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubInfoRes) ProtoMessage() {}

func (x *ClubInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubInfoRes.ProtoReflect.Descriptor instead.
func (*ClubInfoRes) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{5}
}

func (x *ClubInfoRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClubInfoRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClubInfoRes) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ClubInfoRes) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ClubInfoRes) GetBg() string {
	if x != nil {
		return x.Bg
	}
	return ""
}

func (x *ClubInfoRes) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *ClubInfoRes) GetInClub() int64 {
	if x != nil {
		return x.InClub
	}
	return 0
}

func (x *ClubInfoRes) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *ClubInfoRes) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ClubInfoRes) GetDname() string {
	if x != nil {
		return x.Dname
	}
	return ""
}

func (x *ClubInfoRes) GetIsVerify() int64 {
	if x != nil {
		return x.IsVerify
	}
	return 0
}

func (x *ClubInfoRes) GetIsSearch() int64 {
	if x != nil {
		return x.IsSearch
	}
	return 0
}

func (x *ClubInfoRes) GetIsQuery() int64 {
	if x != nil {
		return x.IsQuery
	}
	return 0
}

func (x *ClubInfoRes) GetShowStat() int64 {
	if x != nil {
		return x.ShowStat
	}
	return 0
}

func (x *ClubInfoRes) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ClubInfoRes) GetNotify() int64 {
	if x != nil {
		return x.Notify
	}
	return 0
}

func (x *ClubInfoRes) GetZones() []*ClubInfoResZones {
	if x != nil {
		return x.Zones
	}
	return nil
}

func (x *ClubInfoRes) GetAccessList() *ClubInfoResAccessList {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *ClubInfoRes) GetDynamic() []*ClubInfoResDynamic {
	if x != nil {
		return x.Dynamic
	}
	return nil
}

func (x *ClubInfoRes) GetDapp() *ClubInfoResZonesDapp {
	if x != nil {
		return x.Dapp
	}
	return nil
}

func (x *ClubInfoRes) GetUsers() []int64 {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ClubInfoRes) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type ClubInfoResZones struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64                       `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`            // 分组id
	TbMid    int64                       `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`      // 部落id
	Name     string                      `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`         // 分组名称
	IsDel    int64                       `protobuf:"varint,4,opt,name=IsDel,proto3" json:"IsDel,omitempty"`      // 是否删除 0否，1是
	Sort     int64                       `protobuf:"varint,5,opt,name=Sort,proto3" json:"Sort,omitempty"`        // 排序
	Ctime    int64                       `protobuf:"varint,6,opt,name=Ctime,proto3" json:"Ctime,omitempty"`      // 创建时间
	IsShow   int64                       `protobuf:"varint,7,opt,name=IsShow,proto3" json:"IsShow,omitempty"`    // 是否展示 0否，1是
	Status   string                      `protobuf:"bytes,8,opt,name=Status,proto3" json:"Status,omitempty"`     // 状态
	Channels []*ClubInfoResZonesChannels `protobuf:"bytes,9,rep,name=Channels,proto3" json:"Channels,omitempty"` // 频道列表
}

func (x *ClubInfoResZones) Reset() {
	*x = ClubInfoResZones{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubInfoResZones) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubInfoResZones) ProtoMessage() {}

func (x *ClubInfoResZones) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubInfoResZones.ProtoReflect.Descriptor instead.
func (*ClubInfoResZones) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{6}
}

func (x *ClubInfoResZones) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ClubInfoResZones) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ClubInfoResZones) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClubInfoResZones) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *ClubInfoResZones) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ClubInfoResZones) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ClubInfoResZones) GetIsShow() int64 {
	if x != nil {
		return x.IsShow
	}
	return 0
}

func (x *ClubInfoResZones) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ClubInfoResZones) GetChannels() []*ClubInfoResZonesChannels {
	if x != nil {
		return x.Channels
	}
	return nil
}

type ClubInfoResZonesChannels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain     int64                 `protobuf:"varint,1,opt,name=Chain,proto3" json:"Chain,omitempty"`        // 所属链（1000000:ETH,1000001:Polygon,2000000:BTC,3000000:TRON）
	CleanTime string                `protobuf:"bytes,2,opt,name=CleanTime,proto3" json:"CleanTime,omitempty"` // 自动清理时间，单位分钟
	Coins     float32               `protobuf:"fixed32,3,opt,name=Coins,proto3" json:"Coins,omitempty"`       // 小于0表示不限制，大于等于0为最低额度限制
	Ctime     int64                 `protobuf:"varint,4,opt,name=Ctime,proto3" json:"Ctime,omitempty"`        // 创建时间
	Desc      string                `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`           // 简介
	Frozen    int64                 `protobuf:"varint,6,opt,name=Frozen,proto3" json:"Frozen,omitempty"`      // 用户状态 0正常，1锁定，2冻结
	Icon      string                `protobuf:"bytes,7,opt,name=Icon,proto3" json:"Icon,omitempty"`           // 图片
	ID        int64                 `protobuf:"varint,8,opt,name=ID,proto3" json:"ID,omitempty"`              // 频道id
	ImID      string                `protobuf:"bytes,9,opt,name=ImID,proto3" json:"ImID,omitempty"`           // im_id
	IsBan     int64                 `protobuf:"varint,10,opt,name=IsBan,proto3" json:"IsBan,omitempty"`       // 是否全员禁言：0否1是
	IsBlock   int64                 `protobuf:"varint,11,opt,name=IsBlock,proto3" json:"IsBlock,omitempty"`   // 管理员封禁：0否1是
	IsClean   int64                 `protobuf:"varint,12,opt,name=IsClean,proto3" json:"IsClean,omitempty"`   // 是否自动清理消息：0否1是
	IsDel     int64                 `protobuf:"varint,13,opt,name=IsDel,proto3" json:"IsDel,omitempty"`       // 是否删除：0否1是
	MapID     string                `protobuf:"bytes,14,opt,name=MapID,proto3" json:"MapID,omitempty"`        // 环信im id
	Name      string                `protobuf:"bytes,15,opt,name=Name,proto3" json:"Name,omitempty"`          // 频道名
	Property  int64                 `protobuf:"varint,16,opt,name=Property,proto3" json:"Property,omitempty"` // 0:持有数字货币，1:持有数字藏品,2:无限制
	Sort      int64                 `protobuf:"varint,17,opt,name=Sort,proto3" json:"Sort,omitempty"`         // 排序
	TbMid     int64                 `protobuf:"varint,18,opt,name=TbMid,proto3" json:"TbMid,omitempty"`       // 部落id
	TbZid     int64                 `protobuf:"varint,19,opt,name=TbZid,proto3" json:"TbZid,omitempty"`       // 分组id
	Type      int64                 `protobuf:"varint,20,opt,name=Type,proto3" json:"Type,omitempty"`         // 频道类型：0文字房子；1语音房间
	Dapp      *ClubInfoResZonesDapp `protobuf:"bytes,21,opt,name=Dapp,proto3" json:"Dapp,omitempty"`          // dapp
}

func (x *ClubInfoResZonesChannels) Reset() {
	*x = ClubInfoResZonesChannels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubInfoResZonesChannels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubInfoResZonesChannels) ProtoMessage() {}

func (x *ClubInfoResZonesChannels) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubInfoResZonesChannels.ProtoReflect.Descriptor instead.
func (*ClubInfoResZonesChannels) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{7}
}

func (x *ClubInfoResZonesChannels) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetCleanTime() string {
	if x != nil {
		return x.CleanTime
	}
	return ""
}

func (x *ClubInfoResZonesChannels) GetCoins() float32 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ClubInfoResZonesChannels) GetFrozen() int64 {
	if x != nil {
		return x.Frozen
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ClubInfoResZonesChannels) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetImID() string {
	if x != nil {
		return x.ImID
	}
	return ""
}

func (x *ClubInfoResZonesChannels) GetIsBan() int64 {
	if x != nil {
		return x.IsBan
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetIsBlock() int64 {
	if x != nil {
		return x.IsBlock
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetIsClean() int64 {
	if x != nil {
		return x.IsClean
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetMapID() string {
	if x != nil {
		return x.MapID
	}
	return ""
}

func (x *ClubInfoResZonesChannels) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClubInfoResZonesChannels) GetProperty() int64 {
	if x != nil {
		return x.Property
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ClubInfoResZonesChannels) GetDapp() *ClubInfoResZonesDapp {
	if x != nil {
		return x.Dapp
	}
	return nil
}

type ClubInfoResAccessList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMaster int64                        `protobuf:"varint,1,opt,name=IsMaster,proto3" json:"IsMaster,omitempty"` // 是否群主
	IsRole   int64                        `protobuf:"varint,2,opt,name=IsRole,proto3" json:"IsRole,omitempty"`     // （已弃用)是否管理员
	MinSort  int64                        `protobuf:"varint,3,opt,name=MinSort,proto3" json:"MinSort,omitempty"`   // （已弃用)最大权重值
	Access   *ClubInfoResAccessListAccess `protobuf:"bytes,4,opt,name=Access,proto3" json:"Access,omitempty"`      // 权限列表
}

func (x *ClubInfoResAccessList) Reset() {
	*x = ClubInfoResAccessList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubInfoResAccessList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubInfoResAccessList) ProtoMessage() {}

func (x *ClubInfoResAccessList) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubInfoResAccessList.ProtoReflect.Descriptor instead.
func (*ClubInfoResAccessList) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{8}
}

func (x *ClubInfoResAccessList) GetIsMaster() int64 {
	if x != nil {
		return x.IsMaster
	}
	return 0
}

func (x *ClubInfoResAccessList) GetIsRole() int64 {
	if x != nil {
		return x.IsRole
	}
	return 0
}

func (x *ClubInfoResAccessList) GetMinSort() int64 {
	if x != nil {
		return x.MinSort
	}
	return 0
}

func (x *ClubInfoResAccessList) GetAccess() *ClubInfoResAccessListAccess {
	if x != nil {
		return x.Access
	}
	return nil
}

type ClubInfoResAccessListAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MCommunity int64 `protobuf:"varint,1,opt,name=MCommunity,proto3" json:"MCommunity,omitempty"` // 管理社区权限
	MMain      int64 `protobuf:"varint,2,opt,name=MMain,proto3" json:"MMain,omitempty"`           // 管理部落权限
	MMembers   int64 `protobuf:"varint,3,opt,name=MMembers,proto3" json:"MMembers,omitempty"`     // 管理成员权限
	MMessage   int64 `protobuf:"varint,4,opt,name=MMessage,proto3" json:"MMessage,omitempty"`     // 管理消息权限
	PComment   int64 `protobuf:"varint,5,opt,name=PComment,proto3" json:"PComment,omitempty"`     // 评论动态权限
	PStories   int64 `protobuf:"varint,6,opt,name=PStories,proto3" json:"PStories,omitempty"`     // 发送动态权限
	SInvite    int64 `protobuf:"varint,7,opt,name=SInvite,proto3" json:"SInvite,omitempty"`       // 创建邀请（1有权限 0没有 默认值是全体成员默认权限）
	SMessage   int64 `protobuf:"varint,8,opt,name=SMessage,proto3" json:"SMessage,omitempty"`     // 发送消息权限
	MChannel   int64 `protobuf:"varint,9,opt,name=MChannel,proto3" json:"MChannel,omitempty"`     // 管理房间
}

func (x *ClubInfoResAccessListAccess) Reset() {
	*x = ClubInfoResAccessListAccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubInfoResAccessListAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubInfoResAccessListAccess) ProtoMessage() {}

func (x *ClubInfoResAccessListAccess) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubInfoResAccessListAccess.ProtoReflect.Descriptor instead.
func (*ClubInfoResAccessListAccess) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{9}
}

func (x *ClubInfoResAccessListAccess) GetMCommunity() int64 {
	if x != nil {
		return x.MCommunity
	}
	return 0
}

func (x *ClubInfoResAccessListAccess) GetMMain() int64 {
	if x != nil {
		return x.MMain
	}
	return 0
}

func (x *ClubInfoResAccessListAccess) GetMMembers() int64 {
	if x != nil {
		return x.MMembers
	}
	return 0
}

func (x *ClubInfoResAccessListAccess) GetMMessage() int64 {
	if x != nil {
		return x.MMessage
	}
	return 0
}

func (x *ClubInfoResAccessListAccess) GetPComment() int64 {
	if x != nil {
		return x.PComment
	}
	return 0
}

func (x *ClubInfoResAccessListAccess) GetPStories() int64 {
	if x != nil {
		return x.PStories
	}
	return 0
}

func (x *ClubInfoResAccessListAccess) GetSInvite() int64 {
	if x != nil {
		return x.SInvite
	}
	return 0
}

func (x *ClubInfoResAccessListAccess) GetSMessage() int64 {
	if x != nil {
		return x.SMessage
	}
	return 0
}

func (x *ClubInfoResAccessListAccess) GetMChannel() int64 {
	if x != nil {
		return x.MChannel
	}
	return 0
}

type ClubInfoResDynamic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           int64                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type         int64                  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`     // 0：普通用户动态，1：抖音链接，2长文
	Title        string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`    // 标题
	Imgs         string                 `protobuf:"bytes,4,opt,name=Imgs,proto3" json:"Imgs,omitempty"`      // 图片
	Desc         string                 `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`      // 内容
	Ctime        int64                  `protobuf:"varint,6,opt,name=Ctime,proto3" json:"Ctime,omitempty"`   // 创建时间
	Etime        int64                  `protobuf:"varint,7,opt,name=Etime,proto3" json:"Etime,omitempty"`   // 最后编辑时间
	Status       int64                  `protobuf:"varint,8,opt,name=Status,proto3" json:"Status,omitempty"` // 状态 -1已删除,0编辑中，1已发布
	Ext          *ClubInfoResDynamicExt `protobuf:"bytes,9,opt,name=Ext,proto3" json:"Ext,omitempty"`
	ImgType      int64                  `protobuf:"varint,10,opt,name=ImgType,proto3" json:"ImgType,omitempty"`         // 客户端布局处理（0 多图 1横图 2竖图）
	IsRecommend  int64                  `protobuf:"varint,11,opt,name=IsRecommend,proto3" json:"IsRecommend,omitempty"` // 是否推荐 0否，1是
	Nick         string                 `protobuf:"bytes,12,opt,name=Nick,proto3" json:"Nick,omitempty"`                // 发布者昵称
	Avatar       string                 `protobuf:"bytes,13,opt,name=Avatar,proto3" json:"Avatar,omitempty"`            // 发布者头像
	Did          int64                  `protobuf:"varint,14,opt,name=Did,proto3" json:"Did,omitempty"`
	Duid         int64                  `protobuf:"varint,15,opt,name=Duid,proto3" json:"Duid,omitempty"` // 发布者id
	HasPraised   int64                  `protobuf:"varint,16,opt,name=HasPraised,proto3" json:"HasPraised,omitempty"`
	PraiseCount  int64                  `protobuf:"varint,17,opt,name=PraiseCount,proto3" json:"PraiseCount,omitempty"`   // 点赞数
	CommentCount int64                  `protobuf:"varint,18,opt,name=CommentCount,proto3" json:"CommentCount,omitempty"` // 评论数
	CanShare     int64                  `protobuf:"varint,19,opt,name=CanShare,proto3" json:"CanShare,omitempty"`         // 是否可以被分享
}

func (x *ClubInfoResDynamic) Reset() {
	*x = ClubInfoResDynamic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubInfoResDynamic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubInfoResDynamic) ProtoMessage() {}

func (x *ClubInfoResDynamic) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubInfoResDynamic.ProtoReflect.Descriptor instead.
func (*ClubInfoResDynamic) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{10}
}

func (x *ClubInfoResDynamic) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ClubInfoResDynamic) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ClubInfoResDynamic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ClubInfoResDynamic) GetImgs() string {
	if x != nil {
		return x.Imgs
	}
	return ""
}

func (x *ClubInfoResDynamic) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ClubInfoResDynamic) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ClubInfoResDynamic) GetEtime() int64 {
	if x != nil {
		return x.Etime
	}
	return 0
}

func (x *ClubInfoResDynamic) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ClubInfoResDynamic) GetExt() *ClubInfoResDynamicExt {
	if x != nil {
		return x.Ext
	}
	return nil
}

func (x *ClubInfoResDynamic) GetImgType() int64 {
	if x != nil {
		return x.ImgType
	}
	return 0
}

func (x *ClubInfoResDynamic) GetIsRecommend() int64 {
	if x != nil {
		return x.IsRecommend
	}
	return 0
}

func (x *ClubInfoResDynamic) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *ClubInfoResDynamic) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ClubInfoResDynamic) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *ClubInfoResDynamic) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

func (x *ClubInfoResDynamic) GetHasPraised() int64 {
	if x != nil {
		return x.HasPraised
	}
	return 0
}

func (x *ClubInfoResDynamic) GetPraiseCount() int64 {
	if x != nil {
		return x.PraiseCount
	}
	return 0
}

func (x *ClubInfoResDynamic) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *ClubInfoResDynamic) GetCanShare() int64 {
	if x != nil {
		return x.CanShare
	}
	return 0
}

type ClubInfoResDynamicExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link string `protobuf:"bytes,1,opt,name=Link,proto3" json:"Link,omitempty"` // 文章类型的链接
}

func (x *ClubInfoResDynamicExt) Reset() {
	*x = ClubInfoResDynamicExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubInfoResDynamicExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubInfoResDynamicExt) ProtoMessage() {}

func (x *ClubInfoResDynamicExt) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubInfoResDynamicExt.ProtoReflect.Descriptor instead.
func (*ClubInfoResDynamicExt) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{11}
}

func (x *ClubInfoResDynamicExt) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type ClubInfoResZonesDapp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctime      int64  `protobuf:"varint,1,opt,name=Ctime,proto3" json:"Ctime,omitempty"`           // 创建时间
	DappDesc   string `protobuf:"bytes,2,opt,name=DappDesc,proto3" json:"DappDesc,omitempty"`      // 应该简介
	DappLogo   string `protobuf:"bytes,3,opt,name=DappLogo,proto3" json:"DappLogo,omitempty"`      // logo
	DappName   string `protobuf:"bytes,4,opt,name=DappName,proto3" json:"DappName,omitempty"`      // 名称
	ID         int64  `protobuf:"varint,5,opt,name=ID,proto3" json:"ID,omitempty"`                 // id
	IsOfficial int64  `protobuf:"varint,6,opt,name=IsOfficial,proto3" json:"IsOfficial,omitempty"` // 是否官方 2否，1是
	TbMid      int64  `protobuf:"varint,7,opt,name=TbMid,proto3" json:"TbMid,omitempty"`           // 部落id
	UserID     int64  `protobuf:"varint,8,opt,name=UserID,proto3" json:"UserID,omitempty"`         // 添加应用者
	DappUrl    string `protobuf:"bytes,9,opt,name=DappUrl,proto3" json:"DappUrl,omitempty"`        // 应用链接
}

func (x *ClubInfoResZonesDapp) Reset() {
	*x = ClubInfoResZonesDapp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubInfoResZonesDapp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubInfoResZonesDapp) ProtoMessage() {}

func (x *ClubInfoResZonesDapp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubInfoResZonesDapp.ProtoReflect.Descriptor instead.
func (*ClubInfoResZonesDapp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{12}
}

func (x *ClubInfoResZonesDapp) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ClubInfoResZonesDapp) GetDappDesc() string {
	if x != nil {
		return x.DappDesc
	}
	return ""
}

func (x *ClubInfoResZonesDapp) GetDappLogo() string {
	if x != nil {
		return x.DappLogo
	}
	return ""
}

func (x *ClubInfoResZonesDapp) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *ClubInfoResZonesDapp) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ClubInfoResZonesDapp) GetIsOfficial() int64 {
	if x != nil {
		return x.IsOfficial
	}
	return 0
}

func (x *ClubInfoResZonesDapp) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ClubInfoResZonesDapp) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ClubInfoResZonesDapp) GetDappUrl() string {
	if x != nil {
		return x.DappUrl
	}
	return ""
}

// * 群用户状态
type GroupUserStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` // 用户id
	ImId   string `protobuf:"bytes,2,opt,name=ImId,proto3" json:"ImId,omitempty"`      // im_id 我们服务端自己的生成的id
}

func (x *GroupUserStatusReq) Reset() {
	*x = GroupUserStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupUserStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUserStatusReq) ProtoMessage() {}

func (x *GroupUserStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUserStatusReq.ProtoReflect.Descriptor instead.
func (*GroupUserStatusReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{13}
}

func (x *GroupUserStatusReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GroupUserStatusReq) GetImId() string {
	if x != nil {
		return x.ImId
	}
	return ""
}

type GroupUserStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frozen    int64 `protobuf:"varint,1,opt,name=Frozen,proto3" json:"Frozen,omitempty"`       // 用户状态 0正常，1锁定，2冻结
	Gag       int64 `protobuf:"varint,2,opt,name=Gag,proto3" json:"Gag,omitempty"`             // 禁言状态 0正常，1全体禁言，2单人禁言
	IsClean   int64 `protobuf:"varint,3,opt,name=IsClean,proto3" json:"IsClean,omitempty"`     // 是否清除聊天记录 0否，1是
	CleanTime int64 `protobuf:"varint,4,opt,name=CleanTime,proto3" json:"CleanTime,omitempty"` // 消息清理时间 单位分钟
}

func (x *GroupUserStatusRes) Reset() {
	*x = GroupUserStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupUserStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUserStatusRes) ProtoMessage() {}

func (x *GroupUserStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUserStatusRes.ProtoReflect.Descriptor instead.
func (*GroupUserStatusRes) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{14}
}

func (x *GroupUserStatusRes) GetFrozen() int64 {
	if x != nil {
		return x.Frozen
	}
	return 0
}

func (x *GroupUserStatusRes) GetGag() int64 {
	if x != nil {
		return x.Gag
	}
	return 0
}

func (x *GroupUserStatusRes) GetIsClean() int64 {
	if x != nil {
		return x.IsClean
	}
	return 0
}

func (x *GroupUserStatusRes) GetCleanTime() int64 {
	if x != nil {
		return x.CleanTime
	}
	return 0
}

// *群信息
type GroupInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupType GroupType `protobuf:"varint,1,opt,name=GroupType,proto3,enum=club.GroupType" json:"GroupType,omitempty"` // 群类型
	TbMid     int64     `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`                             // 部落id 查询部落时需要
	ImId      string    `protobuf:"bytes,3,opt,name=ImId,proto3" json:"ImId,omitempty"`                                // im_id 查询群聊或频道
}

func (x *GroupInfoReq) Reset() {
	*x = GroupInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoReq) ProtoMessage() {}

func (x *GroupInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoReq.ProtoReflect.Descriptor instead.
func (*GroupInfoReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{15}
}

func (x *GroupInfoReq) GetGroupType() GroupType {
	if x != nil {
		return x.GroupType
	}
	return GroupType_SUP_GROUP
}

func (x *GroupInfoReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *GroupInfoReq) GetImId() string {
	if x != nil {
		return x.ImId
	}
	return ""
}

type GroupInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64     `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                // mysql自增id
	Name      string    `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`             // 名称
	Desc      string    `protobuf:"bytes,3,opt,name=Desc,proto3" json:"Desc,omitempty"`             // 简介
	Avatar    string    `protobuf:"bytes,4,opt,name=Avatar,proto3" json:"Avatar,omitempty"`         // 群聊头像
	Icon      string    `protobuf:"bytes,5,opt,name=Icon,proto3" json:"Icon,omitempty"`             // 图标
	Bg        string    `protobuf:"bytes,6,opt,name=Bg,proto3" json:"Bg,omitempty"`                 // 自定义背景图片
	Type      int64     `protobuf:"varint,7,opt,name=Type,proto3" json:"Type,omitempty"`            // 类型
	Master    int64     `protobuf:"varint,8,opt,name=Master,proto3" json:"Master,omitempty"`        // 群主
	Count     int64     `protobuf:"varint,9,opt,name=Count,proto3" json:"Count,omitempty"`          // 人数
	ImId      string    `protobuf:"bytes,10,opt,name=ImId,proto3" json:"ImId,omitempty"`            // 系统内唯一id
	Sort      int64     `protobuf:"varint,11,opt,name=Sort,proto3" json:"Sort,omitempty"`           // 排序
	Ctime     int64     `protobuf:"varint,12,opt,name=Ctime,proto3" json:"Ctime,omitempty"`         // 创建时间
	Property  int64     `protobuf:"varint,13,opt,name=Property,proto3" json:"Property,omitempty"`   // 0:持有数字货币，1:持有数字藏品,2:无限制
	Chain     int64     `protobuf:"varint,14,opt,name=Chain,proto3" json:"Chain,omitempty"`         // 所属链（1000000:ETH,1000001:Polygon,2000000:BTC,3000000:TRON）
	Coins     float32   `protobuf:"fixed32,15,opt,name=Coins,proto3" json:"Coins,omitempty"`        // 小于0表示不限制，大于等于0为最低额度限制
	IsDel     int64     `protobuf:"varint,16,opt,name=IsDel,proto3" json:"IsDel,omitempty"`         // 是否删除：0否1是
	IsBan     int64     `protobuf:"varint,17,opt,name=IsBan,proto3" json:"IsBan,omitempty"`         // 是否全员禁言：0否1是
	IsClean   int64     `protobuf:"varint,18,opt,name=IsClean,proto3" json:"IsClean,omitempty"`     // 是否自动清理消息：0否1是
	CleanTime int64     `protobuf:"varint,19,opt,name=CleanTime,proto3" json:"CleanTime,omitempty"` // 自动清理时间，单位分钟
	IsBlock   int64     `protobuf:"varint,20,opt,name=IsBlock,proto3" json:"IsBlock,omitempty"`     // 管理员封禁：0否1是
	IsVerify  int64     `protobuf:"varint,21,opt,name=IsVerify,proto3" json:"IsVerify,omitempty"`   // 加入是否审核：0否1是
	IsSearch  int64     `protobuf:"varint,22,opt,name=IsSearch,proto3" json:"IsSearch,omitempty"`   // 是否可被搜索：0否1是
	IsQuery   int64     `protobuf:"varint,23,opt,name=IsQuery,proto3" json:"IsQuery,omitempty"`     // 成员是否看相互访问：0否1是
	Status    int64     `protobuf:"varint,24,opt,name=Status,proto3" json:"Status,omitempty"`       // 群状态：0初始化 2:正常 3:已删除
	Api       string    `protobuf:"bytes,25,opt,name=Api,proto3" json:"Api,omitempty"`              // 创建api
	Ext       *GroupExt `protobuf:"bytes,26,opt,name=Ext,proto3" json:"Ext,omitempty"`              // 拓展信息
}

func (x *GroupInfoRes) Reset() {
	*x = GroupInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoRes) ProtoMessage() {}

func (x *GroupInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoRes.ProtoReflect.Descriptor instead.
func (*GroupInfoRes) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{16}
}

func (x *GroupInfoRes) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupInfoRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupInfoRes) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GroupInfoRes) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupInfoRes) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *GroupInfoRes) GetBg() string {
	if x != nil {
		return x.Bg
	}
	return ""
}

func (x *GroupInfoRes) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GroupInfoRes) GetMaster() int64 {
	if x != nil {
		return x.Master
	}
	return 0
}

func (x *GroupInfoRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GroupInfoRes) GetImId() string {
	if x != nil {
		return x.ImId
	}
	return ""
}

func (x *GroupInfoRes) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GroupInfoRes) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *GroupInfoRes) GetProperty() int64 {
	if x != nil {
		return x.Property
	}
	return 0
}

func (x *GroupInfoRes) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *GroupInfoRes) GetCoins() float32 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *GroupInfoRes) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *GroupInfoRes) GetIsBan() int64 {
	if x != nil {
		return x.IsBan
	}
	return 0
}

func (x *GroupInfoRes) GetIsClean() int64 {
	if x != nil {
		return x.IsClean
	}
	return 0
}

func (x *GroupInfoRes) GetCleanTime() int64 {
	if x != nil {
		return x.CleanTime
	}
	return 0
}

func (x *GroupInfoRes) GetIsBlock() int64 {
	if x != nil {
		return x.IsBlock
	}
	return 0
}

func (x *GroupInfoRes) GetIsVerify() int64 {
	if x != nil {
		return x.IsVerify
	}
	return 0
}

func (x *GroupInfoRes) GetIsSearch() int64 {
	if x != nil {
		return x.IsSearch
	}
	return 0
}

func (x *GroupInfoRes) GetIsQuery() int64 {
	if x != nil {
		return x.IsQuery
	}
	return 0
}

func (x *GroupInfoRes) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GroupInfoRes) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *GroupInfoRes) GetExt() *GroupExt {
	if x != nil {
		return x.Ext
	}
	return nil
}

type GroupExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid     string `protobuf:"bytes,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`         // 超级群唯一标识
	TbZid     string `protobuf:"bytes,2,opt,name=TbZid,proto3" json:"TbZid,omitempty"`         // 分组唯一标识
	EasemobId string `protobuf:"bytes,3,opt,name=EasemobId,proto3" json:"EasemobId,omitempty"` // 环信群id
}

func (x *GroupExt) Reset() {
	*x = GroupExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupExt) ProtoMessage() {}

func (x *GroupExt) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupExt.ProtoReflect.Descriptor instead.
func (*GroupExt) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{17}
}

func (x *GroupExt) GetTbMid() string {
	if x != nil {
		return x.TbMid
	}
	return ""
}

func (x *GroupExt) GetTbZid() string {
	if x != nil {
		return x.TbZid
	}
	return ""
}

func (x *GroupExt) GetEasemobId() string {
	if x != nil {
		return x.EasemobId
	}
	return ""
}

type APIError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`      //错误码 0正常
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"` //错误消息
}

func (x *APIError) Reset() {
	*x = APIError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIError) ProtoMessage() {}

func (x *APIError) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIError.ProtoReflect.Descriptor instead.
func (*APIError) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{18}
}

func (x *APIError) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *APIError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type APICommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *APIError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	Data  string    `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *APICommonResponse) Reset() {
	*x = APICommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APICommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APICommonResponse) ProtoMessage() {}

func (x *APICommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APICommonResponse.ProtoReflect.Descriptor instead.
func (*APICommonResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{19}
}

func (x *APICommonResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *APICommonResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type SetClubRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid string `protobuf:"bytes,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"` //部落ID
	Did   int64  `protobuf:"varint,2,opt,name=Did,proto3" json:"Did,omitempty"`    //动态ID
	Duid  int64  `protobuf:"varint,3,opt,name=Duid,proto3" json:"Duid,omitempty"`  //动态发布者UID
	Opt   int64  `protobuf:"varint,4,opt,name=Opt,proto3" json:"Opt,omitempty"`    //0下架 1推荐 2取消推荐
}

func (x *SetClubRecommendRequest) Reset() {
	*x = SetClubRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetClubRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetClubRecommendRequest) ProtoMessage() {}

func (x *SetClubRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetClubRecommendRequest.ProtoReflect.Descriptor instead.
func (*SetClubRecommendRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{20}
}

func (x *SetClubRecommendRequest) GetTbMid() string {
	if x != nil {
		return x.TbMid
	}
	return ""
}

func (x *SetClubRecommendRequest) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *SetClubRecommendRequest) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

func (x *SetClubRecommendRequest) GetOpt() int64 {
	if x != nil {
		return x.Opt
	}
	return 0
}

type SetClubDynamicActRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"` // 部落id
	Did   int64 `protobuf:"varint,2,opt,name=Did,proto3" json:"Did,omitempty"`     // 动态id
	Duid  int64 `protobuf:"varint,3,opt,name=Duid,proto3" json:"Duid,omitempty"`   // 发布者Uid
	Opt   int64 `protobuf:"varint,4,opt,name=Opt,proto3" json:"Opt,omitempty"`     // 0 删除
}

func (x *SetClubDynamicActRequest) Reset() {
	*x = SetClubDynamicActRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetClubDynamicActRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetClubDynamicActRequest) ProtoMessage() {}

func (x *SetClubDynamicActRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetClubDynamicActRequest.ProtoReflect.Descriptor instead.
func (*SetClubDynamicActRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{21}
}

func (x *SetClubDynamicActRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *SetClubDynamicActRequest) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *SetClubDynamicActRequest) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

func (x *SetClubDynamicActRequest) GetOpt() int64 {
	if x != nil {
		return x.Opt
	}
	return 0
}

type ClubDynamicCfg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`    // 社区名称
	BgImg string `protobuf:"bytes,2,opt,name=BgImg,proto3" json:"BgImg,omitempty"`  // 社区背景图
	IsPub int64  `protobuf:"varint,3,opt,name=IsPub,proto3" json:"IsPub,omitempty"` // 社区动态是否公开 1公开 0不公开
	TbMid int64  `protobuf:"varint,4,opt,name=TbMid,proto3" json:"TbMid,omitempty"` // 部落ID
}

func (x *ClubDynamicCfg) Reset() {
	*x = ClubDynamicCfg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubDynamicCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubDynamicCfg) ProtoMessage() {}

func (x *ClubDynamicCfg) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubDynamicCfg.ProtoReflect.Descriptor instead.
func (*ClubDynamicCfg) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{22}
}

func (x *ClubDynamicCfg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClubDynamicCfg) GetBgImg() string {
	if x != nil {
		return x.BgImg
	}
	return ""
}

func (x *ClubDynamicCfg) GetIsPub() int64 {
	if x != nil {
		return x.IsPub
	}
	return 0
}

func (x *ClubDynamicCfg) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

type ClubDynamicStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64 `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`             // 部落动态总数
	Participate int64 `protobuf:"varint,2,opt,name=Participate,proto3" json:"Participate,omitempty"` // 部落参与数
}

func (x *ClubDynamicStatistics) Reset() {
	*x = ClubDynamicStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubDynamicStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubDynamicStatistics) ProtoMessage() {}

func (x *ClubDynamicStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubDynamicStatistics.ProtoReflect.Descriptor instead.
func (*ClubDynamicStatistics) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{23}
}

func (x *ClubDynamicStatistics) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ClubDynamicStatistics) GetParticipate() int64 {
	if x != nil {
		return x.Participate
	}
	return 0
}

type SaveClubDynamicCfgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cfg *ClubDynamicCfg `protobuf:"bytes,1,opt,name=cfg,proto3" json:"cfg,omitempty"` // 部落社区管理
}

func (x *SaveClubDynamicCfgRequest) Reset() {
	*x = SaveClubDynamicCfgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveClubDynamicCfgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveClubDynamicCfgRequest) ProtoMessage() {}

func (x *SaveClubDynamicCfgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveClubDynamicCfgRequest.ProtoReflect.Descriptor instead.
func (*SaveClubDynamicCfgRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{24}
}

func (x *SaveClubDynamicCfgRequest) GetCfg() *ClubDynamicCfg {
	if x != nil {
		return x.Cfg
	}
	return nil
}

type GetClubDynamicCfgsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMids []string `protobuf:"bytes,1,rep,name=TbMids,proto3" json:"TbMids,omitempty"` // 部落id,多个部落id用,分割
}

func (x *GetClubDynamicCfgsRequest) Reset() {
	*x = GetClubDynamicCfgsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClubDynamicCfgsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClubDynamicCfgsRequest) ProtoMessage() {}

func (x *GetClubDynamicCfgsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClubDynamicCfgsRequest.ProtoReflect.Descriptor instead.
func (*GetClubDynamicCfgsRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{25}
}

func (x *GetClubDynamicCfgsRequest) GetTbMids() []string {
	if x != nil {
		return x.TbMids
	}
	return nil
}

type GetClubDynamicCfgsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cfg   []*ClubDynamicCfg `protobuf:"bytes,1,rep,name=cfg,proto3" json:"cfg,omitempty"` // 部落动态社区配置信息
	Error *APIError         `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *GetClubDynamicCfgsResponse) Reset() {
	*x = GetClubDynamicCfgsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClubDynamicCfgsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClubDynamicCfgsResponse) ProtoMessage() {}

func (x *GetClubDynamicCfgsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClubDynamicCfgsResponse.ProtoReflect.Descriptor instead.
func (*GetClubDynamicCfgsResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{26}
}

func (x *GetClubDynamicCfgsResponse) GetCfg() []*ClubDynamicCfg {
	if x != nil {
		return x.Cfg
	}
	return nil
}

func (x *GetClubDynamicCfgsResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type ClubDynamicStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMids []string `protobuf:"bytes,1,rep,name=TbMids,proto3" json:"TbMids,omitempty"` // 部落id
}

func (x *ClubDynamicStatisticsRequest) Reset() {
	*x = ClubDynamicStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubDynamicStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubDynamicStatisticsRequest) ProtoMessage() {}

func (x *ClubDynamicStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubDynamicStatisticsRequest.ProtoReflect.Descriptor instead.
func (*ClubDynamicStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{27}
}

func (x *ClubDynamicStatisticsRequest) GetTbMids() []string {
	if x != nil {
		return x.TbMids
	}
	return nil
}

type ClubDynamicStatisticsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statistics []*ClubDynamicStatistics `protobuf:"bytes,1,rep,name=statistics,proto3" json:"statistics,omitempty"` // 统计数据
	Error      *APIError                `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ClubDynamicStatisticsResponse) Reset() {
	*x = ClubDynamicStatisticsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubDynamicStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubDynamicStatisticsResponse) ProtoMessage() {}

func (x *ClubDynamicStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubDynamicStatisticsResponse.ProtoReflect.Descriptor instead.
func (*ClubDynamicStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{28}
}

func (x *ClubDynamicStatisticsResponse) GetStatistics() []*ClubDynamicStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *ClubDynamicStatisticsResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type IncrClubParticipateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tbmid []int64 `protobuf:"varint,1,rep,packed,name=Tbmid,proto3" json:"Tbmid,omitempty"`
}

func (x *IncrClubParticipateRequest) Reset() {
	*x = IncrClubParticipateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrClubParticipateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrClubParticipateRequest) ProtoMessage() {}

func (x *IncrClubParticipateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrClubParticipateRequest.ProtoReflect.Descriptor instead.
func (*IncrClubParticipateRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{29}
}

func (x *IncrClubParticipateRequest) GetTbmid() []int64 {
	if x != nil {
		return x.Tbmid
	}
	return nil
}

type CreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar string  `protobuf:"bytes,1,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Desc   *string `protobuf:"bytes,3,opt,name=Desc,proto3,oneof" json:"Desc,omitempty"`
	Dapp   *string `protobuf:"bytes,4,opt,name=Dapp,proto3,oneof" json:"Dapp,omitempty"`
	UserID int64   `protobuf:"varint,5,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Bg     *string `protobuf:"bytes,6,opt,name=Bg,proto3,oneof" json:"Bg,omitempty"`
	Lan    string  `protobuf:"bytes,7,opt,name=Lan,proto3" json:"Lan,omitempty"` // 创建者系统语言版本
}

func (x *CreateReq) Reset() {
	*x = CreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReq) ProtoMessage() {}

func (x *CreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReq.ProtoReflect.Descriptor instead.
func (*CreateReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{30}
}

func (x *CreateReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateReq) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *CreateReq) GetDapp() string {
	if x != nil && x.Dapp != nil {
		return *x.Dapp
	}
	return ""
}

func (x *CreateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *CreateReq) GetBg() string {
	if x != nil && x.Bg != nil {
		return *x.Bg
	}
	return ""
}

func (x *CreateReq) GetLan() string {
	if x != nil {
		return x.Lan
	}
	return ""
}

type CreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *CreateResp) Reset() {
	*x = CreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResp) ProtoMessage() {}

func (x *CreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResp.ProtoReflect.Descriptor instead.
func (*CreateResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{31}
}

func (x *CreateResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DisturbReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  int64   `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TbMid   int64   `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`        // 部落id
	Disturb int64   `protobuf:"varint,3,opt,name=Disturb,proto3" json:"Disturb,omitempty"`    //免打扰设置
	MapIDs  *string `protobuf:"bytes,4,opt,name=MapIDs,proto3,oneof" json:"MapIDs,omitempty"` // 需要设置免打扰
}

func (x *DisturbReq) Reset() {
	*x = DisturbReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisturbReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisturbReq) ProtoMessage() {}

func (x *DisturbReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisturbReq.ProtoReflect.Descriptor instead.
func (*DisturbReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{32}
}

func (x *DisturbReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *DisturbReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *DisturbReq) GetDisturb() int64 {
	if x != nil {
		return x.Disturb
	}
	return 0
}

func (x *DisturbReq) GetMapIDs() string {
	if x != nil && x.MapIDs != nil {
		return *x.MapIDs
	}
	return ""
}

type DisturbResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisturbResp) Reset() {
	*x = DisturbResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisturbResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisturbResp) ProtoMessage() {}

func (x *DisturbResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisturbResp.ProtoReflect.Descriptor instead.
func (*DisturbResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{33}
}

type JoinApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid     int64   `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	UserID    int64   `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Content   *string `protobuf:"bytes,3,opt,name=Content,proto3,oneof" json:"Content,omitempty"`
	ShareCode *string `protobuf:"bytes,4,opt,name=ShareCode,proto3,oneof" json:"ShareCode,omitempty"` //分享码，如果分享码在有效期内，可免申请加入
}

func (x *JoinApplyReq) Reset() {
	*x = JoinApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinApplyReq) ProtoMessage() {}

func (x *JoinApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinApplyReq.ProtoReflect.Descriptor instead.
func (*JoinApplyReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{34}
}

func (x *JoinApplyReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *JoinApplyReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *JoinApplyReq) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *JoinApplyReq) GetShareCode() string {
	if x != nil && x.ShareCode != nil {
		return *x.ShareCode
	}
	return ""
}

type JoinApplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	IsPass     bool        `protobuf:"varint,2,opt,name=IsPass,proto3" json:"IsPass,omitempty"`
}

func (x *JoinApplyResp) Reset() {
	*x = JoinApplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinApplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinApplyResp) ProtoMessage() {}

func (x *JoinApplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinApplyResp.ProtoReflect.Descriptor instead.
func (*JoinApplyResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{35}
}

func (x *JoinApplyResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *JoinApplyResp) GetIsPass() bool {
	if x != nil {
		return x.IsPass
	}
	return false
}

type AuditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	OuID   int64  `protobuf:"varint,2,opt,name=OuID,proto3" json:"OuID,omitempty"`
	TbMid  int64  `protobuf:"varint,3,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	IsPass string `protobuf:"bytes,4,opt,name=IsPass,proto3" json:"IsPass,omitempty"`
}

func (x *AuditReq) Reset() {
	*x = AuditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditReq) ProtoMessage() {}

func (x *AuditReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditReq.ProtoReflect.Descriptor instead.
func (*AuditReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{36}
}

func (x *AuditReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AuditReq) GetOuID() int64 {
	if x != nil {
		return x.OuID
	}
	return 0
}

func (x *AuditReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *AuditReq) GetIsPass() string {
	if x != nil {
		return x.IsPass
	}
	return ""
}

type AuditResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubCode string `protobuf:"bytes,1,opt,name=SubCode,proto3" json:"SubCode,omitempty"`
}

func (x *AuditResp) Reset() {
	*x = AuditResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditResp) ProtoMessage() {}

func (x *AuditResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditResp.ProtoReflect.Descriptor instead.
func (*AuditResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{37}
}

func (x *AuditResp) GetSubCode() string {
	if x != nil {
		return x.SubCode
	}
	return ""
}

type GetAccessReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64  `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`   // 部落id
	UserID int64  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"` // 用户id
	Access string `protobuf:"bytes,3,opt,name=Access,proto3" json:"Access,omitempty"`  // 权限名
}

func (x *GetAccessReq) Reset() {
	*x = GetAccessReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccessReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessReq) ProtoMessage() {}

func (x *GetAccessReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessReq.ProtoReflect.Descriptor instead.
func (*GetAccessReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{38}
}

func (x *GetAccessReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *GetAccessReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetAccessReq) GetAccess() string {
	if x != nil {
		return x.Access
	}
	return ""
}

type GetAccessResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthRes bool `protobuf:"varint,1,opt,name=AuthRes,proto3" json:"AuthRes,omitempty"`
}

func (x *GetAccessResp) Reset() {
	*x = GetAccessResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccessResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessResp) ProtoMessage() {}

func (x *GetAccessResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessResp.ProtoReflect.Descriptor instead.
func (*GetAccessResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{39}
}

func (x *GetAccessResp) GetAuthRes() bool {
	if x != nil {
		return x.AuthRes
	}
	return false
}

type QuitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	UserID int64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *QuitReq) Reset() {
	*x = QuitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitReq) ProtoMessage() {}

func (x *QuitReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitReq.ProtoReflect.Descriptor instead.
func (*QuitReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{40}
}

func (x *QuitReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *QuitReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type QuitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QuitResp) Reset() {
	*x = QuitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitResp) ProtoMessage() {}

func (x *QuitResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitResp.ProtoReflect.Descriptor instead.
func (*QuitResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{41}
}

type DissReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	UserID int64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *DissReq) Reset() {
	*x = DissReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DissReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DissReq) ProtoMessage() {}

func (x *DissReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DissReq.ProtoReflect.Descriptor instead.
func (*DissReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{42}
}

func (x *DissReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *DissReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type DissResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DissResp) Reset() {
	*x = DissResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DissResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DissResp) ProtoMessage() {}

func (x *DissResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DissResp.ProtoReflect.Descriptor instead.
func (*DissResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{43}
}

type KickReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	UserID int64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	OuID   int64 `protobuf:"varint,3,opt,name=OuID,proto3" json:"OuID,omitempty"`
}

func (x *KickReq) Reset() {
	*x = KickReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickReq) ProtoMessage() {}

func (x *KickReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickReq.ProtoReflect.Descriptor instead.
func (*KickReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{44}
}

func (x *KickReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *KickReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *KickReq) GetOuID() int64 {
	if x != nil {
		return x.OuID
	}
	return 0
}

type KickResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *KickResp) Reset() {
	*x = KickResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickResp) ProtoMessage() {}

func (x *KickResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickResp.ProtoReflect.Descriptor instead.
func (*KickResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{45}
}

func (x *KickResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type SetNickReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64  `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	UserID int64  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Nick   string `protobuf:"bytes,3,opt,name=Nick,proto3" json:"Nick,omitempty"`
}

func (x *SetNickReq) Reset() {
	*x = SetNickReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNickReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNickReq) ProtoMessage() {}

func (x *SetNickReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNickReq.ProtoReflect.Descriptor instead.
func (*SetNickReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{46}
}

func (x *SetNickReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *SetNickReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SetNickReq) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

type SetNickResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetNickResp) Reset() {
	*x = SetNickResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNickResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNickResp) ProtoMessage() {}

func (x *SetNickResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNickResp.ProtoReflect.Descriptor instead.
func (*SetNickResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{47}
}

type ClubModifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid    int64   `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	Name     *string `protobuf:"bytes,2,opt,name=Name,proto3,oneof" json:"Name,omitempty"`
	Desc     *string `protobuf:"bytes,3,opt,name=Desc,proto3,oneof" json:"Desc,omitempty"`
	Avatar   *string `protobuf:"bytes,4,opt,name=Avatar,proto3,oneof" json:"Avatar,omitempty"`
	Bg       *string `protobuf:"bytes,5,opt,name=Bg,proto3,oneof" json:"Bg,omitempty"`
	IsVerify *int32  `protobuf:"varint,6,opt,name=IsVerify,proto3,oneof" json:"IsVerify,omitempty"`
	IsSearch *int32  `protobuf:"varint,7,opt,name=IsSearch,proto3,oneof" json:"IsSearch,omitempty"`
	IsQuery  *int32  `protobuf:"varint,8,opt,name=IsQuery,proto3,oneof" json:"IsQuery,omitempty"`
	UserId   int64   `protobuf:"varint,9,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *ClubModifyReq) Reset() {
	*x = ClubModifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubModifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubModifyReq) ProtoMessage() {}

func (x *ClubModifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubModifyReq.ProtoReflect.Descriptor instead.
func (*ClubModifyReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{48}
}

func (x *ClubModifyReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ClubModifyReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ClubModifyReq) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *ClubModifyReq) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *ClubModifyReq) GetBg() string {
	if x != nil && x.Bg != nil {
		return *x.Bg
	}
	return ""
}

func (x *ClubModifyReq) GetIsVerify() int32 {
	if x != nil && x.IsVerify != nil {
		return *x.IsVerify
	}
	return 0
}

func (x *ClubModifyReq) GetIsSearch() int32 {
	if x != nil && x.IsSearch != nil {
		return *x.IsSearch
	}
	return 0
}

func (x *ClubModifyReq) GetIsQuery() int32 {
	if x != nil && x.IsQuery != nil {
		return *x.IsQuery
	}
	return 0
}

func (x *ClubModifyReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ClubModifyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClubModifyResp) Reset() {
	*x = ClubModifyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubModifyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubModifyResp) ProtoMessage() {}

func (x *ClubModifyResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubModifyResp.ProtoReflect.Descriptor instead.
func (*ClubModifyResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{49}
}

type ZoneCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64  `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	UserID int64  `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *ZoneCreateReq) Reset() {
	*x = ZoneCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneCreateReq) ProtoMessage() {}

func (x *ZoneCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneCreateReq.ProtoReflect.Descriptor instead.
func (*ZoneCreateReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{50}
}

func (x *ZoneCreateReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ZoneCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ZoneCreateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type ZoneCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *ZoneCreateResp) Reset() {
	*x = ZoneCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneCreateResp) ProtoMessage() {}

func (x *ZoneCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneCreateResp.ProtoReflect.Descriptor instead.
func (*ZoneCreateResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{51}
}

func (x *ZoneCreateResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ChannelCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     int64   `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`          // 用户ID
	TbMid      int64   `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`            // 部落ID
	TbZid      int64   `protobuf:"varint,3,opt,name=TbZid,proto3" json:"TbZid,omitempty"`            // 分组ID
	Name       string  `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`               // 频道名称
	Desc       string  `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`               // 频道描述
	Type       int32   `protobuf:"varint,6,opt,name=Type,proto3" json:"Type,omitempty"`              // 频道类型 0 文本 2 dapp
	Icon       string  `protobuf:"bytes,7,opt,name=Icon,proto3" json:"Icon,omitempty"`               // 频道图标
	Property   int64   `protobuf:"varint,8,opt,name=Property,proto3" json:"Property,omitempty"`      // 0:无限制，1持有数字货币
	Chain      int64   `protobuf:"varint,9,opt,name=Chain,proto3" json:"Chain,omitempty"`            // 链
	DappUrl    string  `protobuf:"bytes,10,opt,name=DappUrl,proto3" json:"DappUrl,omitempty"`        // dapp url
	DappName   string  `protobuf:"bytes,11,opt,name=DappName,proto3" json:"DappName,omitempty"`      // dapp 名称
	DappIcon   string  `protobuf:"bytes,12,opt,name=DappIcon,proto3" json:"DappIcon,omitempty"`      // dapp 图标
	DappDesc   string  `protobuf:"bytes,13,opt,name=DappDesc,proto3" json:"DappDesc,omitempty"`      // dapp 描述
	DappID     int64   `protobuf:"varint,14,opt,name=DappID,proto3" json:"DappID,omitempty"`         // dapp Id
	IsOfficial int32   `protobuf:"varint,15,opt,name=IsOfficial,proto3" json:"IsOfficial,omitempty"` // 是否官方
	IsCustom   int32   `protobuf:"varint,16,opt,name=IsCustom,proto3" json:"IsCustom,omitempty"`     // 是否自定义
	Coins      float64 `protobuf:"fixed64,17,opt,name=Coins,proto3" json:"Coins,omitempty"`          // 币数量
}

func (x *ChannelCreateReq) Reset() {
	*x = ChannelCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelCreateReq) ProtoMessage() {}

func (x *ChannelCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelCreateReq.ProtoReflect.Descriptor instead.
func (*ChannelCreateReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{52}
}

func (x *ChannelCreateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ChannelCreateReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ChannelCreateReq) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *ChannelCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelCreateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ChannelCreateReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ChannelCreateReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ChannelCreateReq) GetProperty() int64 {
	if x != nil {
		return x.Property
	}
	return 0
}

func (x *ChannelCreateReq) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *ChannelCreateReq) GetDappUrl() string {
	if x != nil {
		return x.DappUrl
	}
	return ""
}

func (x *ChannelCreateReq) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *ChannelCreateReq) GetDappIcon() string {
	if x != nil {
		return x.DappIcon
	}
	return ""
}

func (x *ChannelCreateReq) GetDappDesc() string {
	if x != nil {
		return x.DappDesc
	}
	return ""
}

func (x *ChannelCreateReq) GetDappID() int64 {
	if x != nil {
		return x.DappID
	}
	return 0
}

func (x *ChannelCreateReq) GetIsOfficial() int32 {
	if x != nil {
		return x.IsOfficial
	}
	return 0
}

func (x *ChannelCreateReq) GetIsCustom() int32 {
	if x != nil {
		return x.IsCustom
	}
	return 0
}

func (x *ChannelCreateReq) GetCoins() float64 {
	if x != nil {
		return x.Coins
	}
	return 0
}

type ChannelCreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChannelCreateResp) Reset() {
	*x = ChannelCreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelCreateResp) ProtoMessage() {}

func (x *ChannelCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelCreateResp.ProtoReflect.Descriptor instead.
func (*ChannelCreateResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{53}
}

type ZoneUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64  `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	UserID int64  `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TbZid  int64  `protobuf:"varint,4,opt,name=TbZid,proto3" json:"TbZid,omitempty"`
}

func (x *ZoneUpdateReq) Reset() {
	*x = ZoneUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneUpdateReq) ProtoMessage() {}

func (x *ZoneUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneUpdateReq.ProtoReflect.Descriptor instead.
func (*ZoneUpdateReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{54}
}

func (x *ZoneUpdateReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ZoneUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ZoneUpdateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ZoneUpdateReq) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

type ZoneUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ZoneUpdateResp) Reset() {
	*x = ZoneUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneUpdateResp) ProtoMessage() {}

func (x *ZoneUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneUpdateResp.ProtoReflect.Descriptor instead.
func (*ZoneUpdateResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{55}
}

type ChannelUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int64   `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TbMid    int64   `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	TbZid    int64   `protobuf:"varint,3,opt,name=TbZid,proto3" json:"TbZid,omitempty"`
	TbCid    int64   `protobuf:"varint,4,opt,name=TbCid,proto3" json:"TbCid,omitempty"`
	Name     string  `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	Desc     string  `protobuf:"bytes,6,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Icon     string  `protobuf:"bytes,7,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Property int64   `protobuf:"varint,8,opt,name=Property,proto3" json:"Property,omitempty"`
	Chain    *int64  `protobuf:"varint,9,opt,name=Chain,proto3,oneof" json:"Chain,omitempty"`
	Coins    float64 `protobuf:"fixed64,10,opt,name=Coins,proto3" json:"Coins,omitempty"`
}

func (x *ChannelUpdateReq) Reset() {
	*x = ChannelUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUpdateReq) ProtoMessage() {}

func (x *ChannelUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUpdateReq.ProtoReflect.Descriptor instead.
func (*ChannelUpdateReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{56}
}

func (x *ChannelUpdateReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ChannelUpdateReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ChannelUpdateReq) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *ChannelUpdateReq) GetTbCid() int64 {
	if x != nil {
		return x.TbCid
	}
	return 0
}

func (x *ChannelUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelUpdateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ChannelUpdateReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ChannelUpdateReq) GetProperty() int64 {
	if x != nil {
		return x.Property
	}
	return 0
}

func (x *ChannelUpdateReq) GetChain() int64 {
	if x != nil && x.Chain != nil {
		return *x.Chain
	}
	return 0
}

func (x *ChannelUpdateReq) GetCoins() float64 {
	if x != nil {
		return x.Coins
	}
	return 0
}

type ChannelUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChannelUpdateResp) Reset() {
	*x = ChannelUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelUpdateResp) ProtoMessage() {}

func (x *ChannelUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelUpdateResp.ProtoReflect.Descriptor instead.
func (*ChannelUpdateResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{57}
}

// 频道信息
type ChannelInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TbMid  int64 `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	TbZid  int64 `protobuf:"varint,3,opt,name=TbZid,proto3" json:"TbZid,omitempty"`
	TbCid  int64 `protobuf:"varint,4,opt,name=TbCid,proto3" json:"TbCid,omitempty"`
}

func (x *ChannelInfoReq) Reset() {
	*x = ChannelInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInfoReq) ProtoMessage() {}

func (x *ChannelInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInfoReq.ProtoReflect.Descriptor instead.
func (*ChannelInfoReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{58}
}

func (x *ChannelInfoReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ChannelInfoReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ChannelInfoReq) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *ChannelInfoReq) GetTbCid() int64 {
	if x != nil {
		return x.TbCid
	}
	return 0
}

// TODO create和这里的结构题可以重新定义，收敛下
type ChannelInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                               `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`                // 频道id
	TbMid         int64                               `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`          // 部落id
	TbZid         int64                               `protobuf:"varint,3,opt,name=TbZid,proto3" json:"TbZid,omitempty"`          // 分组id
	Name          string                              `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`             // 频道名称
	Desc          string                              `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`             // 频道简介
	Property      int64                               `protobuf:"varint,6,opt,name=Property,proto3" json:"Property,omitempty"`    // 0:无限制，1持有数字货币
	Chain         int64                               `protobuf:"varint,7,opt,name=Chain,proto3" json:"Chain,omitempty"`          // 所属链
	Coins         float32                             `protobuf:"fixed32,8,opt,name=Coins,proto3" json:"Coins,omitempty"`         // 小于0表示不限制，大于等于0为最低额度限制
	Sort          int64                               `protobuf:"varint,9,opt,name=Sort,proto3" json:"Sort,omitempty"`            // 排序
	IsBan         int64                               `protobuf:"varint,10,opt,name=IsBan,proto3" json:"IsBan,omitempty"`         // 是否全员禁言：0否1是
	IsClean       int64                               `protobuf:"varint,11,opt,name=IsClean,proto3" json:"IsClean,omitempty"`     // 是否自动清理消息：0否1是
	ImId          string                              `protobuf:"bytes,12,opt,name=ImId,proto3" json:"ImId,omitempty"`            // 房间id
	Ctime         int64                               `protobuf:"varint,13,opt,name=Ctime,proto3" json:"Ctime,omitempty"`         //频道创建时间
	Type          int64                               `protobuf:"varint,14,opt,name=Type,proto3" json:"Type,omitempty"`           // 房间类型：0文字房子；1语音房间
	Icon          string                              `protobuf:"bytes,15,opt,name=Icon,proto3" json:"Icon,omitempty"`            // 图标
	IsBlock       int64                               `protobuf:"varint,16,opt,name=IsBlock,proto3" json:"IsBlock,omitempty"`     // 管理员封禁：0否1是
	CleanTime     int64                               `protobuf:"varint,17,opt,name=CleanTime,proto3" json:"CleanTime,omitempty"` // 自动清理时间，单位分钟
	Dapp          *ClubInfoResZonesDapp               `protobuf:"bytes,18,opt,name=Dapp,proto3" json:"Dapp,omitempty"`
	MapId         string                              `protobuf:"bytes,19,opt,name=MapId,proto3" json:"MapId,omitempty"`                 // im服务下的唯一id im第三方接口只识别mapid
	ChannelNotice string                              `protobuf:"bytes,20,opt,name=ChannelNotice,proto3" json:"ChannelNotice,omitempty"` //公告
	Frozen        int64                               `protobuf:"varint,21,opt,name=Frozen,proto3" json:"Frozen,omitempty"`              // 超级群用户状态
	UserNum       int64                               `protobuf:"varint,22,opt,name=UserNum,proto3" json:"UserNum,omitempty"`            // 房间用户数
	Setting       *ChannelInfoResp_ChannelInfoSetting `protobuf:"bytes,23,opt,name=Setting,proto3" json:"Setting,omitempty"`
	CommonResp    *CommonResp                         `protobuf:"bytes,24,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *ChannelInfoResp) Reset() {
	*x = ChannelInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInfoResp) ProtoMessage() {}

func (x *ChannelInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInfoResp.ProtoReflect.Descriptor instead.
func (*ChannelInfoResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{59}
}

func (x *ChannelInfoResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChannelInfoResp) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ChannelInfoResp) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *ChannelInfoResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelInfoResp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ChannelInfoResp) GetProperty() int64 {
	if x != nil {
		return x.Property
	}
	return 0
}

func (x *ChannelInfoResp) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *ChannelInfoResp) GetCoins() float32 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *ChannelInfoResp) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ChannelInfoResp) GetIsBan() int64 {
	if x != nil {
		return x.IsBan
	}
	return 0
}

func (x *ChannelInfoResp) GetIsClean() int64 {
	if x != nil {
		return x.IsClean
	}
	return 0
}

func (x *ChannelInfoResp) GetImId() string {
	if x != nil {
		return x.ImId
	}
	return ""
}

func (x *ChannelInfoResp) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *ChannelInfoResp) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ChannelInfoResp) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ChannelInfoResp) GetIsBlock() int64 {
	if x != nil {
		return x.IsBlock
	}
	return 0
}

func (x *ChannelInfoResp) GetCleanTime() int64 {
	if x != nil {
		return x.CleanTime
	}
	return 0
}

func (x *ChannelInfoResp) GetDapp() *ClubInfoResZonesDapp {
	if x != nil {
		return x.Dapp
	}
	return nil
}

func (x *ChannelInfoResp) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *ChannelInfoResp) GetChannelNotice() string {
	if x != nil {
		return x.ChannelNotice
	}
	return ""
}

func (x *ChannelInfoResp) GetFrozen() int64 {
	if x != nil {
		return x.Frozen
	}
	return 0
}

func (x *ChannelInfoResp) GetUserNum() int64 {
	if x != nil {
		return x.UserNum
	}
	return 0
}

func (x *ChannelInfoResp) GetSetting() *ChannelInfoResp_ChannelInfoSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *ChannelInfoResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type TransferReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	TbMid  int64 `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	OuID   int64 `protobuf:"varint,3,opt,name=OuID,proto3" json:"OuID,omitempty"`
}

func (x *TransferReq) Reset() {
	*x = TransferReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferReq) ProtoMessage() {}

func (x *TransferReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferReq.ProtoReflect.Descriptor instead.
func (*TransferReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{60}
}

func (x *TransferReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *TransferReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *TransferReq) GetOuID() int64 {
	if x != nil {
		return x.OuID
	}
	return 0
}

type TransferResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransferResp) Reset() {
	*x = TransferResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResp) ProtoMessage() {}

func (x *TransferResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResp.ProtoReflect.Descriptor instead.
func (*TransferResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{61}
}

type ChannelDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	TbZid  int64 `protobuf:"varint,2,opt,name=TbZid,proto3" json:"TbZid,omitempty"`
	TbCid  int64 `protobuf:"varint,3,opt,name=TbCid,proto3" json:"TbCid,omitempty"`
	UserId int64 `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *ChannelDeleteReq) Reset() {
	*x = ChannelDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelDeleteReq) ProtoMessage() {}

func (x *ChannelDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelDeleteReq.ProtoReflect.Descriptor instead.
func (*ChannelDeleteReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{62}
}

func (x *ChannelDeleteReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ChannelDeleteReq) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *ChannelDeleteReq) GetTbCid() int64 {
	if x != nil {
		return x.TbCid
	}
	return 0
}

func (x *ChannelDeleteReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ChannelDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChannelDeleteResp) Reset() {
	*x = ChannelDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelDeleteResp) ProtoMessage() {}

func (x *ChannelDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelDeleteResp.ProtoReflect.Descriptor instead.
func (*ChannelDeleteResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{63}
}

type ZoneDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	TbZid  int64 `protobuf:"varint,2,opt,name=TbZid,proto3" json:"TbZid,omitempty"`
	UserID int64 `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *ZoneDeleteReq) Reset() {
	*x = ZoneDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneDeleteReq) ProtoMessage() {}

func (x *ZoneDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneDeleteReq.ProtoReflect.Descriptor instead.
func (*ZoneDeleteReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{64}
}

func (x *ZoneDeleteReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ZoneDeleteReq) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *ZoneDeleteReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type ZoneDeleteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ZoneDeleteResp) Reset() {
	*x = ZoneDeleteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneDeleteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneDeleteResp) ProtoMessage() {}

func (x *ZoneDeleteResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneDeleteResp.ProtoReflect.Descriptor instead.
func (*ZoneDeleteResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{65}
}

type GetUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid    int64   `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`             // 解密后部落ID
	RoleId   *int64  `protobuf:"varint,2,opt,name=RoleId,proto3,oneof" json:"RoleId,omitempty"`     // 身份组成员列表
	ExRoleId *int64  `protobuf:"varint,3,opt,name=ExRoleId,proto3,oneof" json:"ExRoleId,omitempty"` // 添加身份组成员列表
	UserID   int64   `protobuf:"varint,4,opt,name=UserID,proto3" json:"UserID,omitempty"`           //当前用户ID
	Nick     *string `protobuf:"bytes,5,opt,name=Nick,proto3,oneof" json:"Nick,omitempty"`          //用户昵称
	Page     int64   `protobuf:"varint,6,opt,name=Page,proto3" json:"Page,omitempty"`               //当前页码
}

func (x *GetUserListReq) Reset() {
	*x = GetUserListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListReq) ProtoMessage() {}

func (x *GetUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListReq.ProtoReflect.Descriptor instead.
func (*GetUserListReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{66}
}

func (x *GetUserListReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *GetUserListReq) GetRoleId() int64 {
	if x != nil && x.RoleId != nil {
		return *x.RoleId
	}
	return 0
}

func (x *GetUserListReq) GetExRoleId() int64 {
	if x != nil && x.ExRoleId != nil {
		return *x.ExRoleId
	}
	return 0
}

func (x *GetUserListReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetUserListReq) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *GetUserListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*GetUserListRespUserInfo `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetUserListResp) Reset() {
	*x = GetUserListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListResp) ProtoMessage() {}

func (x *GetUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListResp.ProtoReflect.Descriptor instead.
func (*GetUserListResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{67}
}

func (x *GetUserListResp) GetUsers() []*GetUserListRespUserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type ChannelSortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64  `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`   // 部落ID
	TbZid  int64  `protobuf:"varint,2,opt,name=TbZid,proto3" json:"TbZid,omitempty"`   // 被交换位置的分组ID
	TbOZid int64  `protobuf:"varint,3,opt,name=TbOZid,proto3" json:"TbOZid,omitempty"` // 被交换位置的分组ID
	UserId int64  `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Rank   int64  `protobuf:"varint,6,opt,name=Rank,proto3" json:"Rank,omitempty"` // 排序后的位置
	ImId   string `protobuf:"bytes,7,opt,name=ImId,proto3" json:"ImId,omitempty"`  // 环信房间ID
}

func (x *ChannelSortReq) Reset() {
	*x = ChannelSortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelSortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelSortReq) ProtoMessage() {}

func (x *ChannelSortReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelSortReq.ProtoReflect.Descriptor instead.
func (*ChannelSortReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{68}
}

func (x *ChannelSortReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ChannelSortReq) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *ChannelSortReq) GetTbOZid() int64 {
	if x != nil {
		return x.TbOZid
	}
	return 0
}

func (x *ChannelSortReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ChannelSortReq) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ChannelSortReq) GetImId() string {
	if x != nil {
		return x.ImId
	}
	return ""
}

type ZoneSortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`   // 部落ID
	TbZid  int64 `protobuf:"varint,2,opt,name=TbZid,proto3" json:"TbZid,omitempty"`   // 被交换位置的tbZid
	TbOZid int64 `protobuf:"varint,3,opt,name=TbOZid,proto3" json:"TbOZid,omitempty"` // 被交换位置的tbZid
	UserId int64 `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *ZoneSortReq) Reset() {
	*x = ZoneSortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZoneSortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneSortReq) ProtoMessage() {}

func (x *ZoneSortReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneSortReq.ProtoReflect.Descriptor instead.
func (*ZoneSortReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{69}
}

func (x *ZoneSortReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ZoneSortReq) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *ZoneSortReq) GetTbOZid() int64 {
	if x != nil {
		return x.TbOZid
	}
	return 0
}

func (x *ZoneSortReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ClubSortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`   // 要交换位置的tbMid
	TbOmid int64 `protobuf:"varint,2,opt,name=TbOmid,proto3" json:"TbOmid,omitempty"` // 被交换位置的tbMid
	UserId int64 `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *ClubSortReq) Reset() {
	*x = ClubSortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubSortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubSortReq) ProtoMessage() {}

func (x *ClubSortReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubSortReq.ProtoReflect.Descriptor instead.
func (*ClubSortReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{70}
}

func (x *ClubSortReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ClubSortReq) GetTbOmid() int64 {
	if x != nil {
		return x.TbOmid
	}
	return 0
}

func (x *ClubSortReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserCustomInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`   // 部落ID
	UserId int64 `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"` // 用户ID
}

func (x *GetUserCustomInfoReq) Reset() {
	*x = GetUserCustomInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCustomInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCustomInfoReq) ProtoMessage() {}

func (x *GetUserCustomInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCustomInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserCustomInfoReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{71}
}

func (x *GetUserCustomInfoReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *GetUserCustomInfoReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserCustomInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomName string `protobuf:"bytes,1,opt,name=CustomName,proto3" json:"CustomName,omitempty"` // 自定义名称
	ColorId    string `protobuf:"bytes,2,opt,name=ColorId,proto3" json:"ColorId,omitempty"`       // 颜色ID
	RoleName   string `protobuf:"bytes,3,opt,name=RoleName,proto3" json:"RoleName,omitempty"`     // 角色名称
}

func (x *GetUserCustomInfoResp) Reset() {
	*x = GetUserCustomInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCustomInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCustomInfoResp) ProtoMessage() {}

func (x *GetUserCustomInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCustomInfoResp.ProtoReflect.Descriptor instead.
func (*GetUserCustomInfoResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{72}
}

func (x *GetUserCustomInfoResp) GetCustomName() string {
	if x != nil {
		return x.CustomName
	}
	return ""
}

func (x *GetUserCustomInfoResp) GetColorId() string {
	if x != nil {
		return x.ColorId
	}
	return ""
}

func (x *GetUserCustomInfoResp) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

// 获取部落推荐请求
type GetRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`     //页码
	UserId int64 `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"` //用户ID
}

func (x *GetRecommendRequest) Reset() {
	*x = GetRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendRequest) ProtoMessage() {}

func (x *GetRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendRequest.ProtoReflect.Descriptor instead.
func (*GetRecommendRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{73}
}

func (x *GetRecommendRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRecommendRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 获取部落推荐响应
type GetRecommendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubInfo []*GetRecommendResponse_ClubInfo `protobuf:"bytes,1,rep,name=clubInfo,proto3" json:"clubInfo,omitempty"` //部落信息
}

func (x *GetRecommendResponse) Reset() {
	*x = GetRecommendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendResponse) ProtoMessage() {}

func (x *GetRecommendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendResponse.ProtoReflect.Descriptor instead.
func (*GetRecommendResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{74}
}

func (x *GetRecommendResponse) GetClubInfo() []*GetRecommendResponse_ClubInfo {
	if x != nil {
		return x.ClubInfo
	}
	return nil
}

type RoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid   int64  `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`     //部落
	Name    string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`        // 角色名
	Type    int64  `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`       // 0=全体成员 1=自定义分组
	ColorId int64  `protobuf:"varint,4,opt,name=ColorId,proto3" json:"ColorId,omitempty"` // 颜色id
	Sort    int64  `protobuf:"varint,5,opt,name=Sort,proto3" json:"Sort,omitempty"`       // 排序
	IsDel   int64  `protobuf:"varint,6,opt,name=IsDel,proto3" json:"IsDel,omitempty"`     // 0正常 1:已删除
	CTime   int64  `protobuf:"varint,7,opt,name=CTime,proto3" json:"CTime,omitempty"`     // 创建时间
	UTime   int64  `protobuf:"varint,8,opt,name=UTime,proto3" json:"UTime,omitempty"`     //修改时间
	// 权限
	SInvite    *int64 `protobuf:"varint,9,opt,name=SInvite,proto3,oneof" json:"SInvite,omitempty"`        // 邀请权限（默认值是全体成员默认权限）
	MMembers   *int64 `protobuf:"varint,10,opt,name=MMembers,proto3,oneof" json:"MMembers,omitempty"`     // 管理成员权限
	SMessage   *int64 `protobuf:"varint,11,opt,name=SMessage,proto3,oneof" json:"SMessage,omitempty"`     // 发送消息权限
	MMessage   *int64 `protobuf:"varint,12,opt,name=MMessage,proto3,oneof" json:"MMessage,omitempty"`     // 管理消息权限
	PComment   *int64 `protobuf:"varint,13,opt,name=PComment,proto3,oneof" json:"PComment,omitempty"`     // 评论动态权限
	MCommunity *int64 `protobuf:"varint,14,opt,name=MCommunity,proto3,oneof" json:"MCommunity,omitempty"` // 管理社区权限
	PStories   *int64 `protobuf:"varint,15,opt,name=PStories,proto3,oneof" json:"PStories,omitempty"`     // 发送动态权限
	MMain      *int64 `protobuf:"varint,16,opt,name=MMain,proto3,oneof" json:"MMain,omitempty"`           // 管理部落权限
	Id         int64  `protobuf:"varint,17,opt,name=Id,proto3" json:"Id,omitempty"`                       // 角色Id
	UserId     int64  `protobuf:"varint,18,opt,name=UserId,proto3" json:"UserId,omitempty"`               // 新建者UserId
	MChannel   *int64 `protobuf:"varint,19,opt,name=MChannel,proto3,oneof" json:"MChannel,omitempty"`     // 管理房间
}

func (x *RoleInfo) Reset() {
	*x = RoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfo) ProtoMessage() {}

func (x *RoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfo.ProtoReflect.Descriptor instead.
func (*RoleInfo) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{75}
}

func (x *RoleInfo) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *RoleInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RoleInfo) GetColorId() int64 {
	if x != nil {
		return x.ColorId
	}
	return 0
}

func (x *RoleInfo) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *RoleInfo) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *RoleInfo) GetCTime() int64 {
	if x != nil {
		return x.CTime
	}
	return 0
}

func (x *RoleInfo) GetUTime() int64 {
	if x != nil {
		return x.UTime
	}
	return 0
}

func (x *RoleInfo) GetSInvite() int64 {
	if x != nil && x.SInvite != nil {
		return *x.SInvite
	}
	return 0
}

func (x *RoleInfo) GetMMembers() int64 {
	if x != nil && x.MMembers != nil {
		return *x.MMembers
	}
	return 0
}

func (x *RoleInfo) GetSMessage() int64 {
	if x != nil && x.SMessage != nil {
		return *x.SMessage
	}
	return 0
}

func (x *RoleInfo) GetMMessage() int64 {
	if x != nil && x.MMessage != nil {
		return *x.MMessage
	}
	return 0
}

func (x *RoleInfo) GetPComment() int64 {
	if x != nil && x.PComment != nil {
		return *x.PComment
	}
	return 0
}

func (x *RoleInfo) GetMCommunity() int64 {
	if x != nil && x.MCommunity != nil {
		return *x.MCommunity
	}
	return 0
}

func (x *RoleInfo) GetPStories() int64 {
	if x != nil && x.PStories != nil {
		return *x.PStories
	}
	return 0
}

func (x *RoleInfo) GetMMain() int64 {
	if x != nil && x.MMain != nil {
		return *x.MMain
	}
	return 0
}

func (x *RoleInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RoleInfo) GetMChannel() int64 {
	if x != nil && x.MChannel != nil {
		return *x.MChannel
	}
	return 0
}

// 获取身份组列表
type GetRoleListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
}

func (x *GetRoleListRequest) Reset() {
	*x = GetRoleListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleListRequest) ProtoMessage() {}

func (x *GetRoleListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleListRequest.ProtoReflect.Descriptor instead.
func (*GetRoleListRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{76}
}

func (x *GetRoleListRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

type GetRoleListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetRoleListResponse_RoleListResp `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *GetRoleListResponse) Reset() {
	*x = GetRoleListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleListResponse) ProtoMessage() {}

func (x *GetRoleListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleListResponse.ProtoReflect.Descriptor instead.
func (*GetRoleListResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{77}
}

func (x *GetRoleListResponse) GetList() []*GetRoleListResponse_RoleListResp {
	if x != nil {
		return x.List
	}
	return nil
}

// 获取身份组详情
type GetRoleInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=RoleId,proto3" json:"RoleId,omitempty"` // 0 代表获取全体成员身份组
	TbMid  int64 `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
}

func (x *GetRoleInfoRequest) Reset() {
	*x = GetRoleInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleInfoRequest) ProtoMessage() {}

func (x *GetRoleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleInfoRequest.ProtoReflect.Descriptor instead.
func (*GetRoleInfoRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{78}
}

func (x *GetRoleInfoRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *GetRoleInfoRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

type GetRoleInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *GetRoleInfoResponse_RoleInfoResp `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetRoleInfoResponse) Reset() {
	*x = GetRoleInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleInfoResponse) ProtoMessage() {}

func (x *GetRoleInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleInfoResponse.ProtoReflect.Descriptor instead.
func (*GetRoleInfoResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{79}
}

func (x *GetRoleInfoResponse) GetInfo() *GetRoleInfoResponse_RoleInfoResp {
	if x != nil {
		return x.Info
	}
	return nil
}

// 新建/更新身份组信息
type SaveRoleInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *RoleInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *SaveRoleInfoRequest) Reset() {
	*x = SaveRoleInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRoleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRoleInfoRequest) ProtoMessage() {}

func (x *SaveRoleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRoleInfoRequest.ProtoReflect.Descriptor instead.
func (*SaveRoleInfoRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{80}
}

func (x *SaveRoleInfoRequest) GetInfo() *RoleInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SaveRoleInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=RoleId,proto3" json:"RoleId,omitempty"`
}

func (x *SaveRoleInfoResponse) Reset() {
	*x = SaveRoleInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveRoleInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveRoleInfoResponse) ProtoMessage() {}

func (x *SaveRoleInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveRoleInfoResponse.ProtoReflect.Descriptor instead.
func (*SaveRoleInfoResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{81}
}

func (x *SaveRoleInfoResponse) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// 删除身份组信息
type DeleteRoleInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	RoleId int64 `protobuf:"varint,2,opt,name=RoleId,proto3" json:"RoleId,omitempty"`
}

func (x *DeleteRoleInfoRequest) Reset() {
	*x = DeleteRoleInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleInfoRequest) ProtoMessage() {}

func (x *DeleteRoleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleInfoRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoleInfoRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{82}
}

func (x *DeleteRoleInfoRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *DeleteRoleInfoRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

// 删除身份组信息
type DeleteRoleInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRoleInfoResponse) Reset() {
	*x = DeleteRoleInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleInfoResponse) ProtoMessage() {}

func (x *DeleteRoleInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleInfoResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoleInfoResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{83}
}

// 身份组排序
type SetRoleSortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sort  []int64 `protobuf:"varint,1,rep,packed,name=Sort,proto3" json:"Sort,omitempty"` // 按排好的顺序传递过来
	TbMid int64   `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
}

func (x *SetRoleSortRequest) Reset() {
	*x = SetRoleSortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRoleSortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoleSortRequest) ProtoMessage() {}

func (x *SetRoleSortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoleSortRequest.ProtoReflect.Descriptor instead.
func (*SetRoleSortRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{84}
}

func (x *SetRoleSortRequest) GetSort() []int64 {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *SetRoleSortRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

type SetRoleSortResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetRoleSortResponse) Reset() {
	*x = SetRoleSortResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRoleSortResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoleSortResponse) ProtoMessage() {}

func (x *SetRoleSortResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoleSortResponse.ProtoReflect.Descriptor instead.
func (*SetRoleSortResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{85}
}

// 身份组成员增减
type OptRoleUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid   int64    `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`   // 按排好的顺序传递过来
	RoleId  int64    `protobuf:"varint,2,opt,name=RoleId,proto3" json:"RoleId,omitempty"` // 角色Id
	Opt     int64    `protobuf:"varint,3,opt,name=Opt,proto3" json:"Opt,omitempty"`       // 1 增加 2移除
	OUid    []int64  `protobuf:"varint,4,rep,packed,name=OUid,proto3" json:"OUid,omitempty"`
	RoleIds []string `protobuf:"bytes,5,rep,name=RoleIds,proto3" json:"RoleIds,omitempty"` // 传过来的Ids
	UserId  int64    `protobuf:"varint,6,opt,name=UserId,proto3" json:"UserId,omitempty"`  //操作者ID
}

func (x *OptRoleUserRequest) Reset() {
	*x = OptRoleUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptRoleUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptRoleUserRequest) ProtoMessage() {}

func (x *OptRoleUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptRoleUserRequest.ProtoReflect.Descriptor instead.
func (*OptRoleUserRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{86}
}

func (x *OptRoleUserRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *OptRoleUserRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *OptRoleUserRequest) GetOpt() int64 {
	if x != nil {
		return x.Opt
	}
	return 0
}

func (x *OptRoleUserRequest) GetOUid() []int64 {
	if x != nil {
		return x.OUid
	}
	return nil
}

func (x *OptRoleUserRequest) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *OptRoleUserRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type OptRoleUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OptRoleUserResponse) Reset() {
	*x = OptRoleUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptRoleUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptRoleUserResponse) ProtoMessage() {}

func (x *OptRoleUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptRoleUserResponse.ProtoReflect.Descriptor instead.
func (*OptRoleUserResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{87}
}

type GetDynamicUnReadStaticRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid       int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`             // 获取
	LastestTime int64 `protobuf:"varint,2,opt,name=LastestTime,proto3" json:"LastestTime,omitempty"` //上次拉取最新动态的时间
	UserId      int64 `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`           // 当前用户ID
}

func (x *GetDynamicUnReadStaticRequest) Reset() {
	*x = GetDynamicUnReadStaticRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDynamicUnReadStaticRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDynamicUnReadStaticRequest) ProtoMessage() {}

func (x *GetDynamicUnReadStaticRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDynamicUnReadStaticRequest.ProtoReflect.Descriptor instead.
func (*GetDynamicUnReadStaticRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{88}
}

func (x *GetDynamicUnReadStaticRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *GetDynamicUnReadStaticRequest) GetLastestTime() int64 {
	if x != nil {
		return x.LastestTime
	}
	return 0
}

func (x *GetDynamicUnReadStaticRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetDynamicUnReadStaticResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnReadNum   int64    `protobuf:"varint,1,opt,name=UnReadNum,proto3" json:"UnReadNum,omitempty"`    // 未读数
	UserAvatars []string `protobuf:"bytes,2,rep,name=UserAvatars,proto3" json:"UserAvatars,omitempty"` // 用户头像信息（有序，按部落动态发布时间倒序）
}

func (x *GetDynamicUnReadStaticResponse) Reset() {
	*x = GetDynamicUnReadStaticResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDynamicUnReadStaticResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDynamicUnReadStaticResponse) ProtoMessage() {}

func (x *GetDynamicUnReadStaticResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDynamicUnReadStaticResponse.ProtoReflect.Descriptor instead.
func (*GetDynamicUnReadStaticResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{89}
}

func (x *GetDynamicUnReadStaticResponse) GetUnReadNum() int64 {
	if x != nil {
		return x.UnReadNum
	}
	return 0
}

func (x *GetDynamicUnReadStaticResponse) GetUserAvatars() []string {
	if x != nil {
		return x.UserAvatars
	}
	return nil
}

type GetUsersNickNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64   `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`      // 查询者Uid
	OUids  []int64 `protobuf:"varint,2,rep,packed,name=OUids,proto3" json:"OUids,omitempty"` // 被查询的用户ids
	TbMid  int64   `protobuf:"varint,3,opt,name=TbMid,proto3" json:"TbMid,omitempty"`        // 部落ID
}

func (x *GetUsersNickNameRequest) Reset() {
	*x = GetUsersNickNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersNickNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersNickNameRequest) ProtoMessage() {}

func (x *GetUsersNickNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersNickNameRequest.ProtoReflect.Descriptor instead.
func (*GetUsersNickNameRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{90}
}

func (x *GetUsersNickNameRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUsersNickNameRequest) GetOUids() []int64 {
	if x != nil {
		return x.OUids
	}
	return nil
}

func (x *GetUsersNickNameRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

type GetUsersNickNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*GetUsersNickNameResponse_UserNameInfo `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUsersNickNameResponse) Reset() {
	*x = GetUsersNickNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersNickNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersNickNameResponse) ProtoMessage() {}

func (x *GetUsersNickNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersNickNameResponse.ProtoReflect.Descriptor instead.
func (*GetUsersNickNameResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{91}
}

func (x *GetUsersNickNameResponse) GetInfos() []*GetUsersNickNameResponse_UserNameInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type ChannelNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	TbMid   int64  `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	TbZid   int64  `protobuf:"varint,3,opt,name=TbZid,proto3" json:"TbZid,omitempty"`
	TbCid   int64  `protobuf:"varint,4,opt,name=TbCid,proto3" json:"TbCid,omitempty"`
	Id      int64  `protobuf:"varint,5,opt,name=Id,proto3" json:"Id,omitempty"` // 公告ID
}

func (x *ChannelNotice) Reset() {
	*x = ChannelNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelNotice) ProtoMessage() {}

func (x *ChannelNotice) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelNotice.ProtoReflect.Descriptor instead.
func (*ChannelNotice) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{92}
}

func (x *ChannelNotice) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChannelNotice) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *ChannelNotice) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *ChannelNotice) GetTbCid() int64 {
	if x != nil {
		return x.TbCid
	}
	return 0
}

func (x *ChannelNotice) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 创建频道公告
type CreateNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notice *ChannelNotice `protobuf:"bytes,1,opt,name=Notice,proto3" json:"Notice,omitempty"`
	UserId int64          `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *CreateNoticeRequest) Reset() {
	*x = CreateNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoticeRequest) ProtoMessage() {}

func (x *CreateNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoticeRequest.ProtoReflect.Descriptor instead.
func (*CreateNoticeRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{93}
}

func (x *CreateNoticeRequest) GetNotice() *ChannelNotice {
	if x != nil {
		return x.Notice
	}
	return nil
}

func (x *CreateNoticeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *CreateNoticeResponse) Reset() {
	*x = CreateNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoticeResponse) ProtoMessage() {}

func (x *CreateNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoticeResponse.ProtoReflect.Descriptor instead.
func (*CreateNoticeResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{94}
}

func (x *CreateNoticeResponse) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 更新频道公告
type UpdateNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notice *ChannelNotice `protobuf:"bytes,1,opt,name=Notice,proto3" json:"Notice,omitempty"`
	UserId int64          `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *UpdateNoticeRequest) Reset() {
	*x = UpdateNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoticeRequest) ProtoMessage() {}

func (x *UpdateNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoticeRequest.ProtoReflect.Descriptor instead.
func (*UpdateNoticeRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{95}
}

func (x *UpdateNoticeRequest) GetNotice() *ChannelNotice {
	if x != nil {
		return x.Notice
	}
	return nil
}

func (x *UpdateNoticeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdateNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateNoticeResponse) Reset() {
	*x = UpdateNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoticeResponse) ProtoMessage() {}

func (x *UpdateNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoticeResponse.ProtoReflect.Descriptor instead.
func (*UpdateNoticeResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{96}
}

// 删除频道公告
type DeleteNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notice *ChannelNotice `protobuf:"bytes,1,opt,name=Notice,proto3" json:"Notice,omitempty"`
	UserId int64          `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *DeleteNoticeRequest) Reset() {
	*x = DeleteNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoticeRequest) ProtoMessage() {}

func (x *DeleteNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoticeRequest.ProtoReflect.Descriptor instead.
func (*DeleteNoticeRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{97}
}

func (x *DeleteNoticeRequest) GetNotice() *ChannelNotice {
	if x != nil {
		return x.Notice
	}
	return nil
}

func (x *DeleteNoticeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNoticeResponse) Reset() {
	*x = DeleteNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoticeResponse) ProtoMessage() {}

func (x *DeleteNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoticeResponse.ProtoReflect.Descriptor instead.
func (*DeleteNoticeResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{98}
}

// 封禁列表
type GetBanListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	Type   int64 `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`     // 1 禁言 2 封禁
	Page   int64 `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`     // 页码
	UserId int64 `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId,omitempty"` // 当前用户ID
}

func (x *GetBanListRequest) Reset() {
	*x = GetBanListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBanListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBanListRequest) ProtoMessage() {}

func (x *GetBanListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBanListRequest.ProtoReflect.Descriptor instead.
func (*GetBanListRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{99}
}

func (x *GetBanListRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *GetBanListRequest) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetBanListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetBanListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type BanUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OUid      int64  `protobuf:"varint,1,opt,name=OUid,proto3" json:"OUid,omitempty"`          // 目标用户ID
	UserId    int64  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`      // 操作者ID
	Type      int64  `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`          // 类型 1 禁言 2 封禁
	Ctime     int64  `protobuf:"varint,4,opt,name=Ctime,proto3" json:"Ctime,omitempty"`        // 操作时间
	UserName  string `protobuf:"bytes,5,opt,name=UserName,proto3" json:"UserName,omitempty"`   // 操作者名称
	OUserName string `protobuf:"bytes,6,opt,name=OUserName,proto3" json:"OUserName,omitempty"` // 目标用户名称
	OAvartar  string `protobuf:"bytes,7,opt,name=OAvartar,proto3" json:"OAvartar,omitempty"`   // 目标用户头像
}

func (x *BanUserInfo) Reset() {
	*x = BanUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserInfo) ProtoMessage() {}

func (x *BanUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserInfo.ProtoReflect.Descriptor instead.
func (*BanUserInfo) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{100}
}

func (x *BanUserInfo) GetOUid() int64 {
	if x != nil {
		return x.OUid
	}
	return 0
}

func (x *BanUserInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BanUserInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BanUserInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *BanUserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *BanUserInfo) GetOUserName() string {
	if x != nil {
		return x.OUserName
	}
	return ""
}

func (x *BanUserInfo) GetOAvartar() string {
	if x != nil {
		return x.OAvartar
	}
	return ""
}

type GetBanListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*BanUserInfo `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	Pages int64          `protobuf:"varint,2,opt,name=Pages,proto3" json:"Pages,omitempty"`
}

func (x *GetBanListResponse) Reset() {
	*x = GetBanListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBanListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBanListResponse) ProtoMessage() {}

func (x *GetBanListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBanListResponse.ProtoReflect.Descriptor instead.
func (*GetBanListResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{101}
}

func (x *GetBanListResponse) GetList() []*BanUserInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetBanListResponse) GetPages() int64 {
	if x != nil {
		return x.Pages
	}
	return 0
}

type OptBanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`   // 部落ID
	OUid   int64 `protobuf:"varint,2,opt,name=OUid,proto3" json:"OUid,omitempty"`     // 目标用户ID
	Type   int64 `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`     // 1 禁言 2封禁
	Opt    int64 `protobuf:"varint,4,opt,name=Opt,proto3" json:"Opt,omitempty"`       // 1 添加 2删除
	UserId int64 `protobuf:"varint,5,opt,name=UserId,proto3" json:"UserId,omitempty"` // 操作者ID
}

func (x *OptBanRequest) Reset() {
	*x = OptBanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptBanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptBanRequest) ProtoMessage() {}

func (x *OptBanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptBanRequest.ProtoReflect.Descriptor instead.
func (*OptBanRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{102}
}

func (x *OptBanRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *OptBanRequest) GetOUid() int64 {
	if x != nil {
		return x.OUid
	}
	return 0
}

func (x *OptBanRequest) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OptBanRequest) GetOpt() int64 {
	if x != nil {
		return x.Opt
	}
	return 0
}

func (x *OptBanRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type OptBanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OptBanResponse) Reset() {
	*x = OptBanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptBanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptBanResponse) ProtoMessage() {}

func (x *OptBanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptBanResponse.ProtoReflect.Descriptor instead.
func (*OptBanResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{103}
}

type SetChannelVisitedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` // 访问者UserId
	TbMid  int64 `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`   // 部落ID
	DappId int64 `protobuf:"varint,3,opt,name=DappId,proto3" json:"DappId,omitempty"` // DappID（部落应用房间同一个Dapp只能设置一个）
}

func (x *SetChannelVisitedRequest) Reset() {
	*x = SetChannelVisitedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChannelVisitedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChannelVisitedRequest) ProtoMessage() {}

func (x *SetChannelVisitedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChannelVisitedRequest.ProtoReflect.Descriptor instead.
func (*SetChannelVisitedRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{104}
}

func (x *SetChannelVisitedRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SetChannelVisitedRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *SetChannelVisitedRequest) GetDappId() int64 {
	if x != nil {
		return x.DappId
	}
	return 0
}

type SetChannelVisitedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret *CommonResp `protobuf:"bytes,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
}

func (x *SetChannelVisitedResponse) Reset() {
	*x = SetChannelVisitedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChannelVisitedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChannelVisitedResponse) ProtoMessage() {}

func (x *SetChannelVisitedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChannelVisitedResponse.ProtoReflect.Descriptor instead.
func (*SetChannelVisitedResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{105}
}

func (x *SetChannelVisitedResponse) GetRet() *CommonResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

type GetChannelVisitedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  int64   `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`          // 部落ID
	DappId []int64 `protobuf:"varint,2,rep,packed,name=DappId,proto3" json:"DappId,omitempty"` // Dapp id
	Size   int64   `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`            // 获取大小
	UserId int64   `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId,omitempty"`        // 访问者
}

func (x *GetChannelVisitedRequest) Reset() {
	*x = GetChannelVisitedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelVisitedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelVisitedRequest) ProtoMessage() {}

func (x *GetChannelVisitedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelVisitedRequest.ProtoReflect.Descriptor instead.
func (*GetChannelVisitedRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{106}
}

func (x *GetChannelVisitedRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *GetChannelVisitedRequest) GetDappId() []int64 {
	if x != nil {
		return x.DappId
	}
	return nil
}

func (x *GetChannelVisitedRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetChannelVisitedRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetChannelVisitedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  *CommonResp                                 `protobuf:"bytes,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	List []*GetChannelVisitedResponse_ChannelVisited `protobuf:"bytes,2,rep,name=List,proto3" json:"List,omitempty"`
}

func (x *GetChannelVisitedResponse) Reset() {
	*x = GetChannelVisitedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelVisitedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelVisitedResponse) ProtoMessage() {}

func (x *GetChannelVisitedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelVisitedResponse.ProtoReflect.Descriptor instead.
func (*GetChannelVisitedResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{107}
}

func (x *GetChannelVisitedResponse) GetRet() *CommonResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *GetChannelVisitedResponse) GetList() []*GetChannelVisitedResponse_ChannelVisited {
	if x != nil {
		return x.List
	}
	return nil
}

type GetShareCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid      int64 `protobuf:"varint,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`           // 部落ID
	UserId     int64 `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`         // 邀请者
	QrCodeType int64 `protobuf:"varint,3,opt,name=QrCodeType,proto3" json:"QrCodeType,omitempty"` // 0 永久码 1快速码
	IsFresh    int64 `protobuf:"varint,4,opt,name=IsFresh,proto3" json:"IsFresh,omitempty"`       // 1 刷新code
}

func (x *GetShareCodeRequest) Reset() {
	*x = GetShareCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShareCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareCodeRequest) ProtoMessage() {}

func (x *GetShareCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareCodeRequest.ProtoReflect.Descriptor instead.
func (*GetShareCodeRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{108}
}

func (x *GetShareCodeRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *GetShareCodeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetShareCodeRequest) GetQrCodeType() int64 {
	if x != nil {
		return x.QrCodeType
	}
	return 0
}

func (x *GetShareCodeRequest) GetIsFresh() int64 {
	if x != nil {
		return x.IsFresh
	}
	return 0
}

type GetShareCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *CommonResp `protobuf:"bytes,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Code       string      `protobuf:"bytes,2,opt,name=Code,proto3" json:"Code,omitempty"`              // 分享码
	ExpireTime int64       `protobuf:"varint,3,opt,name=ExpireTime,proto3" json:"ExpireTime,omitempty"` // 过期时间，永久码过期时间为 0
}

func (x *GetShareCodeResponse) Reset() {
	*x = GetShareCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShareCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareCodeResponse) ProtoMessage() {}

func (x *GetShareCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareCodeResponse.ProtoReflect.Descriptor instead.
func (*GetShareCodeResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{109}
}

func (x *GetShareCodeResponse) GetRet() *CommonResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *GetShareCodeResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetShareCodeResponse) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

type GetShareCodeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"` // 分享码
}

func (x *GetShareCodeInfoRequest) Reset() {
	*x = GetShareCodeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShareCodeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareCodeInfoRequest) ProtoMessage() {}

func (x *GetShareCodeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareCodeInfoRequest.ProtoReflect.Descriptor instead.
func (*GetShareCodeInfoRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{110}
}

func (x *GetShareCodeInfoRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetShareCodeInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        *CommonResp `protobuf:"bytes,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	QrCodeType int64       `protobuf:"varint,2,opt,name=QrCodeType,proto3" json:"QrCodeType,omitempty"` // 0 永久码 1快速码
	ExpireTime int64       `protobuf:"varint,3,opt,name=ExpireTime,proto3" json:"ExpireTime,omitempty"` // 过期时间
	TbMid      int64       `protobuf:"varint,4,opt,name=TbMid,proto3" json:"TbMid,omitempty"`           //部落id
}

func (x *GetShareCodeInfoResponse) Reset() {
	*x = GetShareCodeInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShareCodeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareCodeInfoResponse) ProtoMessage() {}

func (x *GetShareCodeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareCodeInfoResponse.ProtoReflect.Descriptor instead.
func (*GetShareCodeInfoResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{111}
}

func (x *GetShareCodeInfoResponse) GetRet() *CommonResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *GetShareCodeInfoResponse) GetQrCodeType() int64 {
	if x != nil {
		return x.QrCodeType
	}
	return 0
}

func (x *GetShareCodeInfoResponse) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *GetShareCodeInfoResponse) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

type ClubSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords string `protobuf:"bytes,1,opt,name=Keywords,proto3" json:"Keywords,omitempty"` // 关键词，部落名称/分享码
}

func (x *ClubSearchRequest) Reset() {
	*x = ClubSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubSearchRequest) ProtoMessage() {}

func (x *ClubSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubSearchRequest.ProtoReflect.Descriptor instead.
func (*ClubSearchRequest) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{112}
}

func (x *ClubSearchRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

type ClubSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   *CommonResp                          `protobuf:"bytes,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Infos []*ClubSearchResponse_ClubSearchInfo `protobuf:"bytes,2,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *ClubSearchResponse) Reset() {
	*x = ClubSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubSearchResponse) ProtoMessage() {}

func (x *ClubSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubSearchResponse.ProtoReflect.Descriptor instead.
func (*ClubSearchResponse) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{113}
}

func (x *ClubSearchResponse) GetRet() *CommonResp {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *ClubSearchResponse) GetInfos() []*ClubSearchResponse_ClubSearchInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type StatLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64             `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Platform PlatformType      `protobuf:"varint,2,opt,name=Platform,proto3,enum=club.PlatformType" json:"Platform,omitempty"`
	Action   ActionType        `protobuf:"varint,3,opt,name=Action,proto3,enum=club.ActionType" json:"Action,omitempty"`
	Ext      map[string]string `protobuf:"bytes,4,rep,name=Ext,proto3" json:"Ext,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // redpackCreate 红包数量:quantity  clubVisted 部落ID:tb_mid
}

func (x *StatLogReq) Reset() {
	*x = StatLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatLogReq) ProtoMessage() {}

func (x *StatLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatLogReq.ProtoReflect.Descriptor instead.
func (*StatLogReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{114}
}

func (x *StatLogReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StatLogReq) GetPlatform() PlatformType {
	if x != nil {
		return x.Platform
	}
	return PlatformType_Ios
}

func (x *StatLogReq) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_ClubVisited
}

func (x *StatLogReq) GetExt() map[string]string {
	if x != nil {
		return x.Ext
	}
	return nil
}

type StatLogResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CommonResp `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *StatLogResp) Reset() {
	*x = StatLogResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatLogResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatLogResp) ProtoMessage() {}

func (x *StatLogResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatLogResp.ProtoReflect.Descriptor instead.
func (*StatLogResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{115}
}

func (x *StatLogResp) GetResult() *CommonResp {
	if x != nil {
		return x.Result
	}
	return nil
}

type HasAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`                  // 撤回消息操作用户
	OUserId int64  `protobuf:"varint,2,opt,name=OUserId,proto3" json:"OUserId,omitempty"`                // 被撤回消息用户
	TbMid   int64  `protobuf:"varint,3,opt,name=TbMid,proto3" json:"TbMid,omitempty"`                    //  部落ID
	Access  Access `protobuf:"varint,4,opt,name=Access,proto3,enum=club.Access" json:"Access,omitempty"` // 权限
}

func (x *HasAuthReq) Reset() {
	*x = HasAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasAuthReq) ProtoMessage() {}

func (x *HasAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasAuthReq.ProtoReflect.Descriptor instead.
func (*HasAuthReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{116}
}

func (x *HasAuthReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *HasAuthReq) GetOUserId() int64 {
	if x != nil {
		return x.OUserId
	}
	return 0
}

func (x *HasAuthReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *HasAuthReq) GetAccess() Access {
	if x != nil {
		return x.Access
	}
	return Access_MMessage
}

type HasAuthResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *CommonResp `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	HasAuth bool        `protobuf:"varint,2,opt,name=HasAuth,proto3" json:"HasAuth,omitempty"` //是否有权限
}

func (x *HasAuthResp) Reset() {
	*x = HasAuthResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasAuthResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasAuthResp) ProtoMessage() {}

func (x *HasAuthResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasAuthResp.ProtoReflect.Descriptor instead.
func (*HasAuthResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{117}
}

func (x *HasAuthResp) GetResult() *CommonResp {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *HasAuthResp) GetHasAuth() bool {
	if x != nil {
		return x.HasAuth
	}
	return false
}

type GetInfoByShareCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShareCode string `protobuf:"bytes,1,opt,name=ShareCode,proto3" json:"ShareCode,omitempty"`
}

func (x *GetInfoByShareCodeReq) Reset() {
	*x = GetInfoByShareCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoByShareCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoByShareCodeReq) ProtoMessage() {}

func (x *GetInfoByShareCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoByShareCodeReq.ProtoReflect.Descriptor instead.
func (*GetInfoByShareCodeReq) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{118}
}

func (x *GetInfoByShareCodeReq) GetShareCode() string {
	if x != nil {
		return x.ShareCode
	}
	return ""
}

type GetInfoByShareCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CommonResp `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	UserId int64       `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Nick   string      `protobuf:"bytes,3,opt,name=Nick,proto3" json:"Nick,omitempty"`
	Avatar string      `protobuf:"bytes,4,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Desc   string      `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Num    int64       `protobuf:"varint,6,opt,name=Num,proto3" json:"Num,omitempty"`
}

func (x *GetInfoByShareCodeResp) Reset() {
	*x = GetInfoByShareCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfoByShareCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoByShareCodeResp) ProtoMessage() {}

func (x *GetInfoByShareCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoByShareCodeResp.ProtoReflect.Descriptor instead.
func (*GetInfoByShareCodeResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{119}
}

func (x *GetInfoByShareCodeResp) GetResult() *CommonResp {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetInfoByShareCodeResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetInfoByShareCodeResp) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *GetInfoByShareCodeResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetInfoByShareCodeResp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetInfoByShareCodeResp) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type ChannelInfoResp_ChannelInfoSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gag       int64 `protobuf:"varint,1,opt,name=Gag,proto3" json:"Gag,omitempty"`             //是否能发言 0正常 1全体禁言 2单人禁
	IsClean   int64 `protobuf:"varint,2,opt,name=IsClean,proto3" json:"IsClean,omitempty"`     //是否清除聊天记录 1是 0否 1时调
	MsgTime   int64 `protobuf:"varint,3,opt,name=MsgTime,proto3" json:"MsgTime,omitempty"`     // 此时间之前的聊天记录不显示 后端
	CleanTime int64 `protobuf:"varint,4,opt,name=CleanTime,proto3" json:"CleanTime,omitempty"` // 聊天记录清理时间值，分钟为单位
}

func (x *ChannelInfoResp_ChannelInfoSetting) Reset() {
	*x = ChannelInfoResp_ChannelInfoSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelInfoResp_ChannelInfoSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInfoResp_ChannelInfoSetting) ProtoMessage() {}

func (x *ChannelInfoResp_ChannelInfoSetting) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInfoResp_ChannelInfoSetting.ProtoReflect.Descriptor instead.
func (*ChannelInfoResp_ChannelInfoSetting) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{59, 0}
}

func (x *ChannelInfoResp_ChannelInfoSetting) GetGag() int64 {
	if x != nil {
		return x.Gag
	}
	return 0
}

func (x *ChannelInfoResp_ChannelInfoSetting) GetIsClean() int64 {
	if x != nil {
		return x.IsClean
	}
	return 0
}

func (x *ChannelInfoResp_ChannelInfoSetting) GetMsgTime() int64 {
	if x != nil {
		return x.MsgTime
	}
	return 0
}

func (x *ChannelInfoResp_ChannelInfoSetting) GetCleanTime() int64 {
	if x != nil {
		return x.CleanTime
	}
	return 0
}

type GetUserListRespUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsetId   int64    `protobuf:"varint,1,opt,name=UsetId,proto3" json:"UsetId,omitempty"`
	Nick     string   `protobuf:"bytes,2,opt,name=Nick,proto3" json:"Nick,omitempty"`
	Avatar   string   `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	IsMaster int64    `protobuf:"varint,4,opt,name=IsMaster,proto3" json:"IsMaster,omitempty"`
	NickName string   `protobuf:"bytes,5,opt,name=NickName,proto3" json:"NickName,omitempty"`
	Remark   string   `protobuf:"bytes,6,opt,name=Remark,proto3" json:"Remark,omitempty"`
	RoleIds  []string `protobuf:"bytes,7,rep,name=RoleIds,proto3" json:"RoleIds,omitempty"`
	ColorId  int64    `protobuf:"varint,8,opt,name=ColorId,proto3" json:"ColorId,omitempty"`
	RoleName string   `protobuf:"bytes,9,opt,name=RoleName,proto3" json:"RoleName,omitempty"`
}

func (x *GetUserListRespUserInfo) Reset() {
	*x = GetUserListRespUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserListRespUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListRespUserInfo) ProtoMessage() {}

func (x *GetUserListRespUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListRespUserInfo.ProtoReflect.Descriptor instead.
func (*GetUserListRespUserInfo) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{67, 0}
}

func (x *GetUserListRespUserInfo) GetUsetId() int64 {
	if x != nil {
		return x.UsetId
	}
	return 0
}

func (x *GetUserListRespUserInfo) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *GetUserListRespUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetUserListRespUserInfo) GetIsMaster() int64 {
	if x != nil {
		return x.IsMaster
	}
	return 0
}

func (x *GetUserListRespUserInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *GetUserListRespUserInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *GetUserListRespUserInfo) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *GetUserListRespUserInfo) GetColorId() int64 {
	if x != nil {
		return x.ColorId
	}
	return 0
}

func (x *GetUserListRespUserInfo) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type GetRecommendResponse_ClubInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`                //部落ID
	Name      string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`            //部落名称
	Avatar    string   `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`        //部落头像链接
	Desc      string   `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`            //部落描述
	UserCount int64    `protobuf:"varint,5,opt,name=UserCount,proto3" json:"UserCount,omitempty"` //部落总人数
	Users     []string `protobuf:"bytes,6,rep,name=Users,proto3" json:"Users,omitempty"`          //最近加入部落用户头像链接
	IsMaster  int64    `protobuf:"varint,7,opt,name=IsMaster,proto3" json:"IsMaster,omitempty"`   // 是否是部落主
	IsPub     int64    `protobuf:"varint,8,opt,name=IsPub,proto3" json:"IsPub,omitempty"`         // 是否是公开部落
	IsJoin    int64    `protobuf:"varint,9,opt,name=IsJoin,proto3" json:"IsJoin,omitempty"`       // 是否已经加入部落
	Bg        string   `protobuf:"bytes,10,opt,name=Bg,proto3" json:"Bg,omitempty"`               // 部落背景
}

func (x *GetRecommendResponse_ClubInfo) Reset() {
	*x = GetRecommendResponse_ClubInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendResponse_ClubInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendResponse_ClubInfo) ProtoMessage() {}

func (x *GetRecommendResponse_ClubInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendResponse_ClubInfo.ProtoReflect.Descriptor instead.
func (*GetRecommendResponse_ClubInfo) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{74, 0}
}

func (x *GetRecommendResponse_ClubInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetRecommendResponse_ClubInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRecommendResponse_ClubInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetRecommendResponse_ClubInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetRecommendResponse_ClubInfo) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *GetRecommendResponse_ClubInfo) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GetRecommendResponse_ClubInfo) GetIsMaster() int64 {
	if x != nil {
		return x.IsMaster
	}
	return 0
}

func (x *GetRecommendResponse_ClubInfo) GetIsPub() int64 {
	if x != nil {
		return x.IsPub
	}
	return 0
}

func (x *GetRecommendResponse_ClubInfo) GetIsJoin() int64 {
	if x != nil {
		return x.IsJoin
	}
	return 0
}

func (x *GetRecommendResponse_ClubInfo) GetBg() string {
	if x != nil {
		return x.Bg
	}
	return ""
}

type GetRoleListResponse_RoleListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *RoleInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	Count int64     `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *GetRoleListResponse_RoleListResp) Reset() {
	*x = GetRoleListResponse_RoleListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleListResponse_RoleListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleListResponse_RoleListResp) ProtoMessage() {}

func (x *GetRoleListResponse_RoleListResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleListResponse_RoleListResp.ProtoReflect.Descriptor instead.
func (*GetRoleListResponse_RoleListResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{77, 0}
}

func (x *GetRoleListResponse_RoleListResp) GetInfo() *RoleInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetRoleListResponse_RoleListResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetRoleInfoResponse_RoleInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *RoleInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	Count int64     `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *GetRoleInfoResponse_RoleInfoResp) Reset() {
	*x = GetRoleInfoResponse_RoleInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleInfoResponse_RoleInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleInfoResponse_RoleInfoResp) ProtoMessage() {}

func (x *GetRoleInfoResponse_RoleInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleInfoResponse_RoleInfoResp.ProtoReflect.Descriptor instead.
func (*GetRoleInfoResponse_RoleInfoResp) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{79, 0}
}

func (x *GetRoleInfoResponse_RoleInfoResp) GetInfo() *RoleInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetRoleInfoResponse_RoleInfoResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetUsersNickNameResponse_UserNameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          int64  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`                  //用户ID
	NickName        string `protobuf:"bytes,2,opt,name=NickName,proto3" json:"NickName,omitempty"`               // 用户昵称
	CustomNickName  string `protobuf:"bytes,3,opt,name=CustomNickName,proto3" json:"CustomNickName,omitempty"`   // 部落昵称
	Remark          string `protobuf:"bytes,4,opt,name=Remark,proto3" json:"Remark,omitempty"`                   // 备注
	FinallyNickName string `protobuf:"bytes,5,opt,name=FinallyNickName,proto3" json:"FinallyNickName,omitempty"` // 最终展示昵称 备注(Remark） > 部落昵称(CustomNickName) > 用户昵称(NickName)
}

func (x *GetUsersNickNameResponse_UserNameInfo) Reset() {
	*x = GetUsersNickNameResponse_UserNameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersNickNameResponse_UserNameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersNickNameResponse_UserNameInfo) ProtoMessage() {}

func (x *GetUsersNickNameResponse_UserNameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersNickNameResponse_UserNameInfo.ProtoReflect.Descriptor instead.
func (*GetUsersNickNameResponse_UserNameInfo) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{91, 0}
}

func (x *GetUsersNickNameResponse_UserNameInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUsersNickNameResponse_UserNameInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *GetUsersNickNameResponse_UserNameInfo) GetCustomNickName() string {
	if x != nil {
		return x.CustomNickName
	}
	return ""
}

func (x *GetUsersNickNameResponse_UserNameInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *GetUsersNickNameResponse_UserNameInfo) GetFinallyNickName() string {
	if x != nil {
		return x.FinallyNickName
	}
	return ""
}

type GetChannelVisitedResponse_ChannelVisitedUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar   string `protobuf:"bytes,1,opt,name=Avatar,proto3" json:"Avatar,omitempty"`     // 头像
	NickName string `protobuf:"bytes,2,opt,name=NickName,proto3" json:"NickName,omitempty"` // 名称
	Time     int64  `protobuf:"varint,3,opt,name=Time,proto3" json:"Time,omitempty"`        // 最近访问时间
	UserId   string `protobuf:"bytes,4,opt,name=UserId,proto3" json:"UserId,omitempty"`     // 用户ID
}

func (x *GetChannelVisitedResponse_ChannelVisitedUserInfo) Reset() {
	*x = GetChannelVisitedResponse_ChannelVisitedUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelVisitedResponse_ChannelVisitedUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelVisitedResponse_ChannelVisitedUserInfo) ProtoMessage() {}

func (x *GetChannelVisitedResponse_ChannelVisitedUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelVisitedResponse_ChannelVisitedUserInfo.ProtoReflect.Descriptor instead.
func (*GetChannelVisitedResponse_ChannelVisitedUserInfo) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{107, 0}
}

func (x *GetChannelVisitedResponse_ChannelVisitedUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetChannelVisitedResponse_ChannelVisitedUserInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *GetChannelVisitedResponse_ChannelVisitedUserInfo) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GetChannelVisitedResponse_ChannelVisitedUserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetChannelVisitedResponse_ChannelVisited struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count     int64                                               `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`   // 最近访问用户总数
	DappId    int64                                               `protobuf:"varint,2,opt,name=DappId,proto3" json:"DappId,omitempty"` // DappId
	UserInfos []*GetChannelVisitedResponse_ChannelVisitedUserInfo `protobuf:"bytes,3,rep,name=UserInfos,proto3" json:"UserInfos,omitempty"`
}

func (x *GetChannelVisitedResponse_ChannelVisited) Reset() {
	*x = GetChannelVisitedResponse_ChannelVisited{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelVisitedResponse_ChannelVisited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelVisitedResponse_ChannelVisited) ProtoMessage() {}

func (x *GetChannelVisitedResponse_ChannelVisited) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelVisitedResponse_ChannelVisited.ProtoReflect.Descriptor instead.
func (*GetChannelVisitedResponse_ChannelVisited) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{107, 1}
}

func (x *GetChannelVisitedResponse_ChannelVisited) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetChannelVisitedResponse_ChannelVisited) GetDappId() int64 {
	if x != nil {
		return x.DappId
	}
	return 0
}

func (x *GetChannelVisitedResponse_ChannelVisited) GetUserInfos() []*GetChannelVisitedResponse_ChannelVisitedUserInfo {
	if x != nil {
		return x.UserInfos
	}
	return nil
}

type ClubSearchResponse_ClubSearchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick    string `protobuf:"bytes,1,opt,name=Nick,proto3" json:"Nick,omitempty"`
	Avatar  string `protobuf:"bytes,2,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Desc    string `protobuf:"bytes,3,opt,name=Desc,proto3" json:"Desc,omitempty"`
	UserNum int64  `protobuf:"varint,4,opt,name=UserNum,proto3" json:"UserNum,omitempty"`
	TbMid   int64  `protobuf:"varint,5,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
}

func (x *ClubSearchResponse_ClubSearchInfo) Reset() {
	*x = ClubSearchResponse_ClubSearchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_club_v1_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubSearchResponse_ClubSearchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubSearchResponse_ClubSearchInfo) ProtoMessage() {}

func (x *ClubSearchResponse_ClubSearchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_club_v1_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubSearchResponse_ClubSearchInfo.ProtoReflect.Descriptor instead.
func (*ClubSearchResponse_ClubSearchInfo) Descriptor() ([]byte, []int) {
	return file_define_club_v1_proto_rawDescGZIP(), []int{113, 0}
}

func (x *ClubSearchResponse_ClubSearchInfo) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *ClubSearchResponse_ClubSearchInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ClubSearchResponse_ClubSearchInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ClubSearchResponse_ClubSearchInfo) GetUserNum() int64 {
	if x != nil {
		return x.UserNum
	}
	return 0
}

func (x *ClubSearchResponse_ClubSearchInfo) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

var File_define_club_v1_proto protoreflect.FileDescriptor

var file_define_club_v1_proto_rawDesc = []byte{
	0x0a, 0x14, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6c, 0x75, 0x62, 0x22, 0x3a, 0x0a, 0x0a,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x55, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x62,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x94, 0x02, 0x0a, 0x10, 0x43, 0x6c, 0x75, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x42, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x42, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x50, 0x75, 0x62, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x49, 0x73, 0x50, 0x75, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x65, 0x77, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x61, 0x73, 0x50, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x48, 0x61, 0x73, 0x50, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x0c, 0x43, 0x6c, 0x75, 0x62, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x0b,
	0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9c, 0x05, 0x0a, 0x0b, 0x43, 0x6c,
	0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x42, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x42, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x44,
	0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x6e, 0x43, 0x6c, 0x75, 0x62, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x49, 0x6e, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x44, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x73, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x49, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x49, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x68, 0x6f,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x68, 0x6f,
	0x77, 0x53, 0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x2c, 0x0a, 0x05, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x52, 0x05, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x12,
	0x3b, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x07, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x12, 0x2e, 0x0a, 0x04, 0x44, 0x61, 0x70, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x44, 0x61, 0x70, 0x70, 0x52, 0x04, 0x44, 0x61, 0x70, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xf8, 0x01, 0x0a, 0x10, 0x43, 0x6c, 0x75,
	0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62,
	0x4d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x53, 0x68, 0x6f,
	0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x5a, 0x6f, 0x6e, 0x65,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x52, 0x08, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x22, 0x88, 0x04, 0x0a, 0x18, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x6d, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x49, 0x6d, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49,
	0x73, 0x44, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f,
	0x72, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54,
	0x62, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x44, 0x61, 0x70, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x5a,
	0x6f, 0x6e, 0x65, 0x73, 0x44, 0x61, 0x70, 0x70, 0x52, 0x04, 0x44, 0x61, 0x70, 0x70, 0x22, 0xa0,
	0x01, 0x0a, 0x15, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x73, 0x4d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x69, 0x6e, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4d,
	0x69, 0x6e, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c,
	0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x06, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x95, 0x02, 0x0a, 0x1b, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x4d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x4d, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x50, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50,
	0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x4d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xf9, 0x03, 0x0a, 0x12, 0x43, 0x6c,
	0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6d,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6d, 0x67, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x45, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x03, 0x45, 0x78, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x45, 0x78, 0x74,
	0x52, 0x03, 0x45, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6d, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x6d, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x49, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x44, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44,
	0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x48, 0x61, 0x73, 0x50, 0x72, 0x61, 0x69,
	0x73, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x6e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x61, 0x6e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x45, 0x78, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4c, 0x69,
	0x6e, 0x6b, 0x22, 0xf8, 0x01, 0x0a, 0x14, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x44, 0x61, 0x70, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x70, 0x70, 0x44, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x70, 0x70, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x61, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x44, 0x61, 0x70, 0x70, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x70,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4f, 0x66, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x49, 0x73, 0x4f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x61, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x61, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x22, 0x40, 0x0a,
	0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x49,
	0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6d, 0x49, 0x64, 0x22,
	0x76, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x47, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x47, 0x61, 0x67, 0x12,
	0x18, 0x0a, 0x07, 0x49, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x49, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x49, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6d, 0x49, 0x64,
	0x22, 0xe6, 0x04, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x42, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x42, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6d, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53,
	0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73,
	0x44, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49,
	0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x73, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x70, 0x69, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x41, 0x70, 0x69, 0x12, 0x20, 0x0a, 0x03, 0x45, 0x78, 0x74, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x45, 0x78, 0x74, 0x52, 0x03, 0x45, 0x78, 0x74, 0x22, 0x54, 0x0a, 0x08, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x45, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x62, 0x5a, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x62, 0x5a, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x61, 0x73, 0x65, 0x6d, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x61, 0x73, 0x65, 0x6d, 0x6f, 0x62, 0x49, 0x64, 0x22,
	0x38, 0x0a, 0x08, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x11, 0x41, 0x50, 0x49,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43,
	0x6c, 0x75, 0x62, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x75, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x4f, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4f, 0x70,
	0x74, 0x22, 0x68, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62,
	0x4d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x44, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4f, 0x70, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4f, 0x70, 0x74, 0x22, 0x66, 0x0a, 0x0e, 0x43,
	0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x66, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x67, 0x49, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x42, 0x67, 0x49, 0x6d, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x50, 0x75, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x50, 0x75, 0x62, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62,
	0x4d, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x15, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x74, 0x65, 0x22, 0x43, 0x0a, 0x19, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6c, 0x75, 0x62,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x66, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x43, 0x66, 0x67, 0x52, 0x03, 0x63, 0x66, 0x67, 0x22, 0x33, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x66, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x73, 0x22, 0x6a,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x43, 0x66, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x03,
	0x63, 0x66, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x66, 0x67, 0x52,
	0x03, 0x63, 0x66, 0x67, 0x12, 0x24, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x41, 0x50, 0x49, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x36, 0x0a, 0x1c, 0x43, 0x6c,
	0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x62,
	0x4d, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x54, 0x62, 0x4d, 0x69,
	0x64, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x1d, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x24, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x32, 0x0a, 0x1a, 0x49, 0x6e, 0x63, 0x72, 0x43,
	0x6c, 0x75, 0x62, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x6d, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x6d, 0x69, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x44, 0x61, 0x70, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04,
	0x44, 0x61, 0x70, 0x70, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x13, 0x0a, 0x02, 0x42, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x02, 0x42,
	0x67, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4c, 0x61, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x44, 0x65, 0x73, 0x63, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x44, 0x61, 0x70, 0x70, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x42, 0x67, 0x22,
	0x1c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x22, 0x7c, 0x0a,
	0x0a, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x69, 0x73,
	0x74, 0x75, 0x72, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x44, 0x69, 0x73, 0x74,
	0x75, 0x72, 0x62, 0x12, 0x1b, 0x0a, 0x06, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x44,
	0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x52, 0x65, 0x73, 0x70, 0x22, 0x98, 0x01, 0x0a, 0x0c, 0x4a,
	0x6f, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x59, 0x0a, 0x0d, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x50, 0x61,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x50, 0x61, 0x73, 0x73,
	0x22, 0x64, 0x0a, 0x08, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x75, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x4f, 0x75, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x73, 0x50, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x49, 0x73, 0x50, 0x61, 0x73, 0x73, 0x22, 0x25, 0x0a, 0x09, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x54, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62,
	0x4d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x29, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x22, 0x37,
	0x0a, 0x07, 0x51, 0x75, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x0a, 0x0a, 0x08, 0x51, 0x75, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x37, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54,
	0x62, 0x4d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x0a, 0x0a, 0x08,
	0x44, 0x69, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4b, 0x0a, 0x07, 0x4b, 0x69, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x75, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x4f, 0x75, 0x49, 0x44, 0x22, 0x3c, 0x0a, 0x08, 0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x4e, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x69, 0x63, 0x6b, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4e, 0x69, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x22, 0xcc, 0x02, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x62, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x42, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x02, 0x42, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x49, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x04, 0x52, 0x08, 0x49, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x49, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x05, 0x52, 0x08, 0x49, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x49, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x06, 0x52, 0x07, 0x49, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4e, 0x61, 0x6d, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x44, 0x65, 0x73, 0x63, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x42, 0x67, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x49, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x49, 0x73, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x49, 0x73, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x6c, 0x75, 0x62, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x51, 0x0a, 0x0d, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x20, 0x0a, 0x0e, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0xb0, 0x03, 0x0a, 0x10, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x62, 0x5a, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x5a, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x61, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x61, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x44, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x70,
	0x70, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x70,
	0x70, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x70, 0x70, 0x44, 0x65, 0x73,
	0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x70, 0x70, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x44, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x4f,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x49,
	0x73, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x49, 0x73, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x67, 0x0a, 0x0d, 0x5a, 0x6f, 0x6e, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x5a, 0x6f, 0x6e,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xff, 0x01, 0x0a, 0x10,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54,
	0x62, 0x5a, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x43, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x43, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x12, 0x19, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x43, 0x6f,
	0x69, 0x6e, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x13, 0x0a,
	0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x6a, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x43, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x43, 0x69, 0x64, 0x22, 0x99,
	0x06, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x5a, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f,
	0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6d, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x49, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x49, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x04,
	0x44, 0x61, 0x70, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x5a, 0x6f, 0x6e,
	0x65, 0x73, 0x44, 0x61, 0x70, 0x70, 0x52, 0x04, 0x44, 0x61, 0x70, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x70,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x42, 0x0a, 0x07, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x30,
	0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x1a, 0x78, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x61, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x47, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x43, 0x6c,
	0x65, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x0b, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x75, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x4f, 0x75, 0x49, 0x44, 0x22, 0x0e, 0x0a, 0x0c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6c, 0x0a, 0x10, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x62, 0x43, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x43, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x53,
	0x0a, 0x0d, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x10, 0x0a, 0x0e, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xca, 0x01, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00,
	0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x45,
	0x78, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x08, 0x45, 0x78, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x45, 0x78, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4e, 0x69,
	0x63, 0x6b, 0x22, 0xb8, 0x02, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0xee, 0x01, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x49, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x49, 0x73, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x94, 0x01,
	0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x54, 0x62, 0x4f, 0x5a, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x54, 0x62,
	0x4f, 0x5a, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x52, 0x61, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x52, 0x61, 0x6e, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x6d, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x49, 0x6d, 0x49, 0x64, 0x22, 0x69, 0x0a, 0x0b, 0x7a, 0x6f, 0x6e, 0x65, 0x53, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x5a,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x54, 0x62, 0x4f, 0x5a, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x54, 0x62, 0x4f, 0x5a, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x53, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x62, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54,
	0x62, 0x4d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x62, 0x4f, 0x6d, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x54, 0x62, 0x4f, 0x6d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x15, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc2, 0x02, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x6c,
	0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xe8, 0x01, 0x0a, 0x08, 0x43, 0x6c, 0x75, 0x62, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x73, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x50, 0x75, 0x62, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x50, 0x75, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4a,
	0x6f, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x73, 0x4a, 0x6f, 0x69,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x42, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x42,
	0x67, 0x22, 0xf8, 0x04, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54,
	0x62, 0x4d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73,
	0x44, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x55, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07,
	0x53, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x07, 0x53, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x4d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x08, 0x4d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02,
	0x52, 0x08, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a,
	0x08, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x03, 0x52, 0x08, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x50, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x04, 0x52, 0x08, 0x50, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x23, 0x0a, 0x0a, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x0a, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x50, 0x53, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x08, 0x50, 0x53, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x4d, 0x4d, 0x61, 0x69, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x05, 0x4d, 0x4d, 0x61, 0x69, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x4d, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x08, 0x4d, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x53, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4d, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x53, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x50, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4d, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x50, 0x53, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x4d, 0x4d, 0x61, 0x69, 0x6e, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x4d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x2a, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x48, 0x0a, 0x0c,
	0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x48,
	0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x2e, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54,
	0x62, 0x4d, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x12,
	0x4f, 0x70, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x4f, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4f,
	0x70, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x04, 0x4f, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x4f, 0x70, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x55, 0x6e, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x65, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4c, 0x61, 0x73,
	0x74, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x60, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x55, 0x6e,
	0x52, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x75, 0x6d,
	0x12, 0x20, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x73, 0x22, 0x5d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x55, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x4f, 0x55, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x62, 0x4d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69,
	0x64, 0x22, 0x8c, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x1a, 0xac, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69,
	0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x6c,
	0x79, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x6c, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x7b, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x62, 0x4d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x43, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x43, 0x69, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x5a, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x5a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52,
	0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b,
	0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x4f, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x41, 0x76, 0x61, 0x72, 0x74,
	0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x41, 0x76, 0x61, 0x72, 0x74,
	0x61, 0x72, 0x22, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x42, 0x61,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x50, 0x61, 0x67, 0x65, 0x73, 0x22, 0x77, 0x0a, 0x0d, 0x4f, 0x70, 0x74, 0x42, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4f, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x4f, 0x55, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4f, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x4f, 0x70, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x10,
	0x0a, 0x0e, 0x4f, 0x70, 0x74, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x60, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69,
	0x73, 0x69, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x44, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x22, 0x3f, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x03,
	0x52, 0x65, 0x74, 0x22, 0x74, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x44, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x94, 0x03, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x1a,
	0x78, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x94, 0x01, 0x0a, 0x0e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x44, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x54, 0x0a, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56,
	0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x22, 0x7d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x51, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x46, 0x72, 0x65, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x46, 0x72, 0x65, 0x73, 0x68, 0x22,
	0x6e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x2d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x94,
	0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x52,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x54, 0x62, 0x4d, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x11, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x12, 0x43, 0x6c, 0x75, 0x62, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x03, 0x52, 0x65,
	0x74, 0x12, 0x3d, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73,
	0x1a, 0x80, 0x01, 0x0a, 0x0e, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62,
	0x4d, 0x69, 0x64, 0x22, 0xe3, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x28, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x03, 0x45, 0x78, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x2e, 0x45, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x45, 0x78,
	0x74, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x37, 0x0a, 0x0b, 0x53, 0x74, 0x61,
	0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x7a, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x06, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x51,
	0x0a, 0x0b, 0x48, 0x61, 0x73, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x61, 0x73, 0x41, 0x75,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x48, 0x61, 0x73, 0x41, 0x75, 0x74,
	0x68, 0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x2a, 0x3e, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x50, 0x5f, 0x47, 0x52, 0x4f, 0x55,
	0x50, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x4d, 0x41, 0x4c, 0x4c, 0x5f, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f,
	0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x02, 0x2a, 0x31, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x6f, 0x73, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x63, 0x2a, 0xfa, 0x01, 0x0a, 0x0a, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6c, 0x75,
	0x62, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x6c,
	0x75, 0x62, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12,
	0x0e, 0x0a, 0x0a, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x62, 0x48, 0x35, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64,
	0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6c, 0x75, 0x62, 0x48, 0x35, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6c, 0x75, 0x62, 0x48, 0x35,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x6c, 0x75, 0x62,
	0x44, 0x69, 0x73, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x07, 0x12, 0x11, 0x0a,
	0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x08,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6c, 0x75, 0x62, 0x51, 0x75, 0x69, 0x74, 0x10, 0x09, 0x12, 0x0e,
	0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x0a, 0x12, 0x0d,
	0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x10, 0x0b, 0x12, 0x18, 0x0a,
	0x14, 0x43, 0x6c, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x0c, 0x2a, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x00, 0x32,
	0xbc, 0x1b, 0x0a, 0x0a, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x0b, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x11, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x11, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c,
	0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x12, 0x67, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x11, 0x73,
	0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x41, 0x63, 0x74,
	0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x12, 0x73, 0x61, 0x76,
	0x65, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x66, 0x67, 0x12,
	0x1f, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x66, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x67, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x66, 0x67, 0x12, 0x1f,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x43, 0x66, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x66, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x63, 0x0a, 0x18, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x22, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x49, 0x6e, 0x63, 0x72, 0x43, 0x6c,
	0x75, 0x62, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x43, 0x6c, 0x75, 0x62, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x0f, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62,
	0x12, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x12, 0x0e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x71,
	0x75, 0x69, 0x74, 0x12, 0x0d, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x51, 0x75, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x51, 0x75, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2c, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0d, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x0e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x25, 0x0a, 0x04, 0x6b, 0x69, 0x63, 0x6b, 0x12, 0x0d, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x4b, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4b,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x4e, 0x69,
	0x63, 0x6b, 0x12, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x69, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x4e,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43,
	0x6c, 0x75, 0x62, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a,
	0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0a, 0x7a, 0x6f, 0x6e, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x5a, 0x6f,
	0x6e, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0a, 0x7a, 0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x13, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x5a, 0x6f, 0x6e, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x5a,
	0x6f, 0x6e, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3a, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x7a, 0x6f,
	0x6e, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x11, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x7a, 0x6f,
	0x6e, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x62, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x11,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x11, 0x67, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x53, 0x61, 0x76, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x4f,
	0x70, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x4f, 0x70, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x18,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x55, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x23, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x55,
	0x6e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x55, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x4e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x42, 0x61, 0x6e, 0x12, 0x13, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x42, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x12, 0x1e, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69, 0x73,
	0x69, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69, 0x73,
	0x69, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65,
	0x64, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a,
	0x43, 0x6c, 0x75, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x07, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a,
	0x07, 0x48, 0x61, 0x73, 0x41, 0x75, 0x74, 0x68, 0x12, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x68, 0x61, 0x73, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x48, 0x61, 0x73, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x07,
	0x5a, 0x05, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_define_club_v1_proto_rawDescOnce sync.Once
	file_define_club_v1_proto_rawDescData = file_define_club_v1_proto_rawDesc
)

func file_define_club_v1_proto_rawDescGZIP() []byte {
	file_define_club_v1_proto_rawDescOnce.Do(func() {
		file_define_club_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_define_club_v1_proto_rawDescData)
	})
	return file_define_club_v1_proto_rawDescData
}

var file_define_club_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_define_club_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 130)
var file_define_club_v1_proto_goTypes = []interface{}{
	(GroupType)(0),                                           // 0: club.GroupType
	(PlatformType)(0),                                        // 1: club.PlatformType
	(ActionType)(0),                                          // 2: club.ActionType
	(Access)(0),                                              // 3: club.Access
	(*CommonResp)(nil),                                       // 4: club.CommonResp
	(*ClubListReq)(nil),                                      // 5: club.ClubListReq
	(*ClubListRespList)(nil),                                 // 6: club.ClubListRespList
	(*ClubListResp)(nil),                                     // 7: club.ClubListResp
	(*ClubInfoReq)(nil),                                      // 8: club.ClubInfoReq
	(*ClubInfoRes)(nil),                                      // 9: club.ClubInfoRes
	(*ClubInfoResZones)(nil),                                 // 10: club.ClubInfoResZones
	(*ClubInfoResZonesChannels)(nil),                         // 11: club.ClubInfoResZonesChannels
	(*ClubInfoResAccessList)(nil),                            // 12: club.ClubInfoResAccessList
	(*ClubInfoResAccessListAccess)(nil),                      // 13: club.ClubInfoResAccessListAccess
	(*ClubInfoResDynamic)(nil),                               // 14: club.ClubInfoResDynamic
	(*ClubInfoResDynamicExt)(nil),                            // 15: club.ClubInfoResDynamicExt
	(*ClubInfoResZonesDapp)(nil),                             // 16: club.ClubInfoResZonesDapp
	(*GroupUserStatusReq)(nil),                               // 17: club.GroupUserStatusReq
	(*GroupUserStatusRes)(nil),                               // 18: club.GroupUserStatusRes
	(*GroupInfoReq)(nil),                                     // 19: club.GroupInfoReq
	(*GroupInfoRes)(nil),                                     // 20: club.GroupInfoRes
	(*GroupExt)(nil),                                         // 21: club.GroupExt
	(*APIError)(nil),                                         // 22: club.APIError
	(*APICommonResponse)(nil),                                // 23: club.APICommonResponse
	(*SetClubRecommendRequest)(nil),                          // 24: club.SetClubRecommendRequest
	(*SetClubDynamicActRequest)(nil),                         // 25: club.SetClubDynamicActRequest
	(*ClubDynamicCfg)(nil),                                   // 26: club.ClubDynamicCfg
	(*ClubDynamicStatistics)(nil),                            // 27: club.ClubDynamicStatistics
	(*SaveClubDynamicCfgRequest)(nil),                        // 28: club.SaveClubDynamicCfgRequest
	(*GetClubDynamicCfgsRequest)(nil),                        // 29: club.GetClubDynamicCfgsRequest
	(*GetClubDynamicCfgsResponse)(nil),                       // 30: club.GetClubDynamicCfgsResponse
	(*ClubDynamicStatisticsRequest)(nil),                     // 31: club.ClubDynamicStatisticsRequest
	(*ClubDynamicStatisticsResponse)(nil),                    // 32: club.ClubDynamicStatisticsResponse
	(*IncrClubParticipateRequest)(nil),                       // 33: club.IncrClubParticipateRequest
	(*CreateReq)(nil),                                        // 34: club.CreateReq
	(*CreateResp)(nil),                                       // 35: club.CreateResp
	(*DisturbReq)(nil),                                       // 36: club.DisturbReq
	(*DisturbResp)(nil),                                      // 37: club.DisturbResp
	(*JoinApplyReq)(nil),                                     // 38: club.JoinApplyReq
	(*JoinApplyResp)(nil),                                    // 39: club.JoinApplyResp
	(*AuditReq)(nil),                                         // 40: club.AuditReq
	(*AuditResp)(nil),                                        // 41: club.AuditResp
	(*GetAccessReq)(nil),                                     // 42: club.GetAccessReq
	(*GetAccessResp)(nil),                                    // 43: club.GetAccessResp
	(*QuitReq)(nil),                                          // 44: club.QuitReq
	(*QuitResp)(nil),                                         // 45: club.QuitResp
	(*DissReq)(nil),                                          // 46: club.DissReq
	(*DissResp)(nil),                                         // 47: club.DissResp
	(*KickReq)(nil),                                          // 48: club.KickReq
	(*KickResp)(nil),                                         // 49: club.KickResp
	(*SetNickReq)(nil),                                       // 50: club.SetNickReq
	(*SetNickResp)(nil),                                      // 51: club.SetNickResp
	(*ClubModifyReq)(nil),                                    // 52: club.ClubModifyReq
	(*ClubModifyResp)(nil),                                   // 53: club.ClubModifyResp
	(*ZoneCreateReq)(nil),                                    // 54: club.ZoneCreateReq
	(*ZoneCreateResp)(nil),                                   // 55: club.ZoneCreateResp
	(*ChannelCreateReq)(nil),                                 // 56: club.ChannelCreateReq
	(*ChannelCreateResp)(nil),                                // 57: club.ChannelCreateResp
	(*ZoneUpdateReq)(nil),                                    // 58: club.ZoneUpdateReq
	(*ZoneUpdateResp)(nil),                                   // 59: club.ZoneUpdateResp
	(*ChannelUpdateReq)(nil),                                 // 60: club.ChannelUpdateReq
	(*ChannelUpdateResp)(nil),                                // 61: club.ChannelUpdateResp
	(*ChannelInfoReq)(nil),                                   // 62: club.ChannelInfoReq
	(*ChannelInfoResp)(nil),                                  // 63: club.ChannelInfoResp
	(*TransferReq)(nil),                                      // 64: club.TransferReq
	(*TransferResp)(nil),                                     // 65: club.TransferResp
	(*ChannelDeleteReq)(nil),                                 // 66: club.ChannelDeleteReq
	(*ChannelDeleteResp)(nil),                                // 67: club.ChannelDeleteResp
	(*ZoneDeleteReq)(nil),                                    // 68: club.ZoneDeleteReq
	(*ZoneDeleteResp)(nil),                                   // 69: club.ZoneDeleteResp
	(*GetUserListReq)(nil),                                   // 70: club.getUserListReq
	(*GetUserListResp)(nil),                                  // 71: club.getUserListResp
	(*ChannelSortReq)(nil),                                   // 72: club.channelSortReq
	(*ZoneSortReq)(nil),                                      // 73: club.zoneSortReq
	(*ClubSortReq)(nil),                                      // 74: club.clubSortReq
	(*GetUserCustomInfoReq)(nil),                             // 75: club.getUserCustomInfoReq
	(*GetUserCustomInfoResp)(nil),                            // 76: club.getUserCustomInfoResp
	(*GetRecommendRequest)(nil),                              // 77: club.GetRecommendRequest
	(*GetRecommendResponse)(nil),                             // 78: club.GetRecommendResponse
	(*RoleInfo)(nil),                                         // 79: club.RoleInfo
	(*GetRoleListRequest)(nil),                               // 80: club.GetRoleListRequest
	(*GetRoleListResponse)(nil),                              // 81: club.GetRoleListResponse
	(*GetRoleInfoRequest)(nil),                               // 82: club.GetRoleInfoRequest
	(*GetRoleInfoResponse)(nil),                              // 83: club.GetRoleInfoResponse
	(*SaveRoleInfoRequest)(nil),                              // 84: club.SaveRoleInfoRequest
	(*SaveRoleInfoResponse)(nil),                             // 85: club.SaveRoleInfoResponse
	(*DeleteRoleInfoRequest)(nil),                            // 86: club.DeleteRoleInfoRequest
	(*DeleteRoleInfoResponse)(nil),                           // 87: club.DeleteRoleInfoResponse
	(*SetRoleSortRequest)(nil),                               // 88: club.SetRoleSortRequest
	(*SetRoleSortResponse)(nil),                              // 89: club.SetRoleSortResponse
	(*OptRoleUserRequest)(nil),                               // 90: club.OptRoleUserRequest
	(*OptRoleUserResponse)(nil),                              // 91: club.OptRoleUserResponse
	(*GetDynamicUnReadStaticRequest)(nil),                    // 92: club.GetDynamicUnReadStaticRequest
	(*GetDynamicUnReadStaticResponse)(nil),                   // 93: club.GetDynamicUnReadStaticResponse
	(*GetUsersNickNameRequest)(nil),                          // 94: club.GetUsersNickNameRequest
	(*GetUsersNickNameResponse)(nil),                         // 95: club.GetUsersNickNameResponse
	(*ChannelNotice)(nil),                                    // 96: club.ChannelNotice
	(*CreateNoticeRequest)(nil),                              // 97: club.CreateNoticeRequest
	(*CreateNoticeResponse)(nil),                             // 98: club.CreateNoticeResponse
	(*UpdateNoticeRequest)(nil),                              // 99: club.UpdateNoticeRequest
	(*UpdateNoticeResponse)(nil),                             // 100: club.UpdateNoticeResponse
	(*DeleteNoticeRequest)(nil),                              // 101: club.DeleteNoticeRequest
	(*DeleteNoticeResponse)(nil),                             // 102: club.DeleteNoticeResponse
	(*GetBanListRequest)(nil),                                // 103: club.GetBanListRequest
	(*BanUserInfo)(nil),                                      // 104: club.BanUserInfo
	(*GetBanListResponse)(nil),                               // 105: club.GetBanListResponse
	(*OptBanRequest)(nil),                                    // 106: club.OptBanRequest
	(*OptBanResponse)(nil),                                   // 107: club.OptBanResponse
	(*SetChannelVisitedRequest)(nil),                         // 108: club.SetChannelVisitedRequest
	(*SetChannelVisitedResponse)(nil),                        // 109: club.SetChannelVisitedResponse
	(*GetChannelVisitedRequest)(nil),                         // 110: club.GetChannelVisitedRequest
	(*GetChannelVisitedResponse)(nil),                        // 111: club.GetChannelVisitedResponse
	(*GetShareCodeRequest)(nil),                              // 112: club.GetShareCodeRequest
	(*GetShareCodeResponse)(nil),                             // 113: club.GetShareCodeResponse
	(*GetShareCodeInfoRequest)(nil),                          // 114: club.GetShareCodeInfoRequest
	(*GetShareCodeInfoResponse)(nil),                         // 115: club.GetShareCodeInfoResponse
	(*ClubSearchRequest)(nil),                                // 116: club.ClubSearchRequest
	(*ClubSearchResponse)(nil),                               // 117: club.ClubSearchResponse
	(*StatLogReq)(nil),                                       // 118: club.StatLogReq
	(*StatLogResp)(nil),                                      // 119: club.StatLogResp
	(*HasAuthReq)(nil),                                       // 120: club.hasAuthReq
	(*HasAuthResp)(nil),                                      // 121: club.HasAuthResp
	(*GetInfoByShareCodeReq)(nil),                            // 122: club.GetInfoByShareCodeReq
	(*GetInfoByShareCodeResp)(nil),                           // 123: club.GetInfoByShareCodeResp
	(*ChannelInfoResp_ChannelInfoSetting)(nil),               // 124: club.ChannelInfoResp.ChannelInfoSetting
	(*GetUserListRespUserInfo)(nil),                          // 125: club.getUserListResp.userInfo
	(*GetRecommendResponse_ClubInfo)(nil),                    // 126: club.GetRecommendResponse.ClubInfo
	(*GetRoleListResponse_RoleListResp)(nil),                 // 127: club.GetRoleListResponse.RoleListResp
	(*GetRoleInfoResponse_RoleInfoResp)(nil),                 // 128: club.GetRoleInfoResponse.RoleInfoResp
	(*GetUsersNickNameResponse_UserNameInfo)(nil),            // 129: club.GetUsersNickNameResponse.UserNameInfo
	(*GetChannelVisitedResponse_ChannelVisitedUserInfo)(nil), // 130: club.GetChannelVisitedResponse.ChannelVisitedUserInfo
	(*GetChannelVisitedResponse_ChannelVisited)(nil),         // 131: club.GetChannelVisitedResponse.ChannelVisited
	(*ClubSearchResponse_ClubSearchInfo)(nil),                // 132: club.ClubSearchResponse.ClubSearchInfo
	nil, // 133: club.StatLogReq.ExtEntry
}
var file_define_club_v1_proto_depIdxs = []int32{
	6,   // 0: club.ClubListResp.List:type_name -> club.ClubListRespList
	10,  // 1: club.ClubInfoRes.Zones:type_name -> club.ClubInfoResZones
	12,  // 2: club.ClubInfoRes.AccessList:type_name -> club.ClubInfoResAccessList
	14,  // 3: club.ClubInfoRes.Dynamic:type_name -> club.ClubInfoResDynamic
	16,  // 4: club.ClubInfoRes.Dapp:type_name -> club.ClubInfoResZonesDapp
	4,   // 5: club.ClubInfoRes.CommonResp:type_name -> club.CommonResp
	11,  // 6: club.ClubInfoResZones.Channels:type_name -> club.ClubInfoResZonesChannels
	16,  // 7: club.ClubInfoResZonesChannels.Dapp:type_name -> club.ClubInfoResZonesDapp
	13,  // 8: club.ClubInfoResAccessList.Access:type_name -> club.ClubInfoResAccessListAccess
	15,  // 9: club.ClubInfoResDynamic.Ext:type_name -> club.ClubInfoResDynamicExt
	0,   // 10: club.GroupInfoReq.GroupType:type_name -> club.GroupType
	21,  // 11: club.GroupInfoRes.Ext:type_name -> club.GroupExt
	22,  // 12: club.APICommonResponse.Error:type_name -> club.APIError
	26,  // 13: club.SaveClubDynamicCfgRequest.cfg:type_name -> club.ClubDynamicCfg
	26,  // 14: club.GetClubDynamicCfgsResponse.cfg:type_name -> club.ClubDynamicCfg
	22,  // 15: club.GetClubDynamicCfgsResponse.Error:type_name -> club.APIError
	27,  // 16: club.ClubDynamicStatisticsResponse.statistics:type_name -> club.ClubDynamicStatistics
	22,  // 17: club.ClubDynamicStatisticsResponse.Error:type_name -> club.APIError
	4,   // 18: club.JoinApplyResp.CommonResp:type_name -> club.CommonResp
	4,   // 19: club.KickResp.CommonResp:type_name -> club.CommonResp
	16,  // 20: club.ChannelInfoResp.Dapp:type_name -> club.ClubInfoResZonesDapp
	124, // 21: club.ChannelInfoResp.Setting:type_name -> club.ChannelInfoResp.ChannelInfoSetting
	4,   // 22: club.ChannelInfoResp.CommonResp:type_name -> club.CommonResp
	125, // 23: club.getUserListResp.users:type_name -> club.getUserListResp.userInfo
	126, // 24: club.GetRecommendResponse.clubInfo:type_name -> club.GetRecommendResponse.ClubInfo
	127, // 25: club.GetRoleListResponse.List:type_name -> club.GetRoleListResponse.RoleListResp
	128, // 26: club.GetRoleInfoResponse.Info:type_name -> club.GetRoleInfoResponse.RoleInfoResp
	79,  // 27: club.SaveRoleInfoRequest.Info:type_name -> club.RoleInfo
	129, // 28: club.GetUsersNickNameResponse.Infos:type_name -> club.GetUsersNickNameResponse.UserNameInfo
	96,  // 29: club.CreateNoticeRequest.Notice:type_name -> club.ChannelNotice
	4,   // 30: club.CreateNoticeResponse.CommonResp:type_name -> club.CommonResp
	96,  // 31: club.UpdateNoticeRequest.Notice:type_name -> club.ChannelNotice
	96,  // 32: club.DeleteNoticeRequest.Notice:type_name -> club.ChannelNotice
	104, // 33: club.GetBanListResponse.List:type_name -> club.BanUserInfo
	4,   // 34: club.SetChannelVisitedResponse.Ret:type_name -> club.CommonResp
	4,   // 35: club.GetChannelVisitedResponse.Ret:type_name -> club.CommonResp
	131, // 36: club.GetChannelVisitedResponse.List:type_name -> club.GetChannelVisitedResponse.ChannelVisited
	4,   // 37: club.GetShareCodeResponse.Ret:type_name -> club.CommonResp
	4,   // 38: club.GetShareCodeInfoResponse.Ret:type_name -> club.CommonResp
	4,   // 39: club.ClubSearchResponse.Ret:type_name -> club.CommonResp
	132, // 40: club.ClubSearchResponse.infos:type_name -> club.ClubSearchResponse.ClubSearchInfo
	1,   // 41: club.StatLogReq.Platform:type_name -> club.PlatformType
	2,   // 42: club.StatLogReq.Action:type_name -> club.ActionType
	133, // 43: club.StatLogReq.Ext:type_name -> club.StatLogReq.ExtEntry
	4,   // 44: club.StatLogResp.Result:type_name -> club.CommonResp
	3,   // 45: club.hasAuthReq.Access:type_name -> club.Access
	4,   // 46: club.HasAuthResp.Result:type_name -> club.CommonResp
	4,   // 47: club.GetInfoByShareCodeResp.Result:type_name -> club.CommonResp
	79,  // 48: club.GetRoleListResponse.RoleListResp.Info:type_name -> club.RoleInfo
	79,  // 49: club.GetRoleInfoResponse.RoleInfoResp.Info:type_name -> club.RoleInfo
	130, // 50: club.GetChannelVisitedResponse.ChannelVisited.UserInfos:type_name -> club.GetChannelVisitedResponse.ChannelVisitedUserInfo
	5,   // 51: club.ClubServer.getClubList:input_type -> club.ClubListReq
	8,   // 52: club.ClubServer.getClubInfo:input_type -> club.ClubInfoReq
	17,  // 53: club.ClubServer.getGroupUserStatus:input_type -> club.GroupUserStatusReq
	19,  // 54: club.ClubServer.getGroupInfo:input_type -> club.GroupInfoReq
	25,  // 55: club.ClubServer.setClubDynamicAct:input_type -> club.SetClubDynamicActRequest
	28,  // 56: club.ClubServer.saveClubDynamicCfg:input_type -> club.SaveClubDynamicCfgRequest
	29,  // 57: club.ClubServer.getClubDynamicCfg:input_type -> club.GetClubDynamicCfgsRequest
	31,  // 58: club.ClubServer.getClubDynamicStatistics:input_type -> club.ClubDynamicStatisticsRequest
	33,  // 59: club.ClubServer.IncrClubParticipate:input_type -> club.IncrClubParticipateRequest
	34,  // 60: club.ClubServer.create:input_type -> club.CreateReq
	36,  // 61: club.ClubServer.disturb:input_type -> club.DisturbReq
	38,  // 62: club.ClubServer.joinApply:input_type -> club.JoinApplyReq
	40,  // 63: club.ClubServer.audit:input_type -> club.AuditReq
	42,  // 64: club.ClubServer.getAccess:input_type -> club.GetAccessReq
	44,  // 65: club.ClubServer.quit:input_type -> club.QuitReq
	46,  // 66: club.ClubServer.dissolution:input_type -> club.DissReq
	48,  // 67: club.ClubServer.kick:input_type -> club.KickReq
	50,  // 68: club.ClubServer.setNick:input_type -> club.SetNickReq
	52,  // 69: club.ClubServer.setting:input_type -> club.ClubModifyReq
	54,  // 70: club.ClubServer.zoneCreate:input_type -> club.ZoneCreateReq
	56,  // 71: club.ClubServer.channelCreate:input_type -> club.ChannelCreateReq
	58,  // 72: club.ClubServer.zoneUpdate:input_type -> club.ZoneUpdateReq
	60,  // 73: club.ClubServer.channelUpdate:input_type -> club.ChannelUpdateReq
	66,  // 74: club.ClubServer.channelDelete:input_type -> club.ChannelDeleteReq
	62,  // 75: club.ClubServer.getChannelInfo:input_type -> club.ChannelInfoReq
	68,  // 76: club.ClubServer.zoneDelete:input_type -> club.ZoneDeleteReq
	64,  // 77: club.ClubServer.transfer:input_type -> club.TransferReq
	70,  // 78: club.ClubServer.getUserList:input_type -> club.getUserListReq
	72,  // 79: club.ClubServer.channelSort:input_type -> club.channelSortReq
	73,  // 80: club.ClubServer.zoneSort:input_type -> club.zoneSortReq
	74,  // 81: club.ClubServer.clubSort:input_type -> club.clubSortReq
	75,  // 82: club.ClubServer.getUserCustomInfo:input_type -> club.getUserCustomInfoReq
	77,  // 83: club.ClubServer.GetRecommend:input_type -> club.GetRecommendRequest
	80,  // 84: club.ClubServer.GetRoleList:input_type -> club.GetRoleListRequest
	82,  // 85: club.ClubServer.GetRoleInfo:input_type -> club.GetRoleInfoRequest
	84,  // 86: club.ClubServer.SaveRoleInfo:input_type -> club.SaveRoleInfoRequest
	86,  // 87: club.ClubServer.DeleteRoleInfo:input_type -> club.DeleteRoleInfoRequest
	90,  // 88: club.ClubServer.OptRoleUser:input_type -> club.OptRoleUserRequest
	88,  // 89: club.ClubServer.SetRoleSort:input_type -> club.SetRoleSortRequest
	92,  // 90: club.ClubServer.GetDynamicUnReadStatic:input_type -> club.GetDynamicUnReadStaticRequest
	94,  // 91: club.ClubServer.GetUsersNickName:input_type -> club.GetUsersNickNameRequest
	97,  // 92: club.ClubServer.CreateNotice:input_type -> club.CreateNoticeRequest
	99,  // 93: club.ClubServer.UpdateNotice:input_type -> club.UpdateNoticeRequest
	101, // 94: club.ClubServer.DeleteNotice:input_type -> club.DeleteNoticeRequest
	103, // 95: club.ClubServer.GetBanList:input_type -> club.GetBanListRequest
	106, // 96: club.ClubServer.OptBan:input_type -> club.OptBanRequest
	108, // 97: club.ClubServer.SetChannelVisited:input_type -> club.SetChannelVisitedRequest
	110, // 98: club.ClubServer.GetChannelVisited:input_type -> club.GetChannelVisitedRequest
	112, // 99: club.ClubServer.GetShareCode:input_type -> club.GetShareCodeRequest
	114, // 100: club.ClubServer.GetShareCodeInfo:input_type -> club.GetShareCodeInfoRequest
	116, // 101: club.ClubServer.ClubSearch:input_type -> club.ClubSearchRequest
	118, // 102: club.ClubServer.StatLog:input_type -> club.StatLogReq
	120, // 103: club.ClubServer.HasAuth:input_type -> club.hasAuthReq
	122, // 104: club.ClubServer.GetInfoByShareCode:input_type -> club.GetInfoByShareCodeReq
	7,   // 105: club.ClubServer.getClubList:output_type -> club.ClubListResp
	9,   // 106: club.ClubServer.getClubInfo:output_type -> club.ClubInfoRes
	18,  // 107: club.ClubServer.getGroupUserStatus:output_type -> club.GroupUserStatusRes
	20,  // 108: club.ClubServer.getGroupInfo:output_type -> club.GroupInfoRes
	23,  // 109: club.ClubServer.setClubDynamicAct:output_type -> club.APICommonResponse
	23,  // 110: club.ClubServer.saveClubDynamicCfg:output_type -> club.APICommonResponse
	30,  // 111: club.ClubServer.getClubDynamicCfg:output_type -> club.GetClubDynamicCfgsResponse
	32,  // 112: club.ClubServer.getClubDynamicStatistics:output_type -> club.ClubDynamicStatisticsResponse
	23,  // 113: club.ClubServer.IncrClubParticipate:output_type -> club.APICommonResponse
	35,  // 114: club.ClubServer.create:output_type -> club.CreateResp
	37,  // 115: club.ClubServer.disturb:output_type -> club.DisturbResp
	39,  // 116: club.ClubServer.joinApply:output_type -> club.JoinApplyResp
	41,  // 117: club.ClubServer.audit:output_type -> club.AuditResp
	43,  // 118: club.ClubServer.getAccess:output_type -> club.GetAccessResp
	45,  // 119: club.ClubServer.quit:output_type -> club.QuitResp
	47,  // 120: club.ClubServer.dissolution:output_type -> club.DissResp
	49,  // 121: club.ClubServer.kick:output_type -> club.KickResp
	51,  // 122: club.ClubServer.setNick:output_type -> club.SetNickResp
	53,  // 123: club.ClubServer.setting:output_type -> club.ClubModifyResp
	55,  // 124: club.ClubServer.zoneCreate:output_type -> club.ZoneCreateResp
	57,  // 125: club.ClubServer.channelCreate:output_type -> club.ChannelCreateResp
	59,  // 126: club.ClubServer.zoneUpdate:output_type -> club.ZoneUpdateResp
	61,  // 127: club.ClubServer.channelUpdate:output_type -> club.ChannelUpdateResp
	67,  // 128: club.ClubServer.channelDelete:output_type -> club.ChannelDeleteResp
	63,  // 129: club.ClubServer.getChannelInfo:output_type -> club.ChannelInfoResp
	69,  // 130: club.ClubServer.zoneDelete:output_type -> club.ZoneDeleteResp
	65,  // 131: club.ClubServer.transfer:output_type -> club.TransferResp
	71,  // 132: club.ClubServer.getUserList:output_type -> club.getUserListResp
	23,  // 133: club.ClubServer.channelSort:output_type -> club.APICommonResponse
	23,  // 134: club.ClubServer.zoneSort:output_type -> club.APICommonResponse
	23,  // 135: club.ClubServer.clubSort:output_type -> club.APICommonResponse
	76,  // 136: club.ClubServer.getUserCustomInfo:output_type -> club.getUserCustomInfoResp
	78,  // 137: club.ClubServer.GetRecommend:output_type -> club.GetRecommendResponse
	81,  // 138: club.ClubServer.GetRoleList:output_type -> club.GetRoleListResponse
	83,  // 139: club.ClubServer.GetRoleInfo:output_type -> club.GetRoleInfoResponse
	85,  // 140: club.ClubServer.SaveRoleInfo:output_type -> club.SaveRoleInfoResponse
	87,  // 141: club.ClubServer.DeleteRoleInfo:output_type -> club.DeleteRoleInfoResponse
	91,  // 142: club.ClubServer.OptRoleUser:output_type -> club.OptRoleUserResponse
	89,  // 143: club.ClubServer.SetRoleSort:output_type -> club.SetRoleSortResponse
	93,  // 144: club.ClubServer.GetDynamicUnReadStatic:output_type -> club.GetDynamicUnReadStaticResponse
	95,  // 145: club.ClubServer.GetUsersNickName:output_type -> club.GetUsersNickNameResponse
	98,  // 146: club.ClubServer.CreateNotice:output_type -> club.CreateNoticeResponse
	100, // 147: club.ClubServer.UpdateNotice:output_type -> club.UpdateNoticeResponse
	102, // 148: club.ClubServer.DeleteNotice:output_type -> club.DeleteNoticeResponse
	105, // 149: club.ClubServer.GetBanList:output_type -> club.GetBanListResponse
	107, // 150: club.ClubServer.OptBan:output_type -> club.OptBanResponse
	109, // 151: club.ClubServer.SetChannelVisited:output_type -> club.SetChannelVisitedResponse
	111, // 152: club.ClubServer.GetChannelVisited:output_type -> club.GetChannelVisitedResponse
	113, // 153: club.ClubServer.GetShareCode:output_type -> club.GetShareCodeResponse
	115, // 154: club.ClubServer.GetShareCodeInfo:output_type -> club.GetShareCodeInfoResponse
	117, // 155: club.ClubServer.ClubSearch:output_type -> club.ClubSearchResponse
	119, // 156: club.ClubServer.StatLog:output_type -> club.StatLogResp
	121, // 157: club.ClubServer.HasAuth:output_type -> club.HasAuthResp
	123, // 158: club.ClubServer.GetInfoByShareCode:output_type -> club.GetInfoByShareCodeResp
	105, // [105:159] is the sub-list for method output_type
	51,  // [51:105] is the sub-list for method input_type
	51,  // [51:51] is the sub-list for extension type_name
	51,  // [51:51] is the sub-list for extension extendee
	0,   // [0:51] is the sub-list for field type_name
}

func init() { file_define_club_v1_proto_init() }
func file_define_club_v1_proto_init() {
	if File_define_club_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_define_club_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubListRespList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubInfoResZones); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubInfoResZonesChannels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubInfoResAccessList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubInfoResAccessListAccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubInfoResDynamic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubInfoResDynamicExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubInfoResZonesDapp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupUserStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupUserStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APICommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetClubRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetClubDynamicActRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubDynamicCfg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubDynamicStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveClubDynamicCfgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClubDynamicCfgsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClubDynamicCfgsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubDynamicStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubDynamicStatisticsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncrClubParticipateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisturbReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisturbResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinApplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccessReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccessResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DissReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DissResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNickReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNickResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubModifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubModifyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelCreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneDeleteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelSortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZoneSortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubSortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCustomInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCustomInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRoleInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveRoleInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRoleSortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRoleSortResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptRoleUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptRoleUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDynamicUnReadStaticRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDynamicUnReadStaticResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersNickNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersNickNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBanListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBanListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptBanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptBanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChannelVisitedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChannelVisitedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelVisitedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelVisitedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShareCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShareCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShareCodeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShareCodeInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatLogResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasAuthResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoByShareCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfoByShareCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelInfoResp_ChannelInfoSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserListRespUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendResponse_ClubInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleListResponse_RoleListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleInfoResponse_RoleInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersNickNameResponse_UserNameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelVisitedResponse_ChannelVisitedUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelVisitedResponse_ChannelVisited); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_club_v1_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubSearchResponse_ClubSearchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_define_club_v1_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_define_club_v1_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_define_club_v1_proto_msgTypes[34].OneofWrappers = []interface{}{}
	file_define_club_v1_proto_msgTypes[48].OneofWrappers = []interface{}{}
	file_define_club_v1_proto_msgTypes[56].OneofWrappers = []interface{}{}
	file_define_club_v1_proto_msgTypes[66].OneofWrappers = []interface{}{}
	file_define_club_v1_proto_msgTypes[75].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_define_club_v1_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   130,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_define_club_v1_proto_goTypes,
		DependencyIndexes: file_define_club_v1_proto_depIdxs,
		EnumInfos:         file_define_club_v1_proto_enumTypes,
		MessageInfos:      file_define_club_v1_proto_msgTypes,
	}.Build()
	File_define_club_v1_proto = out.File
	file_define_club_v1_proto_rawDesc = nil
	file_define_club_v1_proto_goTypes = nil
	file_define_club_v1_proto_depIdxs = nil
}
