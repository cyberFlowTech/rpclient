// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: define/dynamicsrv.proto

package dynamicsrv

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 部落信息
type SupClub struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`                //部落ID
	Name      string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`            //部落名称
	Avatar    string   `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`        //部落头像链接
	Desc      string   `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`            //部落描述
	UserCount int64    `protobuf:"varint,5,opt,name=UserCount,proto3" json:"UserCount,omitempty"` //部落总人数
	Users     []string `protobuf:"bytes,6,rep,name=Users,proto3" json:"Users,omitempty"`          //用户头像链接
}

func (x *SupClub) Reset() {
	*x = SupClub{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupClub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupClub) ProtoMessage() {}

func (x *SupClub) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupClub.ProtoReflect.Descriptor instead.
func (*SupClub) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{0}
}

func (x *SupClub) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SupClub) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SupClub) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SupClub) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SupClub) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *SupClub) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` // 用户ID
	Nick   string `protobuf:"bytes,2,opt,name=Nick,proto3" json:"Nick,omitempty"`      // 用户昵称
	Avatar string `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`  // 用户头像
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{1}
}

func (x *UserInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserInfo) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *UserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type DynamicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId        int64  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`                // 用户ID
	Type          int64  `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"`                    // 动态类型（0：普通用户动态，2长文）
	Title         string `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`                   // 标题
	Desc          string `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`                     // 描述信息
	Imgs          string `protobuf:"bytes,6,opt,name=Imgs,proto3" json:"Imgs,omitempty"`                     // 封面图片
	Etime         int64  `protobuf:"varint,7,opt,name=Etime,proto3" json:"Etime,omitempty"`                  // 最后编辑时间
	Status        int64  `protobuf:"varint,8,opt,name=Status,proto3" json:"Status,omitempty"`                // 文章状态（-1已删除,0编辑中，1已发布）
	Ext           string `protobuf:"bytes,9,opt,name=Ext,proto3" json:"Ext,omitempty"`                       // 扩展信息(json格式存储)
	ToDownloadNum int64  `protobuf:"varint,10,opt,name=ToDownloadNum,proto3" json:"ToDownloadNum,omitempty"` // 链接跳转下载次数
	ToAppNum      int64  `protobuf:"varint,11,opt,name=ToAppNum,proto3" json:"ToAppNum,omitempty"`           // 链接跳转app次数
	ToH5Num       int64  `protobuf:"varint,12,opt,name=ToH5Num,proto3" json:"ToH5Num,omitempty"`             // 打开h5分享链接
	ImgType       int64  `protobuf:"varint,13,opt,name=ImgType,proto3" json:"ImgType,omitempty"`             // 客户端布局处理（0 多图 1横图 2竖图）
	Ctime         int64  `protobuf:"varint,14,opt,name=Ctime,proto3" json:"Ctime,omitempty"`                 // 发表时间
	Media         string `protobuf:"bytes,15,opt,name=Media,proto3" json:"Media,omitempty"`                  // 媒体资源
	HasCollect    int64  `protobuf:"varint,16,opt,name=HasCollect,proto3" json:"HasCollect,omitempty"`       //是否已经收藏
	HasPraised    int64  `protobuf:"varint,17,opt,name=HasPraised,proto3" json:"HasPraised,omitempty"`       //是否已经点赞
	HasFocus      int64  `protobuf:"varint,18,opt,name=HasFocus,proto3" json:"HasFocus,omitempty"`           //是否已经关注
	PraiseCount   int64  `protobuf:"varint,19,opt,name=PraiseCount,proto3" json:"PraiseCount,omitempty"`     //点赞总数
	CommentCount  int64  `protobuf:"varint,20,opt,name=CommentCount,proto3" json:"CommentCount,omitempty"`   //评论总数
	CollectCount  int64  `protobuf:"varint,21,opt,name=CollectCount,proto3" json:"CollectCount,omitempty"`   //收藏总数
	TbMids        string `protobuf:"bytes,22,opt,name=TbMids,proto3" json:"TbMids,omitempty"`                //同步到到部落ID ->根据部落ID查询部落信息，对外是否可见
	Nick          string `protobuf:"bytes,23,opt,name=Nick,proto3" json:"Nick,omitempty"`                    //昵称 -> 调用 用户服务查询用户信息
	Avatar        string `protobuf:"bytes,24,opt,name=Avatar,proto3" json:"Avatar,omitempty"`                //头像 -> 调用 用户服务查询用户信息
	ShareCount    int64  `protobuf:"varint,25,opt,name=ShareCount,proto3" json:"ShareCount,omitempty"`       //分享总数
	// repeated UserInfo PraiseList = 26; //动态点赞列表
	Text     string   `protobuf:"bytes,27,opt,name=Text,proto3" json:"Text,omitempty"`          //动态内容
	Supclub  *SupClub `protobuf:"bytes,28,opt,name=Supclub,proto3" json:"Supclub,omitempty"`    //部落信息
	CanShare int64    `protobuf:"varint,29,opt,name=CanShare,proto3" json:"CanShare,omitempty"` //是否能分享
}

func (x *DynamicInfo) Reset() {
	*x = DynamicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicInfo) ProtoMessage() {}

func (x *DynamicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicInfo.ProtoReflect.Descriptor instead.
func (*DynamicInfo) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{2}
}

func (x *DynamicInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DynamicInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DynamicInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DynamicInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DynamicInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DynamicInfo) GetImgs() string {
	if x != nil {
		return x.Imgs
	}
	return ""
}

func (x *DynamicInfo) GetEtime() int64 {
	if x != nil {
		return x.Etime
	}
	return 0
}

func (x *DynamicInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DynamicInfo) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *DynamicInfo) GetToDownloadNum() int64 {
	if x != nil {
		return x.ToDownloadNum
	}
	return 0
}

func (x *DynamicInfo) GetToAppNum() int64 {
	if x != nil {
		return x.ToAppNum
	}
	return 0
}

func (x *DynamicInfo) GetToH5Num() int64 {
	if x != nil {
		return x.ToH5Num
	}
	return 0
}

func (x *DynamicInfo) GetImgType() int64 {
	if x != nil {
		return x.ImgType
	}
	return 0
}

func (x *DynamicInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *DynamicInfo) GetMedia() string {
	if x != nil {
		return x.Media
	}
	return ""
}

func (x *DynamicInfo) GetHasCollect() int64 {
	if x != nil {
		return x.HasCollect
	}
	return 0
}

func (x *DynamicInfo) GetHasPraised() int64 {
	if x != nil {
		return x.HasPraised
	}
	return 0
}

func (x *DynamicInfo) GetHasFocus() int64 {
	if x != nil {
		return x.HasFocus
	}
	return 0
}

func (x *DynamicInfo) GetPraiseCount() int64 {
	if x != nil {
		return x.PraiseCount
	}
	return 0
}

func (x *DynamicInfo) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *DynamicInfo) GetCollectCount() int64 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

func (x *DynamicInfo) GetTbMids() string {
	if x != nil {
		return x.TbMids
	}
	return ""
}

func (x *DynamicInfo) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *DynamicInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *DynamicInfo) GetShareCount() int64 {
	if x != nil {
		return x.ShareCount
	}
	return 0
}

func (x *DynamicInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DynamicInfo) GetSupclub() *SupClub {
	if x != nil {
		return x.Supclub
	}
	return nil
}

func (x *DynamicInfo) GetCanShare() int64 {
	if x != nil {
		return x.CanShare
	}
	return 0
}

type CommentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`         //评论ID
	Pid    int64  `protobuf:"varint,2,opt,name=Pid,proto3" json:"Pid,omitempty"`       //评论父ID
	UserId int64  `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"` //评论者UserId
	Text   string `protobuf:"bytes,4,opt,name=Text,proto3" json:"Text,omitempty"`      //评论文本
	// string Img = 5; //评论图片（二选一）
	Time        int64  `protobuf:"varint,6,opt,name=Time,proto3" json:"Time,omitempty"`                //评论时间
	Ouid        int64  `protobuf:"varint,7,opt,name=Ouid,proto3" json:"Ouid,omitempty"`                //被动收到信息的人
	Type        int64  `protobuf:"varint,8,opt,name=Type,proto3" json:"Type,omitempty"`                //评论类型 1评论 2回复
	Nick        string `protobuf:"bytes,9,opt,name=Nick,proto3" json:"Nick,omitempty"`                 // 评论者昵称
	Avatar      string `protobuf:"bytes,10,opt,name=Avatar,proto3" json:"Avatar,omitempty"`            //评论者头像
	ONick       string `protobuf:"bytes,11,opt,name=ONick,proto3" json:"ONick,omitempty"`              //被回复者的名称
	PraiseCount int64  `protobuf:"varint,12,opt,name=PraiseCount,proto3" json:"PraiseCount,omitempty"` //点赞数
	HasPraise   int64  `protobuf:"varint,13,opt,name=HasPraise,proto3" json:"HasPraise,omitempty"`     //是否有点赞
	Gcid        int64  `protobuf:"varint,14,opt,name=Gcid,proto3" json:"Gcid,omitempty"`               //一级评论ID
}

func (x *CommentInfo) Reset() {
	*x = CommentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentInfo) ProtoMessage() {}

func (x *CommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentInfo.ProtoReflect.Descriptor instead.
func (*CommentInfo) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{3}
}

func (x *CommentInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommentInfo) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *CommentInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CommentInfo) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *CommentInfo) GetOuid() int64 {
	if x != nil {
		return x.Ouid
	}
	return 0
}

func (x *CommentInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CommentInfo) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *CommentInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *CommentInfo) GetONick() string {
	if x != nil {
		return x.ONick
	}
	return ""
}

func (x *CommentInfo) GetPraiseCount() int64 {
	if x != nil {
		return x.PraiseCount
	}
	return 0
}

func (x *CommentInfo) GetHasPraise() int64 {
	if x != nil {
		return x.HasPraise
	}
	return 0
}

func (x *CommentInfo) GetGcid() int64 {
	if x != nil {
		return x.Gcid
	}
	return 0
}

type APIError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`      //错误码 0正常
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"` //错误消息
}

func (x *APIError) Reset() {
	*x = APIError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIError) ProtoMessage() {}

func (x *APIError) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIError.ProtoReflect.Descriptor instead.
func (*APIError) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{4}
}

func (x *APIError) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *APIError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type APICommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *APIError `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	Data  string    `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *APICommonResponse) Reset() {
	*x = APICommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APICommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APICommonResponse) ProtoMessage() {}

func (x *APICommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APICommonResponse.ProtoReflect.Descriptor instead.
func (*APICommonResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{5}
}

func (x *APICommonResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *APICommonResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type PublishDynamicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int64   `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`             //动态类型（0：普通用户动态，2:长文
	Text    *string `protobuf:"bytes,2,opt,name=Text,proto3,oneof" json:"Text,omitempty"`        //内容
	Imgs    *string `protobuf:"bytes,3,opt,name=Imgs,proto3,oneof" json:"Imgs,omitempty"`        //图片
	ImgType int64   `protobuf:"varint,4,opt,name=ImgType,proto3" json:"ImgType,omitempty"`       //0多图 1是横图 2是竖图，前端布局使
	Link    string  `protobuf:"bytes,5,opt,name=Link,proto3" json:"Link,omitempty"`              //链接
	Desc    string  `protobuf:"bytes,6,opt,name=Desc,proto3" json:"Desc,omitempty"`              //描述
	Title   *string `protobuf:"bytes,7,opt,name=Title,proto3,oneof" json:"Title,omitempty"`      //标题（文章类型传）
	UserId  int64   `protobuf:"varint,8,opt,name=UserId,proto3" json:"UserId,omitempty"`         //发表动态的用户ID
	Media   string  `protobuf:"bytes,9,opt,name=Media,proto3" json:"Media,omitempty"`            //新版本新增图片列表
	TbMids  []int64 `protobuf:"varint,10,rep,packed,name=TbMids,proto3" json:"TbMids,omitempty"` //同步的部落
}

func (x *PublishDynamicRequest) Reset() {
	*x = PublishDynamicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishDynamicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishDynamicRequest) ProtoMessage() {}

func (x *PublishDynamicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishDynamicRequest.ProtoReflect.Descriptor instead.
func (*PublishDynamicRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{6}
}

func (x *PublishDynamicRequest) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PublishDynamicRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *PublishDynamicRequest) GetImgs() string {
	if x != nil && x.Imgs != nil {
		return *x.Imgs
	}
	return ""
}

func (x *PublishDynamicRequest) GetImgType() int64 {
	if x != nil {
		return x.ImgType
	}
	return 0
}

func (x *PublishDynamicRequest) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *PublishDynamicRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PublishDynamicRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *PublishDynamicRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PublishDynamicRequest) GetMedia() string {
	if x != nil {
		return x.Media
	}
	return ""
}

func (x *PublishDynamicRequest) GetTbMids() []int64 {
	if x != nil {
		return x.TbMids
	}
	return nil
}

type UpdateDynamicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did  int64                  `protobuf:"varint,1,opt,name=Did,proto3" json:"Did,omitempty"`  //动态ID
	Data *PublishDynamicRequest `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"` //更新的数据
}

func (x *UpdateDynamicRequest) Reset() {
	*x = UpdateDynamicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDynamicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDynamicRequest) ProtoMessage() {}

func (x *UpdateDynamicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDynamicRequest.ProtoReflect.Descriptor instead.
func (*UpdateDynamicRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDynamicRequest) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *UpdateDynamicRequest) GetData() *PublishDynamicRequest {
	if x != nil {
		return x.Data
	}
	return nil
}

type DiscoverDynamicListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`     //当前页
	UserId int64 `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"` //当前用户ID
}

func (x *DiscoverDynamicListRequest) Reset() {
	*x = DiscoverDynamicListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverDynamicListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverDynamicListRequest) ProtoMessage() {}

func (x *DiscoverDynamicListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverDynamicListRequest.ProtoReflect.Descriptor instead.
func (*DiscoverDynamicListRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{8}
}

func (x *DiscoverDynamicListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DiscoverDynamicListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DynamicList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *DynamicInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	// SupClub supclub = 2;
	Comments []*Comments `protobuf:"bytes,3,rep,name=Comments,proto3" json:"Comments,omitempty"`
}

func (x *DynamicList) Reset() {
	*x = DynamicList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicList) ProtoMessage() {}

func (x *DynamicList) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicList.ProtoReflect.Descriptor instead.
func (*DynamicList) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{9}
}

func (x *DynamicList) GetInfo() *DynamicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *DynamicList) GetComments() []*Comments {
	if x != nil {
		return x.Comments
	}
	return nil
}

type DiscoverDynamicListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DynamicList `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	Error *APIError      `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"` //公共响应错误
}

func (x *DiscoverDynamicListResponse) Reset() {
	*x = DiscoverDynamicListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverDynamicListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverDynamicListResponse) ProtoMessage() {}

func (x *DiscoverDynamicListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverDynamicListResponse.ProtoReflect.Descriptor instead.
func (*DiscoverDynamicListResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{10}
}

func (x *DiscoverDynamicListResponse) GetList() []*DynamicList {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DiscoverDynamicListResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type ClubDynamicListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`     //当前页
	UserId int64 `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"` //当前用户ID
	TbMid  int64 `protobuf:"varint,3,opt,name=TbMid,proto3" json:"TbMid,omitempty"`   // 部落ID
}

func (x *ClubDynamicListRequest) Reset() {
	*x = ClubDynamicListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubDynamicListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubDynamicListRequest) ProtoMessage() {}

func (x *ClubDynamicListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubDynamicListRequest.ProtoReflect.Descriptor instead.
func (*ClubDynamicListRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{11}
}

func (x *ClubDynamicListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ClubDynamicListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ClubDynamicListRequest) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

type ClubDynamicListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DynamicList `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	Error *APIError      `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"` //公共响应错误
}

func (x *ClubDynamicListResponse) Reset() {
	*x = ClubDynamicListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubDynamicListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubDynamicListResponse) ProtoMessage() {}

func (x *ClubDynamicListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubDynamicListResponse.ProtoReflect.Descriptor instead.
func (*ClubDynamicListResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{12}
}

func (x *ClubDynamicListResponse) GetList() []*DynamicList {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ClubDynamicListResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type UserDynamicListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    int64 `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`       //当前页
	OUserId int64 `protobuf:"varint,2,opt,name=OUserId,proto3" json:"OUserId,omitempty"` //目标用户ID
	UserId  int64 `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`   //当前用户ID
}

func (x *UserDynamicListRequest) Reset() {
	*x = UserDynamicListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDynamicListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDynamicListRequest) ProtoMessage() {}

func (x *UserDynamicListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDynamicListRequest.ProtoReflect.Descriptor instead.
func (*UserDynamicListRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{13}
}

func (x *UserDynamicListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UserDynamicListRequest) GetOUserId() int64 {
	if x != nil {
		return x.OUserId
	}
	return 0
}

func (x *UserDynamicListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 动态请求表单
type InfoForm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duid int64 `protobuf:"varint,1,opt,name=Duid,proto3" json:"Duid,omitempty"` //动态发布者uid,用于查找分表
	Did  int64 `protobuf:"varint,2,opt,name=Did,proto3" json:"Did,omitempty"`   //动态id
	// int64 Status = 3; //动态状态
	UserId int64 `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId,omitempty"` //用户ID用于判断是否有点赞、收藏
}

func (x *InfoForm) Reset() {
	*x = InfoForm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoForm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoForm) ProtoMessage() {}

func (x *InfoForm) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoForm.ProtoReflect.Descriptor instead.
func (*InfoForm) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{14}
}

func (x *InfoForm) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

func (x *InfoForm) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *InfoForm) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DynamicInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*InfoForm `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *DynamicInfoRequest) Reset() {
	*x = DynamicInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicInfoRequest) ProtoMessage() {}

func (x *DynamicInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicInfoRequest.ProtoReflect.Descriptor instead.
func (*DynamicInfoRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{15}
}

func (x *DynamicInfoRequest) GetInfos() []*InfoForm {
	if x != nil {
		return x.Infos
	}
	return nil
}

// 动态详细信息
type DynamicInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*DynamicInfo `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
	Error *APIError      `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *DynamicInfoResponse) Reset() {
	*x = DynamicInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicInfoResponse) ProtoMessage() {}

func (x *DynamicInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicInfoResponse.ProtoReflect.Descriptor instead.
func (*DynamicInfoResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{16}
}

func (x *DynamicInfoResponse) GetInfos() []*DynamicInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *DynamicInfoResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

// 删除动态
type DeleteDynamicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duid int64 `protobuf:"varint,1,opt,name=Duid,proto3" json:"Duid,omitempty"` //发布者uid,用于查找分表
	Did  int64 `protobuf:"varint,2,opt,name=Did,proto3" json:"Did,omitempty"`   //动态id
}

func (x *DeleteDynamicRequest) Reset() {
	*x = DeleteDynamicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDynamicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDynamicRequest) ProtoMessage() {}

func (x *DeleteDynamicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDynamicRequest.ProtoReflect.Descriptor instead.
func (*DeleteDynamicRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteDynamicRequest) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

func (x *DeleteDynamicRequest) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

type SyncDynamicToClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid []int64 `protobuf:"varint,1,rep,packed,name=TbMid,proto3" json:"TbMid,omitempty"` // 部落ID
	Did   int64   `protobuf:"varint,2,opt,name=Did,proto3" json:"Did,omitempty"`            // 动态ID
	Duid  int64   `protobuf:"varint,3,opt,name=Duid,proto3" json:"Duid,omitempty"`          // 动态发布者ID
}

func (x *SyncDynamicToClubRequest) Reset() {
	*x = SyncDynamicToClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncDynamicToClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncDynamicToClubRequest) ProtoMessage() {}

func (x *SyncDynamicToClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncDynamicToClubRequest.ProtoReflect.Descriptor instead.
func (*SyncDynamicToClubRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{18}
}

func (x *SyncDynamicToClubRequest) GetTbMid() []int64 {
	if x != nil {
		return x.TbMid
	}
	return nil
}

func (x *SyncDynamicToClubRequest) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *SyncDynamicToClubRequest) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

type DelDynamicToClubReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did  int64 `protobuf:"varint,1,opt,name=Did,proto3" json:"Did,omitempty"`   // 动态ID
	Duid int64 `protobuf:"varint,2,opt,name=Duid,proto3" json:"Duid,omitempty"` // 动态发布者ID
}

func (x *DelDynamicToClubReq) Reset() {
	*x = DelDynamicToClubReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelDynamicToClubReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDynamicToClubReq) ProtoMessage() {}

func (x *DelDynamicToClubReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDynamicToClubReq.ProtoReflect.Descriptor instead.
func (*DelDynamicToClubReq) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{19}
}

func (x *DelDynamicToClubReq) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *DelDynamicToClubReq) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

// 点赞请求
type PraiseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did       int64 `protobuf:"varint,1,opt,name=Did,proto3" json:"Did,omitempty"`             //动态ID
	Duid      int64 `protobuf:"varint,2,opt,name=Duid,proto3" json:"Duid,omitempty"`           //动态发布者UID
	IsDel     int64 `protobuf:"varint,3,opt,name=IsDel,proto3" json:"IsDel,omitempty"`         // 0 点赞 1 取消
	CommentId int64 `protobuf:"varint,4,opt,name=CommentId,proto3" json:"CommentId,omitempty"` //评论ID（如果点赞的是评论评论那么是0
	UserId    int64 `protobuf:"varint,5,opt,name=UserId,proto3" json:"UserId,omitempty"`       //点赞者UID
}

func (x *PraiseRequest) Reset() {
	*x = PraiseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PraiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PraiseRequest) ProtoMessage() {}

func (x *PraiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PraiseRequest.ProtoReflect.Descriptor instead.
func (*PraiseRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{20}
}

func (x *PraiseRequest) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *PraiseRequest) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

func (x *PraiseRequest) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *PraiseRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *PraiseRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 是否有点赞请求
type HasPraiseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasPraise []*PraiseRequest `protobuf:"bytes,1,rep,name=HasPraise,proto3" json:"HasPraise,omitempty"`
}

func (x *HasPraiseRequest) Reset() {
	*x = HasPraiseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasPraiseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasPraiseRequest) ProtoMessage() {}

func (x *HasPraiseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasPraiseRequest.ProtoReflect.Descriptor instead.
func (*HasPraiseRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{21}
}

func (x *HasPraiseRequest) GetHasPraise() []*PraiseRequest {
	if x != nil {
		return x.HasPraise
	}
	return nil
}

type HasPraise struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did       int64 `protobuf:"varint,1,opt,name=Did,proto3" json:"Did,omitempty"`             //动态ID
	Duid      int64 `protobuf:"varint,2,opt,name=Duid,proto3" json:"Duid,omitempty"`           //动态发布者UID
	CommentId int64 `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"` //评论ID（如果点赞的是评论评论那么是0
	IsDel     int64 `protobuf:"varint,4,opt,name=IsDel,proto3" json:"IsDel,omitempty"`         // true 已点赞 false 未点赞
}

func (x *HasPraise) Reset() {
	*x = HasPraise{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasPraise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasPraise) ProtoMessage() {}

func (x *HasPraise) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasPraise.ProtoReflect.Descriptor instead.
func (*HasPraise) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{22}
}

func (x *HasPraise) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *HasPraise) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

func (x *HasPraise) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *HasPraise) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

type HasPraiseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasPraise []*HasPraise `protobuf:"bytes,1,rep,name=HasPraise,proto3" json:"HasPraise,omitempty"`
	Error     *APIError    `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *HasPraiseResponse) Reset() {
	*x = HasPraiseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasPraiseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasPraiseResponse) ProtoMessage() {}

func (x *HasPraiseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasPraiseResponse.ProtoReflect.Descriptor instead.
func (*HasPraiseResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{23}
}

func (x *HasPraiseResponse) GetHasPraise() []*HasPraise {
	if x != nil {
		return x.HasPraise
	}
	return nil
}

func (x *HasPraiseResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type PraiseListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did  int64 `protobuf:"varint,1,opt,name=Did,proto3" json:"Did,omitempty"`   // 动态ID
	Duid int64 `protobuf:"varint,2,opt,name=Duid,proto3" json:"Duid,omitempty"` // 动态发布者ID
	Cid  int64 `protobuf:"varint,3,opt,name=Cid,proto3" json:"Cid,omitempty"`   // 评论ID， 0为动态
}

func (x *PraiseListRequest) Reset() {
	*x = PraiseListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PraiseListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PraiseListRequest) ProtoMessage() {}

func (x *PraiseListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PraiseListRequest.ProtoReflect.Descriptor instead.
func (*PraiseListRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{24}
}

func (x *PraiseListRequest) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *PraiseListRequest) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

func (x *PraiseListRequest) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

type PraiseListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PraiseList []*UserInfo `protobuf:"bytes,1,rep,name=PraiseList,proto3" json:"PraiseList,omitempty"` //点赞列表
	Error      *APIError   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *PraiseListResponse) Reset() {
	*x = PraiseListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PraiseListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PraiseListResponse) ProtoMessage() {}

func (x *PraiseListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PraiseListResponse.ProtoReflect.Descriptor instead.
func (*PraiseListResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{25}
}

func (x *PraiseListResponse) GetPraiseList() []*UserInfo {
	if x != nil {
		return x.PraiseList
	}
	return nil
}

func (x *PraiseListResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type CollectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did    int64 `protobuf:"varint,1,opt,name=Did,proto3" json:"Did,omitempty"`       //动态ID
	Duid   int64 `protobuf:"varint,2,opt,name=Duid,proto3" json:"Duid,omitempty"`     //动态发布者UID
	IsDel  int64 `protobuf:"varint,3,opt,name=IsDel,proto3" json:"IsDel,omitempty"`   // 0收藏 1取消收藏
	UserId int64 `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId,omitempty"` //收藏者UID
}

func (x *CollectRequest) Reset() {
	*x = CollectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectRequest) ProtoMessage() {}

func (x *CollectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectRequest.ProtoReflect.Descriptor instead.
func (*CollectRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{26}
}

func (x *CollectRequest) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *CollectRequest) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

func (x *CollectRequest) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *CollectRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type HasCollectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDel int64     `protobuf:"varint,1,opt,name=IsDel,proto3" json:"IsDel,omitempty"` // 0 已收藏 1未收藏
	Error *APIError `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *HasCollectResponse) Reset() {
	*x = HasCollectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasCollectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasCollectResponse) ProtoMessage() {}

func (x *HasCollectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasCollectResponse.ProtoReflect.Descriptor instead.
func (*HasCollectResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{27}
}

func (x *HasCollectResponse) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *HasCollectResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type FocusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OUid  int64 `protobuf:"varint,1,opt,name=OUid,proto3" json:"OUid,omitempty"`   //被关注的uid
	UID   int64 `protobuf:"varint,2,opt,name=UID,proto3" json:"UID,omitempty"`     //关注者的uid
	IsDel int64 `protobuf:"varint,3,opt,name=IsDel,proto3" json:"IsDel,omitempty"` // 0关注 1取消关注
}

func (x *FocusRequest) Reset() {
	*x = FocusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusRequest) ProtoMessage() {}

func (x *FocusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusRequest.ProtoReflect.Descriptor instead.
func (*FocusRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{28}
}

func (x *FocusRequest) GetOUid() int64 {
	if x != nil {
		return x.OUid
	}
	return 0
}

func (x *FocusRequest) GetUID() int64 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *FocusRequest) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

type HasFocusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDel int64     `protobuf:"varint,1,opt,name=IsDel,proto3" json:"IsDel,omitempty"` //1 已关注 0 未关注
	Error *APIError `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *HasFocusResponse) Reset() {
	*x = HasFocusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasFocusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasFocusResponse) ProtoMessage() {}

func (x *HasFocusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasFocusResponse.ProtoReflect.Descriptor instead.
func (*HasFocusResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{29}
}

func (x *HasFocusResponse) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *HasFocusResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type ShareDynamicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did  int64 `protobuf:"varint,1,opt,name=Did,proto3" json:"Did,omitempty"`   // 动态ID
	Duid int64 `protobuf:"varint,2,opt,name=Duid,proto3" json:"Duid,omitempty"` // 动态发布者ID
}

func (x *ShareDynamicRequest) Reset() {
	*x = ShareDynamicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareDynamicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareDynamicRequest) ProtoMessage() {}

func (x *ShareDynamicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareDynamicRequest.ProtoReflect.Descriptor instead.
func (*ShareDynamicRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{30}
}

func (x *ShareDynamicRequest) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *ShareDynamicRequest) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

type FocusListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` //用户ID
	Page   int64 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`     //页码
}

func (x *FocusListRequest) Reset() {
	*x = FocusListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusListRequest) ProtoMessage() {}

func (x *FocusListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusListRequest.ProtoReflect.Descriptor instead.
func (*FocusListRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{31}
}

func (x *FocusListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FocusListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type FocusList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` //用户ID
	Nick   string `protobuf:"bytes,2,opt,name=Nick,proto3" json:"Nick,omitempty"`      //昵称
	Avatar string `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`  //头像链接地址
	Status int64  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"` // 1 关注 2 相互关注
}

func (x *FocusList) Reset() {
	*x = FocusList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusList) ProtoMessage() {}

func (x *FocusList) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusList.ProtoReflect.Descriptor instead.
func (*FocusList) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{32}
}

func (x *FocusList) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FocusList) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *FocusList) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FocusList) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type FocusListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*FocusList `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`    //关注列表
	Count int64        `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"` //关注总数
	Error *APIError    `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *FocusListResponse) Reset() {
	*x = FocusListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusListResponse) ProtoMessage() {}

func (x *FocusListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusListResponse.ProtoReflect.Descriptor instead.
func (*FocusListResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{33}
}

func (x *FocusListResponse) GetList() []*FocusList {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FocusListResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FocusListResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type FansListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` //用户ID
	Page   int64 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`     //页码
}

func (x *FansListRequest) Reset() {
	*x = FansListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FansListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FansListRequest) ProtoMessage() {}

func (x *FansListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FansListRequest.ProtoReflect.Descriptor instead.
func (*FansListRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{34}
}

func (x *FansListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FansListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type FansList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` //用户ID
	Nick   string `protobuf:"bytes,2,opt,name=Nick,proto3" json:"Nick,omitempty"`      //昵称
	Avatar string `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`  //头像链接地址
	Status int64  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"` // 1 关注 2 相互关注
}

func (x *FansList) Reset() {
	*x = FansList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FansList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FansList) ProtoMessage() {}

func (x *FansList) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FansList.ProtoReflect.Descriptor instead.
func (*FansList) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{35}
}

func (x *FansList) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FansList) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *FansList) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FansList) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type FansListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*FansList `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`    //粉丝列表
	Count int64       `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"` //粉丝总数
	Error *APIError   `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *FansListResponse) Reset() {
	*x = FansListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FansListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FansListResponse) ProtoMessage() {}

func (x *FansListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FansListResponse.ProtoReflect.Descriptor instead.
func (*FansListResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{36}
}

func (x *FansListResponse) GetList() []*FansList {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FansListResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FansListResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type CollectListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` //用户ID
	Page   int64 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`     //页码
}

func (x *CollectListRequest) Reset() {
	*x = CollectListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectListRequest) ProtoMessage() {}

func (x *CollectListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectListRequest.ProtoReflect.Descriptor instead.
func (*CollectListRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{37}
}

func (x *CollectListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CollectListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type CollectListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*DynamicInfo `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	Error *APIError      `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *CollectListResponse) Reset() {
	*x = CollectListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectListResponse) ProtoMessage() {}

func (x *CollectListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectListResponse.ProtoReflect.Descriptor instead.
func (*CollectListResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{38}
}

func (x *CollectListResponse) GetList() []*DynamicInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CollectListResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type CommentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did    int64 `protobuf:"varint,1,opt,name=Did,proto3" json:"Did,omitempty"`       //动态ID
	Duid   int64 `protobuf:"varint,2,opt,name=Duid,proto3" json:"Duid,omitempty"`     //动态发布者ID
	Page   int64 `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`     //页码
	UserId int64 `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId,omitempty"` //用于判断是否已经点赞评论
	Gcid   int64 `protobuf:"varint,5,opt,name=Gcid,proto3" json:"Gcid,omitempty"`     // 一级评论ID
}

func (x *CommentListRequest) Reset() {
	*x = CommentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListRequest) ProtoMessage() {}

func (x *CommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListRequest.ProtoReflect.Descriptor instead.
func (*CommentListRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{39}
}

func (x *CommentListRequest) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *CommentListRequest) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

func (x *CommentListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CommentListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentListRequest) GetGcid() int64 {
	if x != nil {
		return x.Gcid
	}
	return 0
}

type Comments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment       *CommentInfo   `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	ChildComments *ChildComments `protobuf:"bytes,2,opt,name=ChildComments,proto3" json:"ChildComments,omitempty"`
}

func (x *Comments) Reset() {
	*x = Comments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comments) ProtoMessage() {}

func (x *Comments) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comments.ProtoReflect.Descriptor instead.
func (*Comments) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{40}
}

func (x *Comments) GetComment() *CommentInfo {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *Comments) GetChildComments() *ChildComments {
	if x != nil {
		return x.ChildComments
	}
	return nil
}

type ChildComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChildComments []*CommentInfo `protobuf:"bytes,1,rep,name=ChildComments,proto3" json:"ChildComments,omitempty"`
	Count         int64          `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"` //评论子评论总数
}

func (x *ChildComments) Reset() {
	*x = ChildComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildComments) ProtoMessage() {}

func (x *ChildComments) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildComments.ProtoReflect.Descriptor instead.
func (*ChildComments) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{41}
}

func (x *ChildComments) GetChildComments() []*CommentInfo {
	if x != nil {
		return x.ChildComments
	}
	return nil
}

func (x *ChildComments) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentList []*Comments `protobuf:"bytes,1,rep,name=commentList,proto3" json:"commentList,omitempty"`
	Error       *APIError   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	Count       int64       `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *CommentListResponse) Reset() {
	*x = CommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListResponse) ProtoMessage() {}

func (x *CommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListResponse.ProtoReflect.Descriptor instead.
func (*CommentListResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{42}
}

func (x *CommentListResponse) GetCommentList() []*Comments {
	if x != nil {
		return x.CommentList
	}
	return nil
}

func (x *CommentListResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CommentListResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did       int64  `protobuf:"varint,1,opt,name=Did,proto3" json:"Did,omitempty"`             //动态ID
	Duid      int64  `protobuf:"varint,2,opt,name=Duid,proto3" json:"Duid,omitempty"`           //动态发布者UserId
	Text      string `protobuf:"bytes,3,opt,name=Text,proto3" json:"Text,omitempty"`            //评论文本
	CommentId int64  `protobuf:"varint,4,opt,name=CommentId,proto3" json:"CommentId,omitempty"` //评论ID，评论动态时为0，回复评论时为被回复评论的ID
	// int64 Pid = 5; //评论父ID
	Uid int64 `protobuf:"varint,6,opt,name=Uid,proto3" json:"Uid,omitempty"` //评论者UserId
	// int64 OUid = 7; //被评论者UserId
	Type int64 `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"` //1 评论 2回复
}

func (x *CommentRequest) Reset() {
	*x = CommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentRequest) ProtoMessage() {}

func (x *CommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentRequest.ProtoReflect.Descriptor instead.
func (*CommentRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{43}
}

func (x *CommentRequest) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *CommentRequest) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

func (x *CommentRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CommentRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CommentRequest) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did       int64 `protobuf:"varint,1,opt,name=Did,proto3" json:"Did,omitempty"`             //动态ID
	Duid      int64 `protobuf:"varint,2,opt,name=Duid,proto3" json:"Duid,omitempty"`           //动态发布者UserId
	CommentID int64 `protobuf:"varint,3,opt,name=CommentID,proto3" json:"CommentID,omitempty"` //评论ID
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{44}
}

func (x *DeleteCommentRequest) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *DeleteCommentRequest) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

func (x *DeleteCommentRequest) GetCommentID() int64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

type UserFansCountAndFocusCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"` //用户ID
}

func (x *UserFansCountAndFocusCountRequest) Reset() {
	*x = UserFansCountAndFocusCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFansCountAndFocusCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFansCountAndFocusCountRequest) ProtoMessage() {}

func (x *UserFansCountAndFocusCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFansCountAndFocusCountRequest.ProtoReflect.Descriptor instead.
func (*UserFansCountAndFocusCountRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{45}
}

func (x *UserFansCountAndFocusCountRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserFansCountAndFocusCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FansCount  int64     `protobuf:"varint,1,opt,name=FansCount,proto3" json:"FansCount,omitempty"`   //粉丝数
	FocusCount int64     `protobuf:"varint,2,opt,name=FocusCount,proto3" json:"FocusCount,omitempty"` //关注数
	Error      *APIError `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *UserFansCountAndFocusCountResponse) Reset() {
	*x = UserFansCountAndFocusCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFansCountAndFocusCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFansCountAndFocusCountResponse) ProtoMessage() {}

func (x *UserFansCountAndFocusCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFansCountAndFocusCountResponse.ProtoReflect.Descriptor instead.
func (*UserFansCountAndFocusCountResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{46}
}

func (x *UserFansCountAndFocusCountResponse) GetFansCount() int64 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

func (x *UserFansCountAndFocusCountResponse) GetFocusCount() int64 {
	if x != nil {
		return x.FocusCount
	}
	return 0
}

func (x *UserFansCountAndFocusCountResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type UsersFansCountAndFocusCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=UserIds,proto3" json:"UserIds,omitempty"` //用户ID
}

func (x *UsersFansCountAndFocusCountRequest) Reset() {
	*x = UsersFansCountAndFocusCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersFansCountAndFocusCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersFansCountAndFocusCountRequest) ProtoMessage() {}

func (x *UsersFansCountAndFocusCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersFansCountAndFocusCountRequest.ProtoReflect.Descriptor instead.
func (*UsersFansCountAndFocusCountRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{47}
}

func (x *UsersFansCountAndFocusCountRequest) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type UsersFansCountAndFocusCountResponseForm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FansCount  int64 `protobuf:"varint,1,opt,name=FansCount,proto3" json:"FansCount,omitempty"`   //粉丝数
	FocusCount int64 `protobuf:"varint,2,opt,name=FocusCount,proto3" json:"FocusCount,omitempty"` //关注数
	UserId     int64 `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`         // 用户ID
}

func (x *UsersFansCountAndFocusCountResponseForm) Reset() {
	*x = UsersFansCountAndFocusCountResponseForm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersFansCountAndFocusCountResponseForm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersFansCountAndFocusCountResponseForm) ProtoMessage() {}

func (x *UsersFansCountAndFocusCountResponseForm) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersFansCountAndFocusCountResponseForm.ProtoReflect.Descriptor instead.
func (*UsersFansCountAndFocusCountResponseForm) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{48}
}

func (x *UsersFansCountAndFocusCountResponseForm) GetFansCount() int64 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

func (x *UsersFansCountAndFocusCountResponseForm) GetFocusCount() int64 {
	if x != nil {
		return x.FocusCount
	}
	return 0
}

func (x *UsersFansCountAndFocusCountResponseForm) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UsersFansCountAndFocusCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*UsersFansCountAndFocusCountResponseForm `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Error *APIError                                  `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *UsersFansCountAndFocusCountResponse) Reset() {
	*x = UsersFansCountAndFocusCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersFansCountAndFocusCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersFansCountAndFocusCountResponse) ProtoMessage() {}

func (x *UsersFansCountAndFocusCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersFansCountAndFocusCountResponse.ProtoReflect.Descriptor instead.
func (*UsersFansCountAndFocusCountResponse) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{49}
}

func (x *UsersFansCountAndFocusCountResponse) GetUsers() []*UsersFansCountAndFocusCountResponseForm {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *UsersFansCountAndFocusCountResponse) GetError() *APIError {
	if x != nil {
		return x.Error
	}
	return nil
}

type RemoveDiscoverDynamicIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []*RemoveDiscoverDynamicIdsRequest_RequestIds `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *RemoveDiscoverDynamicIdsRequest) Reset() {
	*x = RemoveDiscoverDynamicIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDiscoverDynamicIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDiscoverDynamicIdsRequest) ProtoMessage() {}

func (x *RemoveDiscoverDynamicIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDiscoverDynamicIdsRequest.ProtoReflect.Descriptor instead.
func (*RemoveDiscoverDynamicIdsRequest) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{50}
}

func (x *RemoveDiscoverDynamicIdsRequest) GetIds() []*RemoveDiscoverDynamicIdsRequest_RequestIds {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RemoveDiscoverDynamicIdsRequest_RequestIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did  int64 `protobuf:"varint,1,opt,name=Did,proto3" json:"Did,omitempty"`   //动态ID
	Duid int64 `protobuf:"varint,2,opt,name=Duid,proto3" json:"Duid,omitempty"` //动态作者ID
}

func (x *RemoveDiscoverDynamicIdsRequest_RequestIds) Reset() {
	*x = RemoveDiscoverDynamicIdsRequest_RequestIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_dynamicsrv_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDiscoverDynamicIdsRequest_RequestIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDiscoverDynamicIdsRequest_RequestIds) ProtoMessage() {}

func (x *RemoveDiscoverDynamicIdsRequest_RequestIds) ProtoReflect() protoreflect.Message {
	mi := &file_define_dynamicsrv_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDiscoverDynamicIdsRequest_RequestIds.ProtoReflect.Descriptor instead.
func (*RemoveDiscoverDynamicIdsRequest_RequestIds) Descriptor() ([]byte, []int) {
	return file_define_dynamicsrv_proto_rawDescGZIP(), []int{50, 0}
}

func (x *RemoveDiscoverDynamicIdsRequest_RequestIds) GetDid() int64 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *RemoveDiscoverDynamicIdsRequest_RequestIds) GetDuid() int64 {
	if x != nil {
		return x.Duid
	}
	return 0
}

var File_define_dynamicsrv_proto protoreflect.FileDescriptor

var file_define_dynamicsrv_proto_rawDesc = []byte{
	0x0a, 0x17, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x73, 0x72, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x73, 0x72, 0x76, 0x22, 0x8d, 0x01, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x43, 0x6c, 0x75,
	0x62, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x4e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xf2, 0x05, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x49,
	0x6d, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6d, 0x67, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x45, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x45, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x78, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x75, 0x6d,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x54, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x75,
	0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x4e, 0x75,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x48, 0x35, 0x4e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x54, 0x6f, 0x48, 0x35, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x49,
	0x6d, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x6d,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x48, 0x61, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x64, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x48, 0x61, 0x73, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x61, 0x73, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x48, 0x61, 0x73, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x62, 0x4d, 0x69, 0x64,
	0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x2d, 0x0a, 0x07, 0x53, 0x75, 0x70, 0x63, 0x6c, 0x75, 0x62, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x53, 0x75,
	0x70, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x07, 0x53, 0x75, 0x70, 0x63, 0x6c, 0x75, 0x62, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x61, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x43, 0x61, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0xad, 0x02, 0x0a, 0x0b, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x50, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x4f, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x4f, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x4f, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4f, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50, 0x72, 0x61,
	0x69, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x50,
	0x72, 0x61, 0x69, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x48, 0x61, 0x73,
	0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x63, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x47, 0x63, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x08, 0x41, 0x50,
	0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x53, 0x0a, 0x11, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x9c, 0x02, 0x0a, 0x15, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x49, 0x6d, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x04, 0x49, 0x6d, 0x67, 0x73, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x6d, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x6d, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x73, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x54, 0x65, 0x78, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x49, 0x6d, 0x67, 0x73, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x5f, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44,
	0x69, 0x64, 0x12, 0x35, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x1a, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x0b, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x30, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x76, 0x0a, 0x1b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5a, 0x0a, 0x16, 0x43, 0x6c, 0x75,
	0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x54, 0x62, 0x4d, 0x69, 0x64, 0x22, 0x72, 0x0a, 0x17, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5e, 0x0a, 0x16, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x08, 0x49, 0x6e, 0x66,
	0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x12, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x05,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x70, 0x0a, 0x13, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3c, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44,
	0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x44, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x18, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x54, 0x6f, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x75, 0x69, 0x64, 0x22, 0x3b, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x6f, 0x43, 0x6c, 0x75,
	0x62, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x75, 0x69, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x50,
	0x72, 0x61, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x44, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x75,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b,
	0x0a, 0x10, 0x48, 0x61, 0x73, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73,
	0x72, 0x76, 0x2e, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x09, 0x48, 0x61, 0x73, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x09, 0x48,
	0x61, 0x73, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x75, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x49, 0x73, 0x44, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x44,
	0x65, 0x6c, 0x22, 0x74, 0x0a, 0x11, 0x48, 0x61, 0x73, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x50, 0x72,
	0x61, 0x69, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x48, 0x61, 0x73, 0x50, 0x72, 0x61, 0x69, 0x73,
	0x65, 0x52, 0x09, 0x48, 0x61, 0x73, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4b, 0x0a, 0x11, 0x50, 0x72, 0x61, 0x69,
	0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x44, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44,
	0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x43, 0x69, 0x64, 0x22, 0x76, 0x0a, 0x12, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x50,
	0x72, 0x61, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50,
	0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x64, 0x0a,
	0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x44, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x44, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x12, 0x48, 0x61, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x44,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x12,
	0x2a, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4a, 0x0a, 0x0c, 0x46,
	0x6f, 0x63, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4f,
	0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x4f, 0x55, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x22, 0x54, 0x0a, 0x10, 0x48, 0x61, 0x73, 0x46, 0x6f,
	0x63, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49,
	0x73, 0x44, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x44, 0x65,
	0x6c, 0x12, 0x2a, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50,
	0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3b, 0x0a,
	0x13, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x75, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x10, 0x46, 0x6f,
	0x63, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x22, 0x67, 0x0a, 0x09, 0x46, 0x6f,
	0x63, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x11, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x73, 0x72, 0x76, 0x2e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3d, 0x0a, 0x0f, 0x46, 0x61, 0x6e, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x22, 0x66, 0x0a, 0x08, 0x46, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7e, 0x0a,
	0x10, 0x46, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x46, 0x61, 0x6e,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50,
	0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x40, 0x0a,
	0x12, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x22,
	0x6e, 0x0a, 0x13, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72,
	0x76, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e,
	0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x7a, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x63, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x47, 0x63, 0x69, 0x64, 0x22, 0x7e, 0x0a, 0x08, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0d, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x64, 0x0a, 0x0d, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0d,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x8f, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50,
	0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x55, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0x5a, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x44, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x75,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x22, 0x3b, 0x0a, 0x21, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6e, 0x64, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8e, 0x01,
	0x0a, 0x22, 0x55, 0x73, 0x65, 0x72, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x6e, 0x64, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41,
	0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3e,
	0x0a, 0x22, 0x55, 0x73, 0x65, 0x72, 0x73, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6e, 0x64, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x7f,
	0x0a, 0x27, 0x55, 0x73, 0x65, 0x72, 0x73, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6e, 0x64, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x61, 0x6e,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x46, 0x61,
	0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6f, 0x63, 0x75, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x46, 0x6f, 0x63,
	0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x9c, 0x01, 0x0a, 0x23, 0x55, 0x73, 0x65, 0x72, 0x73, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x6e, 0x64, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x73, 0x72, 0x76, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x6e, 0x64, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41,
	0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9f,
	0x01, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x48, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73, 0x52, 0x03, 0x69, 0x64, 0x73, 0x1a, 0x32, 0x0a, 0x0a,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x44, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x75, 0x69, 0x64,
	0x32, 0xaf, 0x10, 0x0a, 0x0a, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x12,
	0x52, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x12, 0x21, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72,
	0x76, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x12, 0x20, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72,
	0x76, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x26, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x73, 0x72, 0x76, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x22, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x43,
	0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73,
	0x72, 0x76, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x20,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50,
	0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x6f,
	0x43, 0x6c, 0x75, 0x62, 0x12, 0x24, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72,
	0x76, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x6f, 0x43,
	0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x64, 0x65, 0x6c,
	0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x6f, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x1f, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x6f, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a,
	0x06, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x12, 0x19, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x73, 0x72, 0x76, 0x2e, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e,
	0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x48, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x12, 0x1c,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x48, 0x61, 0x73, 0x50,
	0x72, 0x61, 0x69, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x48, 0x61, 0x73, 0x50, 0x72, 0x61,
	0x69, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x18, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x73, 0x12, 0x2b, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x73, 0x72, 0x76, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72,
	0x76, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1a,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x48, 0x61, 0x73,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x73, 0x72, 0x76, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76,
	0x2e, 0x48, 0x61, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73,
	0x72, 0x76, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73,
	0x72, 0x76, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x12,
	0x18, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x46, 0x6f, 0x63,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x48, 0x61, 0x73, 0x46,
	0x6f, 0x63, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72,
	0x76, 0x2e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x48, 0x61, 0x73, 0x46,
	0x6f, 0x63, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0c,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x12, 0x1f, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x46, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x46, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73,
	0x72, 0x76, 0x2e, 0x46, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73,
	0x72, 0x76, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73,
	0x72, 0x76, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x41, 0x50, 0x49,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81,
	0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x46, 0x61, 0x6e, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2e, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6e, 0x64,
	0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x46, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6e, 0x64,
	0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x73,
	0x72, 0x76, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_define_dynamicsrv_proto_rawDescOnce sync.Once
	file_define_dynamicsrv_proto_rawDescData = file_define_dynamicsrv_proto_rawDesc
)

func file_define_dynamicsrv_proto_rawDescGZIP() []byte {
	file_define_dynamicsrv_proto_rawDescOnce.Do(func() {
		file_define_dynamicsrv_proto_rawDescData = protoimpl.X.CompressGZIP(file_define_dynamicsrv_proto_rawDescData)
	})
	return file_define_dynamicsrv_proto_rawDescData
}

var file_define_dynamicsrv_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_define_dynamicsrv_proto_goTypes = []interface{}{
	(*SupClub)(nil),                                    // 0: dynamicsrv.SupClub
	(*UserInfo)(nil),                                   // 1: dynamicsrv.UserInfo
	(*DynamicInfo)(nil),                                // 2: dynamicsrv.DynamicInfo
	(*CommentInfo)(nil),                                // 3: dynamicsrv.CommentInfo
	(*APIError)(nil),                                   // 4: dynamicsrv.APIError
	(*APICommonResponse)(nil),                          // 5: dynamicsrv.APICommonResponse
	(*PublishDynamicRequest)(nil),                      // 6: dynamicsrv.PublishDynamicRequest
	(*UpdateDynamicRequest)(nil),                       // 7: dynamicsrv.UpdateDynamicRequest
	(*DiscoverDynamicListRequest)(nil),                 // 8: dynamicsrv.DiscoverDynamicListRequest
	(*DynamicList)(nil),                                // 9: dynamicsrv.DynamicList
	(*DiscoverDynamicListResponse)(nil),                // 10: dynamicsrv.DiscoverDynamicListResponse
	(*ClubDynamicListRequest)(nil),                     // 11: dynamicsrv.ClubDynamicListRequest
	(*ClubDynamicListResponse)(nil),                    // 12: dynamicsrv.ClubDynamicListResponse
	(*UserDynamicListRequest)(nil),                     // 13: dynamicsrv.UserDynamicListRequest
	(*InfoForm)(nil),                                   // 14: dynamicsrv.InfoForm
	(*DynamicInfoRequest)(nil),                         // 15: dynamicsrv.DynamicInfoRequest
	(*DynamicInfoResponse)(nil),                        // 16: dynamicsrv.DynamicInfoResponse
	(*DeleteDynamicRequest)(nil),                       // 17: dynamicsrv.DeleteDynamicRequest
	(*SyncDynamicToClubRequest)(nil),                   // 18: dynamicsrv.SyncDynamicToClubRequest
	(*DelDynamicToClubReq)(nil),                        // 19: dynamicsrv.DelDynamicToClubReq
	(*PraiseRequest)(nil),                              // 20: dynamicsrv.PraiseRequest
	(*HasPraiseRequest)(nil),                           // 21: dynamicsrv.HasPraiseRequest
	(*HasPraise)(nil),                                  // 22: dynamicsrv.HasPraise
	(*HasPraiseResponse)(nil),                          // 23: dynamicsrv.HasPraiseResponse
	(*PraiseListRequest)(nil),                          // 24: dynamicsrv.PraiseListRequest
	(*PraiseListResponse)(nil),                         // 25: dynamicsrv.PraiseListResponse
	(*CollectRequest)(nil),                             // 26: dynamicsrv.CollectRequest
	(*HasCollectResponse)(nil),                         // 27: dynamicsrv.HasCollectResponse
	(*FocusRequest)(nil),                               // 28: dynamicsrv.FocusRequest
	(*HasFocusResponse)(nil),                           // 29: dynamicsrv.HasFocusResponse
	(*ShareDynamicRequest)(nil),                        // 30: dynamicsrv.ShareDynamicRequest
	(*FocusListRequest)(nil),                           // 31: dynamicsrv.FocusListRequest
	(*FocusList)(nil),                                  // 32: dynamicsrv.FocusList
	(*FocusListResponse)(nil),                          // 33: dynamicsrv.FocusListResponse
	(*FansListRequest)(nil),                            // 34: dynamicsrv.FansListRequest
	(*FansList)(nil),                                   // 35: dynamicsrv.FansList
	(*FansListResponse)(nil),                           // 36: dynamicsrv.FansListResponse
	(*CollectListRequest)(nil),                         // 37: dynamicsrv.CollectListRequest
	(*CollectListResponse)(nil),                        // 38: dynamicsrv.CollectListResponse
	(*CommentListRequest)(nil),                         // 39: dynamicsrv.CommentListRequest
	(*Comments)(nil),                                   // 40: dynamicsrv.Comments
	(*ChildComments)(nil),                              // 41: dynamicsrv.ChildComments
	(*CommentListResponse)(nil),                        // 42: dynamicsrv.CommentListResponse
	(*CommentRequest)(nil),                             // 43: dynamicsrv.CommentRequest
	(*DeleteCommentRequest)(nil),                       // 44: dynamicsrv.DeleteCommentRequest
	(*UserFansCountAndFocusCountRequest)(nil),          // 45: dynamicsrv.UserFansCountAndFocusCountRequest
	(*UserFansCountAndFocusCountResponse)(nil),         // 46: dynamicsrv.UserFansCountAndFocusCountResponse
	(*UsersFansCountAndFocusCountRequest)(nil),         // 47: dynamicsrv.UsersFansCountAndFocusCountRequest
	(*UsersFansCountAndFocusCountResponseForm)(nil),    // 48: dynamicsrv.UsersFansCountAndFocusCountResponseForm
	(*UsersFansCountAndFocusCountResponse)(nil),        // 49: dynamicsrv.UsersFansCountAndFocusCountResponse
	(*RemoveDiscoverDynamicIdsRequest)(nil),            // 50: dynamicsrv.RemoveDiscoverDynamicIdsRequest
	(*RemoveDiscoverDynamicIdsRequest_RequestIds)(nil), // 51: dynamicsrv.RemoveDiscoverDynamicIdsRequest.RequestIds
}
var file_define_dynamicsrv_proto_depIdxs = []int32{
	0,  // 0: dynamicsrv.DynamicInfo.Supclub:type_name -> dynamicsrv.SupClub
	4,  // 1: dynamicsrv.APICommonResponse.Error:type_name -> dynamicsrv.APIError
	6,  // 2: dynamicsrv.UpdateDynamicRequest.Data:type_name -> dynamicsrv.PublishDynamicRequest
	2,  // 3: dynamicsrv.DynamicList.info:type_name -> dynamicsrv.DynamicInfo
	40, // 4: dynamicsrv.DynamicList.Comments:type_name -> dynamicsrv.Comments
	9,  // 5: dynamicsrv.DiscoverDynamicListResponse.List:type_name -> dynamicsrv.DynamicList
	4,  // 6: dynamicsrv.DiscoverDynamicListResponse.Error:type_name -> dynamicsrv.APIError
	9,  // 7: dynamicsrv.ClubDynamicListResponse.List:type_name -> dynamicsrv.DynamicList
	4,  // 8: dynamicsrv.ClubDynamicListResponse.Error:type_name -> dynamicsrv.APIError
	14, // 9: dynamicsrv.DynamicInfoRequest.infos:type_name -> dynamicsrv.InfoForm
	2,  // 10: dynamicsrv.DynamicInfoResponse.Infos:type_name -> dynamicsrv.DynamicInfo
	4,  // 11: dynamicsrv.DynamicInfoResponse.Error:type_name -> dynamicsrv.APIError
	20, // 12: dynamicsrv.HasPraiseRequest.HasPraise:type_name -> dynamicsrv.PraiseRequest
	22, // 13: dynamicsrv.HasPraiseResponse.HasPraise:type_name -> dynamicsrv.HasPraise
	4,  // 14: dynamicsrv.HasPraiseResponse.Error:type_name -> dynamicsrv.APIError
	1,  // 15: dynamicsrv.PraiseListResponse.PraiseList:type_name -> dynamicsrv.UserInfo
	4,  // 16: dynamicsrv.PraiseListResponse.Error:type_name -> dynamicsrv.APIError
	4,  // 17: dynamicsrv.HasCollectResponse.Error:type_name -> dynamicsrv.APIError
	4,  // 18: dynamicsrv.HasFocusResponse.Error:type_name -> dynamicsrv.APIError
	32, // 19: dynamicsrv.FocusListResponse.List:type_name -> dynamicsrv.FocusList
	4,  // 20: dynamicsrv.FocusListResponse.Error:type_name -> dynamicsrv.APIError
	35, // 21: dynamicsrv.FansListResponse.List:type_name -> dynamicsrv.FansList
	4,  // 22: dynamicsrv.FansListResponse.Error:type_name -> dynamicsrv.APIError
	2,  // 23: dynamicsrv.CollectListResponse.List:type_name -> dynamicsrv.DynamicInfo
	4,  // 24: dynamicsrv.CollectListResponse.Error:type_name -> dynamicsrv.APIError
	3,  // 25: dynamicsrv.Comments.comment:type_name -> dynamicsrv.CommentInfo
	41, // 26: dynamicsrv.Comments.ChildComments:type_name -> dynamicsrv.ChildComments
	3,  // 27: dynamicsrv.ChildComments.ChildComments:type_name -> dynamicsrv.CommentInfo
	40, // 28: dynamicsrv.CommentListResponse.commentList:type_name -> dynamicsrv.Comments
	4,  // 29: dynamicsrv.CommentListResponse.Error:type_name -> dynamicsrv.APIError
	4,  // 30: dynamicsrv.UserFansCountAndFocusCountResponse.Error:type_name -> dynamicsrv.APIError
	48, // 31: dynamicsrv.UsersFansCountAndFocusCountResponse.users:type_name -> dynamicsrv.UsersFansCountAndFocusCountResponseForm
	4,  // 32: dynamicsrv.UsersFansCountAndFocusCountResponse.Error:type_name -> dynamicsrv.APIError
	51, // 33: dynamicsrv.RemoveDiscoverDynamicIdsRequest.ids:type_name -> dynamicsrv.RemoveDiscoverDynamicIdsRequest.RequestIds
	6,  // 34: dynamicsrv.Dynamicsrv.PublishDynamic:input_type -> dynamicsrv.PublishDynamicRequest
	7,  // 35: dynamicsrv.Dynamicsrv.UpdateDynamic:input_type -> dynamicsrv.UpdateDynamicRequest
	8,  // 36: dynamicsrv.Dynamicsrv.GetDiscoverDynamicList:input_type -> dynamicsrv.DiscoverDynamicListRequest
	13, // 37: dynamicsrv.Dynamicsrv.GetUserDynamicList:input_type -> dynamicsrv.UserDynamicListRequest
	11, // 38: dynamicsrv.Dynamicsrv.GetClubDynamicList:input_type -> dynamicsrv.ClubDynamicListRequest
	15, // 39: dynamicsrv.Dynamicsrv.GetDynamicInfo:input_type -> dynamicsrv.DynamicInfoRequest
	17, // 40: dynamicsrv.Dynamicsrv.DeleteDynamic:input_type -> dynamicsrv.DeleteDynamicRequest
	18, // 41: dynamicsrv.Dynamicsrv.SyncDynamicToClub:input_type -> dynamicsrv.SyncDynamicToClubRequest
	19, // 42: dynamicsrv.Dynamicsrv.delDynamicToClub:input_type -> dynamicsrv.DelDynamicToClubReq
	20, // 43: dynamicsrv.Dynamicsrv.Praise:input_type -> dynamicsrv.PraiseRequest
	21, // 44: dynamicsrv.Dynamicsrv.HasPraise:input_type -> dynamicsrv.HasPraiseRequest
	24, // 45: dynamicsrv.Dynamicsrv.GetPraiseList:input_type -> dynamicsrv.PraiseListRequest
	50, // 46: dynamicsrv.Dynamicsrv.RemoveDiscoverDynamicIds:input_type -> dynamicsrv.RemoveDiscoverDynamicIdsRequest
	26, // 47: dynamicsrv.Dynamicsrv.Collect:input_type -> dynamicsrv.CollectRequest
	26, // 48: dynamicsrv.Dynamicsrv.HasCollect:input_type -> dynamicsrv.CollectRequest
	37, // 49: dynamicsrv.Dynamicsrv.GetCollectList:input_type -> dynamicsrv.CollectListRequest
	28, // 50: dynamicsrv.Dynamicsrv.Focus:input_type -> dynamicsrv.FocusRequest
	28, // 51: dynamicsrv.Dynamicsrv.HasFocus:input_type -> dynamicsrv.FocusRequest
	30, // 52: dynamicsrv.Dynamicsrv.ShareDynamic:input_type -> dynamicsrv.ShareDynamicRequest
	31, // 53: dynamicsrv.Dynamicsrv.GetFocusList:input_type -> dynamicsrv.FocusListRequest
	34, // 54: dynamicsrv.Dynamicsrv.GetFansList:input_type -> dynamicsrv.FansListRequest
	39, // 55: dynamicsrv.Dynamicsrv.GetCommentList:input_type -> dynamicsrv.CommentListRequest
	43, // 56: dynamicsrv.Dynamicsrv.Comment:input_type -> dynamicsrv.CommentRequest
	44, // 57: dynamicsrv.Dynamicsrv.DeleteComment:input_type -> dynamicsrv.DeleteCommentRequest
	47, // 58: dynamicsrv.Dynamicsrv.GetUsersFansCountAndFocusCount:input_type -> dynamicsrv.UsersFansCountAndFocusCountRequest
	5,  // 59: dynamicsrv.Dynamicsrv.PublishDynamic:output_type -> dynamicsrv.APICommonResponse
	5,  // 60: dynamicsrv.Dynamicsrv.UpdateDynamic:output_type -> dynamicsrv.APICommonResponse
	10, // 61: dynamicsrv.Dynamicsrv.GetDiscoverDynamicList:output_type -> dynamicsrv.DiscoverDynamicListResponse
	16, // 62: dynamicsrv.Dynamicsrv.GetUserDynamicList:output_type -> dynamicsrv.DynamicInfoResponse
	12, // 63: dynamicsrv.Dynamicsrv.GetClubDynamicList:output_type -> dynamicsrv.ClubDynamicListResponse
	16, // 64: dynamicsrv.Dynamicsrv.GetDynamicInfo:output_type -> dynamicsrv.DynamicInfoResponse
	5,  // 65: dynamicsrv.Dynamicsrv.DeleteDynamic:output_type -> dynamicsrv.APICommonResponse
	5,  // 66: dynamicsrv.Dynamicsrv.SyncDynamicToClub:output_type -> dynamicsrv.APICommonResponse
	5,  // 67: dynamicsrv.Dynamicsrv.delDynamicToClub:output_type -> dynamicsrv.APICommonResponse
	5,  // 68: dynamicsrv.Dynamicsrv.Praise:output_type -> dynamicsrv.APICommonResponse
	23, // 69: dynamicsrv.Dynamicsrv.HasPraise:output_type -> dynamicsrv.HasPraiseResponse
	25, // 70: dynamicsrv.Dynamicsrv.GetPraiseList:output_type -> dynamicsrv.PraiseListResponse
	5,  // 71: dynamicsrv.Dynamicsrv.RemoveDiscoverDynamicIds:output_type -> dynamicsrv.APICommonResponse
	5,  // 72: dynamicsrv.Dynamicsrv.Collect:output_type -> dynamicsrv.APICommonResponse
	27, // 73: dynamicsrv.Dynamicsrv.HasCollect:output_type -> dynamicsrv.HasCollectResponse
	38, // 74: dynamicsrv.Dynamicsrv.GetCollectList:output_type -> dynamicsrv.CollectListResponse
	5,  // 75: dynamicsrv.Dynamicsrv.Focus:output_type -> dynamicsrv.APICommonResponse
	29, // 76: dynamicsrv.Dynamicsrv.HasFocus:output_type -> dynamicsrv.HasFocusResponse
	5,  // 77: dynamicsrv.Dynamicsrv.ShareDynamic:output_type -> dynamicsrv.APICommonResponse
	33, // 78: dynamicsrv.Dynamicsrv.GetFocusList:output_type -> dynamicsrv.FocusListResponse
	36, // 79: dynamicsrv.Dynamicsrv.GetFansList:output_type -> dynamicsrv.FansListResponse
	42, // 80: dynamicsrv.Dynamicsrv.GetCommentList:output_type -> dynamicsrv.CommentListResponse
	5,  // 81: dynamicsrv.Dynamicsrv.Comment:output_type -> dynamicsrv.APICommonResponse
	5,  // 82: dynamicsrv.Dynamicsrv.DeleteComment:output_type -> dynamicsrv.APICommonResponse
	49, // 83: dynamicsrv.Dynamicsrv.GetUsersFansCountAndFocusCount:output_type -> dynamicsrv.UsersFansCountAndFocusCountResponse
	59, // [59:84] is the sub-list for method output_type
	34, // [34:59] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_define_dynamicsrv_proto_init() }
func file_define_dynamicsrv_proto_init() {
	if File_define_dynamicsrv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_define_dynamicsrv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupClub); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APICommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishDynamicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDynamicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverDynamicListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverDynamicListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubDynamicListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubDynamicListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDynamicListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoForm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDynamicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncDynamicToClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelDynamicToClubReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PraiseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasPraiseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasPraise); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasPraiseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PraiseListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PraiseListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasCollectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasFocusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareDynamicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FansListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FansList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FansListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFansCountAndFocusCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFansCountAndFocusCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersFansCountAndFocusCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersFansCountAndFocusCountResponseForm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersFansCountAndFocusCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDiscoverDynamicIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_dynamicsrv_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDiscoverDynamicIdsRequest_RequestIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_define_dynamicsrv_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_define_dynamicsrv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_define_dynamicsrv_proto_goTypes,
		DependencyIndexes: file_define_dynamicsrv_proto_depIdxs,
		MessageInfos:      file_define_dynamicsrv_proto_msgTypes,
	}.Build()
	File_define_dynamicsrv_proto = out.File
	file_define_dynamicsrv_proto_rawDesc = nil
	file_define_dynamicsrv_proto_goTypes = nil
	file_define_dynamicsrv_proto_depIdxs = nil
}
