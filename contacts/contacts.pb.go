// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: v1/rpc/contacts.proto

package contacts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OID      string `protobuf:"bytes,1,opt,name=OID,proto3" json:"OID,omitempty"`            // 好友ID或群聊ID
	Nick     string `protobuf:"bytes,2,opt,name=Nick,proto3" json:"Nick,omitempty"`          // 备注昵称
	IsNotice bool   `protobuf:"varint,3,opt,name=IsNotice,proto3" json:"IsNotice,omitempty"` //是否屏蔽系统消息
	Avatar   string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`      //头像
	Type     int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`         //类型，0是好友，1群聊
	Status   int32  `protobuf:"varint,6,opt,name=Status,proto3" json:"Status,omitempty"`     // 状态，是否已经删除
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{0}
}

func (x *Contact) GetOID() string {
	if x != nil {
		return x.OID
	}
	return ""
}

func (x *Contact) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *Contact) GetIsNotice() bool {
	if x != nil {
		return x.IsNotice
	}
	return false
}

func (x *Contact) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Contact) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Contact) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ContactResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     int32  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ContactResult) Reset() {
	*x = ContactResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactResult) ProtoMessage() {}

func (x *ContactResult) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactResult.ProtoReflect.Descriptor instead.
func (*ContactResult) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{1}
}

func (x *ContactResult) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *ContactResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetContactsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`        //用户ID
	PageSize  int32  `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`   //分页Size，默认=100
	PageIndex int32  `protobuf:"varint,3,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"` //分页index,从1开始，默认为1
}

func (x *GetContactsReq) Reset() {
	*x = GetContactsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactsReq) ProtoMessage() {}

func (x *GetContactsReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactsReq.ProtoReflect.Descriptor instead.
func (*GetContactsReq) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{2}
}

func (x *GetContactsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetContactsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetContactsReq) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

type GetContactsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *ContactResult `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	PageIndex int32          `protobuf:"varint,2,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"` //当前index
	TotalSize int32          `protobuf:"varint,3,opt,name=TotalSize,proto3" json:"TotalSize,omitempty"` //总共好友数
	Contacts  []*Contact     `protobuf:"bytes,4,rep,name=Contacts,proto3" json:"Contacts,omitempty"`    //好友list
}

func (x *GetContactsResp) Reset() {
	*x = GetContactsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactsResp) ProtoMessage() {}

func (x *GetContactsResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactsResp.ProtoReflect.Descriptor instead.
func (*GetContactsResp) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{3}
}

func (x *GetContactsResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetContactsResp) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetContactsResp) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetContactsResp) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type SetContactReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Contact *Contact `protobuf:"bytes,2,opt,name=Contact,proto3" json:"Contact,omitempty"`  //覆盖更新
	SetType int32    `protobuf:"varint,3,opt,name=SetType,proto3" json:"SetType,omitempty"` //0 add;1 update notice;2 udpate remark 3、delete
}

func (x *SetContactReq) Reset() {
	*x = SetContactReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetContactReq) ProtoMessage() {}

func (x *SetContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetContactReq.ProtoReflect.Descriptor instead.
func (*SetContactReq) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{4}
}

func (x *SetContactReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetContactReq) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *SetContactReq) GetSetType() int32 {
	if x != nil {
		return x.SetType
	}
	return 0
}

type SetContactResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ContactResult `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *SetContactResp) Reset() {
	*x = SetContactResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetContactResp) ProtoMessage() {}

func (x *SetContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetContactResp.ProtoReflect.Descriptor instead.
func (*SetContactResp) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{5}
}

func (x *SetContactResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetGroupContactsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`        //用户ID
	PageSize  int32  `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`   //分页Size，默认=100
	PageIndex int32  `protobuf:"varint,3,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"` //分页index,从1开始，默认为1
}

func (x *GetGroupContactsReq) Reset() {
	*x = GetGroupContactsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupContactsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupContactsReq) ProtoMessage() {}

func (x *GetGroupContactsReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupContactsReq.ProtoReflect.Descriptor instead.
func (*GetGroupContactsReq) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{6}
}

func (x *GetGroupContactsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetGroupContactsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetGroupContactsReq) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

type GetGroupContactsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *ContactResult `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	PageIndex int32          `protobuf:"varint,2,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"` //当前index
	TotalSize int32          `protobuf:"varint,3,opt,name=TotalSize,proto3" json:"TotalSize,omitempty"` //总共群个数
	Contacts  []*Contact     `protobuf:"bytes,4,rep,name=Contacts,proto3" json:"Contacts,omitempty"`    //群list
}

func (x *GetGroupContactsResp) Reset() {
	*x = GetGroupContactsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupContactsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupContactsResp) ProtoMessage() {}

func (x *GetGroupContactsResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupContactsResp.ProtoReflect.Descriptor instead.
func (*GetGroupContactsResp) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{7}
}

func (x *GetGroupContactsResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupContactsResp) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetGroupContactsResp) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetGroupContactsResp) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type SetGroupContactReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Contact *Contact `protobuf:"bytes,2,opt,name=Contact,proto3" json:"Contact,omitempty"`  //覆盖更新
	SetType int32    `protobuf:"varint,3,opt,name=SetType,proto3" json:"SetType,omitempty"` //0 add;1 update ;2 delete
}

func (x *SetGroupContactReq) Reset() {
	*x = SetGroupContactReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupContactReq) ProtoMessage() {}

func (x *SetGroupContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupContactReq.ProtoReflect.Descriptor instead.
func (*SetGroupContactReq) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{8}
}

func (x *SetGroupContactReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetGroupContactReq) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *SetGroupContactReq) GetSetType() int32 {
	if x != nil {
		return x.SetType
	}
	return 0
}

type SetGroupContactResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ContactResult `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *SetGroupContactResp) Reset() {
	*x = SetGroupContactResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupContactResp) ProtoMessage() {}

func (x *SetGroupContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupContactResp.ProtoReflect.Descriptor instead.
func (*SetGroupContactResp) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{9}
}

func (x *SetGroupContactResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// black list
type GetBlackListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBlackListReq) Reset() {
	*x = GetBlackListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlackListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlackListReq) ProtoMessage() {}

func (x *GetBlackListReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlackListReq.ProtoReflect.Descriptor instead.
func (*GetBlackListReq) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{10}
}

type GetBlackListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBlackListResp) Reset() {
	*x = GetBlackListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlackListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlackListResp) ProtoMessage() {}

func (x *GetBlackListResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlackListResp.ProtoReflect.Descriptor instead.
func (*GetBlackListResp) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{11}
}

type SetBlackListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetBlackListReq) Reset() {
	*x = SetBlackListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBlackListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBlackListReq) ProtoMessage() {}

func (x *SetBlackListReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBlackListReq.ProtoReflect.Descriptor instead.
func (*SetBlackListReq) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{12}
}

type SetBlackListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetBlackListResp) Reset() {
	*x = SetBlackListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBlackListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBlackListResp) ProtoMessage() {}

func (x *SetBlackListResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBlackListResp.ProtoReflect.Descriptor instead.
func (*SetBlackListResp) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{13}
}

type FriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OuID   int64  `protobuf:"varint,1,opt,name=OuID,proto3" json:"OuID,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Mutual int32  `protobuf:"varint,3,opt,name=mutual,proto3" json:"mutual,omitempty"` //mutual 双向
	Status int32  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	Time   uint64 `protobuf:"varint,5,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *FriendRequest) Reset() {
	*x = FriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequest) ProtoMessage() {}

func (x *FriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequest.ProtoReflect.Descriptor instead.
func (*FriendRequest) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{14}
}

func (x *FriendRequest) GetOuID() int64 {
	if x != nil {
		return x.OuID
	}
	return 0
}

func (x *FriendRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FriendRequest) GetMutual() int32 {
	if x != nil {
		return x.Mutual
	}
	return 0
}

func (x *FriendRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FriendRequest) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// 好友申请记录管理
type GetFriendRequestListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetFriendRequestListReq) Reset() {
	*x = GetFriendRequestListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestListReq) ProtoMessage() {}

func (x *GetFriendRequestListReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestListReq.ProtoReflect.Descriptor instead.
func (*GetFriendRequestListReq) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{15}
}

func (x *GetFriendRequestListReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type GetFriendRequestListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ContactResult   `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	FRList []*FriendRequest `protobuf:"bytes,2,rep,name=FRList,proto3" json:"FRList,omitempty"`
}

func (x *GetFriendRequestListResp) Reset() {
	*x = GetFriendRequestListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestListResp) ProtoMessage() {}

func (x *GetFriendRequestListResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestListResp.ProtoReflect.Descriptor instead.
func (*GetFriendRequestListResp) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{16}
}

func (x *GetFriendRequestListResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetFriendRequestListResp) GetFRList() []*FriendRequest {
	if x != nil {
		return x.FRList
	}
	return nil
}

type SetFriendRequestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	OuID   int64 `protobuf:"varint,2,opt,name=OuID,proto3" json:"OuID,omitempty"`
	Type   int32 `protobuf:"varint,3,opt,name=Type,proto3" json:"Type,omitempty"` //0 request, 1, 2 del
}

func (x *SetFriendRequestReq) Reset() {
	*x = SetFriendRequestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFriendRequestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendRequestReq) ProtoMessage() {}

func (x *SetFriendRequestReq) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendRequestReq.ProtoReflect.Descriptor instead.
func (*SetFriendRequestReq) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{17}
}

func (x *SetFriendRequestReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SetFriendRequestReq) GetOuID() int64 {
	if x != nil {
		return x.OuID
	}
	return 0
}

func (x *SetFriendRequestReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type SetFriendRequestResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ContactResult `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *SetFriendRequestResp) Reset() {
	*x = SetFriendRequestResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_rpc_contacts_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFriendRequestResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendRequestResp) ProtoMessage() {}

func (x *SetFriendRequestResp) ProtoReflect() protoreflect.Message {
	mi := &file_v1_rpc_contacts_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendRequestResp.ProtoReflect.Descriptor instead.
func (*SetFriendRequestResp) Descriptor() ([]byte, []int) {
	return file_v1_rpc_contacts_proto_rawDescGZIP(), []int{18}
}

func (x *SetFriendRequestResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_v1_rpc_contacts_proto protoreflect.FileDescriptor

var file_v1_rpc_contacts_proto_rawDesc = []byte{
	0x0a, 0x15, 0x76, 0x31, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x22, 0x8f, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x4f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4f, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x69, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x3b, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x62, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0xad, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x22, 0x6e, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2b, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x67, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0xb2, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x73, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x46, 0x0a, 0x13, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x74,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x12, 0x0a, 0x10,
	0x53, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x79, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x75, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x4f, 0x75, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x75, 0x74, 0x75, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x7c,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x46,
	0x52, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x46, 0x52, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x13,
	0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4f,
	0x75, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x4f, 0x75, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x47, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xf2, 0x04, 0x0a,
	0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3f, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x17, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0c, 0x53, 0x65,
	0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_rpc_contacts_proto_rawDescOnce sync.Once
	file_v1_rpc_contacts_proto_rawDescData = file_v1_rpc_contacts_proto_rawDesc
)

func file_v1_rpc_contacts_proto_rawDescGZIP() []byte {
	file_v1_rpc_contacts_proto_rawDescOnce.Do(func() {
		file_v1_rpc_contacts_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_rpc_contacts_proto_rawDescData)
	})
	return file_v1_rpc_contacts_proto_rawDescData
}

var file_v1_rpc_contacts_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_v1_rpc_contacts_proto_goTypes = []interface{}{
	(*Contact)(nil),                  // 0: contacts.Contact
	(*ContactResult)(nil),            // 1: contacts.ContactResult
	(*GetContactsReq)(nil),           // 2: contacts.GetContactsReq
	(*GetContactsResp)(nil),          // 3: contacts.GetContactsResp
	(*SetContactReq)(nil),            // 4: contacts.SetContactReq
	(*SetContactResp)(nil),           // 5: contacts.SetContactResp
	(*GetGroupContactsReq)(nil),      // 6: contacts.GetGroupContactsReq
	(*GetGroupContactsResp)(nil),     // 7: contacts.GetGroupContactsResp
	(*SetGroupContactReq)(nil),       // 8: contacts.SetGroupContactReq
	(*SetGroupContactResp)(nil),      // 9: contacts.SetGroupContactResp
	(*GetBlackListReq)(nil),          // 10: contacts.GetBlackListReq
	(*GetBlackListResp)(nil),         // 11: contacts.GetBlackListResp
	(*SetBlackListReq)(nil),          // 12: contacts.SetBlackListReq
	(*SetBlackListResp)(nil),         // 13: contacts.SetBlackListResp
	(*FriendRequest)(nil),            // 14: contacts.FriendRequest
	(*GetFriendRequestListReq)(nil),  // 15: contacts.GetFriendRequestListReq
	(*GetFriendRequestListResp)(nil), // 16: contacts.GetFriendRequestListResp
	(*SetFriendRequestReq)(nil),      // 17: contacts.SetFriendRequestReq
	(*SetFriendRequestResp)(nil),     // 18: contacts.SetFriendRequestResp
}
var file_v1_rpc_contacts_proto_depIdxs = []int32{
	1,  // 0: contacts.GetContactsResp.Result:type_name -> contacts.ContactResult
	0,  // 1: contacts.GetContactsResp.Contacts:type_name -> contacts.Contact
	0,  // 2: contacts.SetContactReq.Contact:type_name -> contacts.Contact
	1,  // 3: contacts.SetContactResp.Result:type_name -> contacts.ContactResult
	1,  // 4: contacts.GetGroupContactsResp.Result:type_name -> contacts.ContactResult
	0,  // 5: contacts.GetGroupContactsResp.Contacts:type_name -> contacts.Contact
	0,  // 6: contacts.SetGroupContactReq.Contact:type_name -> contacts.Contact
	1,  // 7: contacts.SetGroupContactResp.Result:type_name -> contacts.ContactResult
	1,  // 8: contacts.GetFriendRequestListResp.Result:type_name -> contacts.ContactResult
	14, // 9: contacts.GetFriendRequestListResp.FRList:type_name -> contacts.FriendRequest
	1,  // 10: contacts.SetFriendRequestResp.Result:type_name -> contacts.ContactResult
	15, // 11: contacts.Contacts.GetFriendRequestList:input_type -> contacts.GetFriendRequestListReq
	17, // 12: contacts.Contacts.SetFriendRequest:input_type -> contacts.SetFriendRequestReq
	2,  // 13: contacts.Contacts.GetContacts:input_type -> contacts.GetContactsReq
	4,  // 14: contacts.Contacts.SetContact:input_type -> contacts.SetContactReq
	6,  // 15: contacts.Contacts.GetGroupContacts:input_type -> contacts.GetGroupContactsReq
	8,  // 16: contacts.Contacts.SetGroupContact:input_type -> contacts.SetGroupContactReq
	10, // 17: contacts.Contacts.GetBlackList:input_type -> contacts.GetBlackListReq
	12, // 18: contacts.Contacts.SetBlackList:input_type -> contacts.SetBlackListReq
	16, // 19: contacts.Contacts.GetFriendRequestList:output_type -> contacts.GetFriendRequestListResp
	18, // 20: contacts.Contacts.SetFriendRequest:output_type -> contacts.SetFriendRequestResp
	3,  // 21: contacts.Contacts.GetContacts:output_type -> contacts.GetContactsResp
	5,  // 22: contacts.Contacts.SetContact:output_type -> contacts.SetContactResp
	7,  // 23: contacts.Contacts.GetGroupContacts:output_type -> contacts.GetGroupContactsResp
	9,  // 24: contacts.Contacts.SetGroupContact:output_type -> contacts.SetGroupContactResp
	11, // 25: contacts.Contacts.GetBlackList:output_type -> contacts.GetBlackListResp
	13, // 26: contacts.Contacts.SetBlackList:output_type -> contacts.SetBlackListResp
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_v1_rpc_contacts_proto_init() }
func file_v1_rpc_contacts_proto_init() {
	if File_v1_rpc_contacts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_rpc_contacts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetContactReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetContactResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupContactsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupContactsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupContactReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupContactResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlackListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlackListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBlackListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBlackListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFriendRequestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_rpc_contacts_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFriendRequestResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_rpc_contacts_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_rpc_contacts_proto_goTypes,
		DependencyIndexes: file_v1_rpc_contacts_proto_depIdxs,
		MessageInfos:      file_v1_rpc_contacts_proto_msgTypes,
	}.Build()
	File_v1_rpc_contacts_proto = out.File
	file_v1_rpc_contacts_proto_rawDesc = nil
	file_v1_rpc_contacts_proto_goTypes = nil
	file_v1_rpc_contacts_proto_depIdxs = nil
}
