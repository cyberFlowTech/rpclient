// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: define/contacts.proto

package contacts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetContactType int32

const (
	SetContactType_AddContact    SetContactType = 0
	SetContactType_NoticeContact SetContactType = 1
	SetContactType_RemarkContact SetContactType = 2
	SetContactType_DelContact    SetContactType = 3
)

// Enum value maps for SetContactType.
var (
	SetContactType_name = map[int32]string{
		0: "AddContact",
		1: "NoticeContact",
		2: "RemarkContact",
		3: "DelContact",
	}
	SetContactType_value = map[string]int32{
		"AddContact":    0,
		"NoticeContact": 1,
		"RemarkContact": 2,
		"DelContact":    3,
	}
)

func (x SetContactType) Enum() *SetContactType {
	p := new(SetContactType)
	*p = x
	return p
}

func (x SetContactType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetContactType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_contacts_proto_enumTypes[0].Descriptor()
}

func (SetContactType) Type() protoreflect.EnumType {
	return &file_define_contacts_proto_enumTypes[0]
}

func (x SetContactType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetContactType.Descriptor instead.
func (SetContactType) EnumDescriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{0}
}

type SetGroupType int32

const (
	SetGroupType_AddGroup    SetGroupType = 0
	SetGroupType_NoticeGroup SetGroupType = 1
	SetGroupType_BookGroup   SetGroupType = 2
	SetGroupType_TopGroup    SetGroupType = 3
	SetGroupType_GNickGroup  SetGroupType = 4
	SetGroupType_DelGroup    SetGroupType = 5
)

// Enum value maps for SetGroupType.
var (
	SetGroupType_name = map[int32]string{
		0: "AddGroup",
		1: "NoticeGroup",
		2: "BookGroup",
		3: "TopGroup",
		4: "GNickGroup",
		5: "DelGroup",
	}
	SetGroupType_value = map[string]int32{
		"AddGroup":    0,
		"NoticeGroup": 1,
		"BookGroup":   2,
		"TopGroup":    3,
		"GNickGroup":  4,
		"DelGroup":    5,
	}
)

func (x SetGroupType) Enum() *SetGroupType {
	p := new(SetGroupType)
	*p = x
	return p
}

func (x SetGroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetGroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_contacts_proto_enumTypes[1].Descriptor()
}

func (SetGroupType) Type() protoreflect.EnumType {
	return &file_define_contacts_proto_enumTypes[1]
}

func (x SetGroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetGroupType.Descriptor instead.
func (SetGroupType) EnumDescriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{1}
}

type SetBlackType int32

const (
	SetBlackType_AddBlack SetBlackType = 0
	SetBlackType_DelBlack SetBlackType = 1
)

// Enum value maps for SetBlackType.
var (
	SetBlackType_name = map[int32]string{
		0: "AddBlack",
		1: "DelBlack",
	}
	SetBlackType_value = map[string]int32{
		"AddBlack": 0,
		"DelBlack": 1,
	}
)

func (x SetBlackType) Enum() *SetBlackType {
	p := new(SetBlackType)
	*p = x
	return p
}

func (x SetBlackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetBlackType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_contacts_proto_enumTypes[2].Descriptor()
}

func (SetBlackType) Type() protoreflect.EnumType {
	return &file_define_contacts_proto_enumTypes[2]
}

func (x SetBlackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetBlackType.Descriptor instead.
func (SetBlackType) EnumDescriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{2}
}

type SetFRequestType int32

const (
	SetFRequestType_AddFRequest    SetFRequestType = 0 // 申请
	SetFRequestType_AcceptFRequest SetFRequestType = 1 // 同意
	SetFRequestType_DelFRequest    SetFRequestType = 2 // 删除
	SetFRequestType_RejectFRequest SetFRequestType = 3 // 拒绝
)

// Enum value maps for SetFRequestType.
var (
	SetFRequestType_name = map[int32]string{
		0: "AddFRequest",
		1: "AcceptFRequest",
		2: "DelFRequest",
		3: "RejectFRequest",
	}
	SetFRequestType_value = map[string]int32{
		"AddFRequest":    0,
		"AcceptFRequest": 1,
		"DelFRequest":    2,
		"RejectFRequest": 3,
	}
)

func (x SetFRequestType) Enum() *SetFRequestType {
	p := new(SetFRequestType)
	*p = x
	return p
}

func (x SetFRequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetFRequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_contacts_proto_enumTypes[3].Descriptor()
}

func (SetFRequestType) Type() protoreflect.EnumType {
	return &file_define_contacts_proto_enumTypes[3]
}

func (x SetFRequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetFRequestType.Descriptor instead.
func (SetFRequestType) EnumDescriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{3}
}

type RelationType int32

const (
	RelationType_CheckFriend  RelationType = 0
	RelationType_CheckBlock   RelationType = 1
	RelationType_CheckFocus   RelationType = 2
	RelationType_CheckGeneral RelationType = 3
	RelationType_CheckBook    RelationType = 4
)

// Enum value maps for RelationType.
var (
	RelationType_name = map[int32]string{
		0: "CheckFriend",
		1: "CheckBlock",
		2: "CheckFocus",
		3: "CheckGeneral",
		4: "CheckBook",
	}
	RelationType_value = map[string]int32{
		"CheckFriend":  0,
		"CheckBlock":   1,
		"CheckFocus":   2,
		"CheckGeneral": 3,
		"CheckBook":    4,
	}
)

func (x RelationType) Enum() *RelationType {
	p := new(RelationType)
	*p = x
	return p
}

func (x RelationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelationType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_contacts_proto_enumTypes[4].Descriptor()
}

func (RelationType) Type() protoreflect.EnumType {
	return &file_define_contacts_proto_enumTypes[4]
}

func (x RelationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelationType.Descriptor instead.
func (RelationType) EnumDescriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{4}
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OID      string `protobuf:"bytes,1,opt,name=OID,proto3" json:"OID,omitempty"`            // 好友ID或群聊ID
	Nick     string `protobuf:"bytes,2,opt,name=Nick,proto3" json:"Nick,omitempty"`          // 备注昵称
	IsNotice bool   `protobuf:"varint,3,opt,name=IsNotice,proto3" json:"IsNotice,omitempty"` //是否屏蔽系统消息
	Avatar   string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`      //头像
	Status   int32  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`     // 状态，是否已经删除
	Letter   string `protobuf:"bytes,6,opt,name=Letter,proto3" json:"Letter,omitempty"`      // 昵称首字母，用于排序
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{0}
}

func (x *Contact) GetOID() string {
	if x != nil {
		return x.OID
	}
	return ""
}

func (x *Contact) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *Contact) GetIsNotice() bool {
	if x != nil {
		return x.IsNotice
	}
	return false
}

func (x *Contact) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Contact) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Contact) GetLetter() string {
	if x != nil {
		return x.Letter
	}
	return ""
}

type MyGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GID      string `protobuf:"bytes,1,opt,name=GID,proto3" json:"GID,omitempty"`            // 好友ID或群聊ID
	GNick    string `protobuf:"bytes,2,opt,name=GNick,proto3" json:"GNick,omitempty"`        // 在群里等备注昵称
	IsNotice bool   `protobuf:"varint,3,opt,name=IsNotice,proto3" json:"IsNotice,omitempty"` //是否屏蔽系统消息
	IsTop    bool   `protobuf:"varint,4,opt,name=IsTop,proto3" json:"IsTop,omitempty"`       //置顶
	IsBook   bool   `protobuf:"varint,5,opt,name=IsBook,proto3" json:"IsBook,omitempty"`     //收藏
	Avatar   string `protobuf:"bytes,6,opt,name=Avatar,proto3" json:"Avatar,omitempty"`      //群头像
	GName    string `protobuf:"bytes,7,opt,name=GName,proto3" json:"GName,omitempty"`
	Ctime    int64  `protobuf:"varint,8,opt,name=Ctime,proto3" json:"Ctime,omitempty"`   //时间
	Status   int32  `protobuf:"varint,9,opt,name=Status,proto3" json:"Status,omitempty"` // 状态，是否已经删除
}

func (x *MyGroup) Reset() {
	*x = MyGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyGroup) ProtoMessage() {}

func (x *MyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyGroup.ProtoReflect.Descriptor instead.
func (*MyGroup) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{1}
}

func (x *MyGroup) GetGID() string {
	if x != nil {
		return x.GID
	}
	return ""
}

func (x *MyGroup) GetGNick() string {
	if x != nil {
		return x.GNick
	}
	return ""
}

func (x *MyGroup) GetIsNotice() bool {
	if x != nil {
		return x.IsNotice
	}
	return false
}

func (x *MyGroup) GetIsTop() bool {
	if x != nil {
		return x.IsTop
	}
	return false
}

func (x *MyGroup) GetIsBook() bool {
	if x != nil {
		return x.IsBook
	}
	return false
}

func (x *MyGroup) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *MyGroup) GetGName() string {
	if x != nil {
		return x.GName
	}
	return ""
}

func (x *MyGroup) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *MyGroup) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type ContactResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     int32  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ContactResult) Reset() {
	*x = ContactResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactResult) ProtoMessage() {}

func (x *ContactResult) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactResult.ProtoReflect.Descriptor instead.
func (*ContactResult) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{2}
}

func (x *ContactResult) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *ContactResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetContactsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`        //用户ID
	PageSize  int32  `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`   //分页Size，默认=100
	PageIndex int32  `protobuf:"varint,3,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"` //分页index,从1开始，默认为1
}

func (x *GetContactsReq) Reset() {
	*x = GetContactsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactsReq) ProtoMessage() {}

func (x *GetContactsReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactsReq.ProtoReflect.Descriptor instead.
func (*GetContactsReq) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{3}
}

func (x *GetContactsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetContactsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetContactsReq) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

type GetContactsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *ContactResult `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	PageIndex int32          `protobuf:"varint,2,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"` //当前index
	TotalSize int32          `protobuf:"varint,3,opt,name=TotalSize,proto3" json:"TotalSize,omitempty"` //总共好友数
	Contacts  []*Contact     `protobuf:"bytes,4,rep,name=Contacts,proto3" json:"Contacts,omitempty"`    //好友list
}

func (x *GetContactsResp) Reset() {
	*x = GetContactsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactsResp) ProtoMessage() {}

func (x *GetContactsResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactsResp.ProtoReflect.Descriptor instead.
func (*GetContactsResp) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{4}
}

func (x *GetContactsResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetContactsResp) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetContactsResp) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetContactsResp) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type SetContactReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  string         `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Contact *Contact       `protobuf:"bytes,2,opt,name=Contact,proto3" json:"Contact,omitempty"`                               //覆盖更新
	SetType SetContactType `protobuf:"varint,3,opt,name=SetType,proto3,enum=contacts.SetContactType" json:"SetType,omitempty"` //0 add;1 update notice;2 udpate remark 3、delete
	Context string         `protobuf:"bytes,4,opt,name=Context,proto3" json:"Context,omitempty"`
	Remark  string         `protobuf:"bytes,5,opt,name=Remark,proto3" json:"Remark,omitempty"`
}

func (x *SetContactReq) Reset() {
	*x = SetContactReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetContactReq) ProtoMessage() {}

func (x *SetContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetContactReq.ProtoReflect.Descriptor instead.
func (*SetContactReq) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{5}
}

func (x *SetContactReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetContactReq) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *SetContactReq) GetSetType() SetContactType {
	if x != nil {
		return x.SetType
	}
	return SetContactType_AddContact
}

func (x *SetContactReq) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *SetContactReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type SetContactResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ContactResult `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *SetContactResp) Reset() {
	*x = SetContactResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetContactResp) ProtoMessage() {}

func (x *SetContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetContactResp.ProtoReflect.Descriptor instead.
func (*SetContactResp) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{6}
}

func (x *SetContactResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type GetGroupContactsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`                //用户ID
	PageSize      int32    `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`           //分页Size，默认=100
	PageIndex     int32    `protobuf:"varint,3,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"`         //分页index,从1开始，默认为1
	Gids          []string `protobuf:"bytes,4,rep,name=Gids,proto3" json:"Gids,omitempty"`                    //指定群信息环信ID
	OnlyBookGroup bool     `protobuf:"varint,5,opt,name=OnlyBookGroup,proto3" json:"OnlyBookGroup,omitempty"` //只返回收藏等
}

func (x *GetGroupContactsReq) Reset() {
	*x = GetGroupContactsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupContactsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupContactsReq) ProtoMessage() {}

func (x *GetGroupContactsReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupContactsReq.ProtoReflect.Descriptor instead.
func (*GetGroupContactsReq) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{7}
}

func (x *GetGroupContactsReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetGroupContactsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetGroupContactsReq) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetGroupContactsReq) GetGids() []string {
	if x != nil {
		return x.Gids
	}
	return nil
}

func (x *GetGroupContactsReq) GetOnlyBookGroup() bool {
	if x != nil {
		return x.OnlyBookGroup
	}
	return false
}

type GetGroupContactsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *ContactResult `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	PageIndex int32          `protobuf:"varint,2,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"` //当前index
	TotalSize int32          `protobuf:"varint,3,opt,name=TotalSize,proto3" json:"TotalSize,omitempty"` //总共群个数
	Contacts  []*MyGroup     `protobuf:"bytes,4,rep,name=Contacts,proto3" json:"Contacts,omitempty"`    //群list
}

func (x *GetGroupContactsResp) Reset() {
	*x = GetGroupContactsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupContactsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupContactsResp) ProtoMessage() {}

func (x *GetGroupContactsResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupContactsResp.ProtoReflect.Descriptor instead.
func (*GetGroupContactsResp) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{8}
}

func (x *GetGroupContactsResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetGroupContactsResp) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetGroupContactsResp) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetGroupContactsResp) GetContacts() []*MyGroup {
	if x != nil {
		return x.Contacts
	}
	return nil
}

type SetGroupContactReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  string       `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Contact *MyGroup     `protobuf:"bytes,2,opt,name=Contact,proto3" json:"Contact,omitempty"`                             //覆盖更新
	SetType SetGroupType `protobuf:"varint,3,opt,name=SetType,proto3,enum=contacts.SetGroupType" json:"SetType,omitempty"` //1 add;2 set notice ;3 set top ;4 set bookmark; 5 set gnick ;6 delete
}

func (x *SetGroupContactReq) Reset() {
	*x = SetGroupContactReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupContactReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupContactReq) ProtoMessage() {}

func (x *SetGroupContactReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupContactReq.ProtoReflect.Descriptor instead.
func (*SetGroupContactReq) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{9}
}

func (x *SetGroupContactReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetGroupContactReq) GetContact() *MyGroup {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *SetGroupContactReq) GetSetType() SetGroupType {
	if x != nil {
		return x.SetType
	}
	return SetGroupType_AddGroup
}

type SetGroupContactResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ContactResult `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *SetGroupContactResp) Reset() {
	*x = SetGroupContactResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupContactResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupContactResp) ProtoMessage() {}

func (x *SetGroupContactResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupContactResp.ProtoReflect.Descriptor instead.
func (*SetGroupContactResp) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{10}
}

func (x *SetGroupContactResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// black list
type BlackInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"` //用户id
	Nick   string `protobuf:"bytes,2,opt,name=Nick,proto3" json:"Nick,omitempty"`     //昵称
	Avatar string `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"` //头像
}

func (x *BlackInfo) Reset() {
	*x = BlackInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlackInfo) ProtoMessage() {}

func (x *BlackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlackInfo.ProtoReflect.Descriptor instead.
func (*BlackInfo) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{11}
}

func (x *BlackInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *BlackInfo) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *BlackInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type GetBlackListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PageSize  int32  `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`   //分页Size，默认=100
	PageIndex int32  `protobuf:"varint,3,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"` //分页index,从1开始，默认为1
}

func (x *GetBlackListReq) Reset() {
	*x = GetBlackListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlackListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlackListReq) ProtoMessage() {}

func (x *GetBlackListReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlackListReq.ProtoReflect.Descriptor instead.
func (*GetBlackListReq) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{12}
}

func (x *GetBlackListReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetBlackListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetBlackListReq) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

type GetBlackListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *ContactResult `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	PageIndex int32          `protobuf:"varint,2,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"` //当前index
	TotalSize int32          `protobuf:"varint,3,opt,name=TotalSize,proto3" json:"TotalSize,omitempty"` //总共群个数
	BlackList []*BlackInfo   `protobuf:"bytes,4,rep,name=BlackList,proto3" json:"BlackList,omitempty"`
}

func (x *GetBlackListResp) Reset() {
	*x = GetBlackListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlackListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlackListResp) ProtoMessage() {}

func (x *GetBlackListResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlackListResp.ProtoReflect.Descriptor instead.
func (*GetBlackListResp) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{13}
}

func (x *GetBlackListResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetBlackListResp) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *GetBlackListResp) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetBlackListResp) GetBlackList() []*BlackInfo {
	if x != nil {
		return x.BlackList
	}
	return nil
}

type SetBlackListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  string       `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	SetType SetBlackType `protobuf:"varint,2,opt,name=SetType,proto3,enum=contacts.SetBlackType" json:"SetType,omitempty"`
	Ouid    string       `protobuf:"bytes,3,opt,name=Ouid,proto3" json:"Ouid,omitempty"`
}

func (x *SetBlackListReq) Reset() {
	*x = SetBlackListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBlackListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBlackListReq) ProtoMessage() {}

func (x *SetBlackListReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBlackListReq.ProtoReflect.Descriptor instead.
func (*SetBlackListReq) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{14}
}

func (x *SetBlackListReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SetBlackListReq) GetSetType() SetBlackType {
	if x != nil {
		return x.SetType
	}
	return SetBlackType_AddBlack
}

func (x *SetBlackListReq) GetOuid() string {
	if x != nil {
		return x.Ouid
	}
	return ""
}

type SetBlackListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ContactResult `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *SetBlackListResp) Reset() {
	*x = SetBlackListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBlackListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBlackListResp) ProtoMessage() {}

func (x *SetBlackListResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBlackListResp.ProtoReflect.Descriptor instead.
func (*SetBlackListResp) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{15}
}

func (x *SetBlackListResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type FriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OuID    int64  `protobuf:"varint,1,opt,name=OuID,proto3" json:"OuID,omitempty"`
	Msg     string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Mutual  int32  `protobuf:"varint,3,opt,name=mutual,proto3" json:"mutual,omitempty"` //mutual 是否加了对方为我的好友
	Status  int32  `protobuf:"varint,4,opt,name=Status,proto3" json:"Status,omitempty"`
	Time    uint64 `protobuf:"varint,5,opt,name=Time,proto3" json:"Time,omitempty"`
	Nick    string `protobuf:"bytes,6,opt,name=Nick,proto3" json:"Nick,omitempty"` //昵称，remark
	Avatar  string `protobuf:"bytes,7,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Context string `protobuf:"bytes,8,opt,name=Context,proto3" json:"Context,omitempty"`
	Remark  string `protobuf:"bytes,9,opt,name=Remark,proto3" json:"Remark,omitempty"`
	Num     int64  `protobuf:"varint,10,opt,name=Num,proto3" json:"Num,omitempty"`
}

func (x *FriendRequest) Reset() {
	*x = FriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendRequest) ProtoMessage() {}

func (x *FriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendRequest.ProtoReflect.Descriptor instead.
func (*FriendRequest) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{16}
}

func (x *FriendRequest) GetOuID() int64 {
	if x != nil {
		return x.OuID
	}
	return 0
}

func (x *FriendRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FriendRequest) GetMutual() int32 {
	if x != nil {
		return x.Mutual
	}
	return 0
}

func (x *FriendRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FriendRequest) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *FriendRequest) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *FriendRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FriendRequest) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *FriendRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *FriendRequest) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

// 好友申请记录管理
type GetFriendRequestListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetFriendRequestListReq) Reset() {
	*x = GetFriendRequestListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestListReq) ProtoMessage() {}

func (x *GetFriendRequestListReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestListReq.ProtoReflect.Descriptor instead.
func (*GetFriendRequestListReq) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{17}
}

func (x *GetFriendRequestListReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type GetFriendRequestListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ContactResult   `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	FRList []*FriendRequest `protobuf:"bytes,2,rep,name=FRList,proto3" json:"FRList,omitempty"`
}

func (x *GetFriendRequestListResp) Reset() {
	*x = GetFriendRequestListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestListResp) ProtoMessage() {}

func (x *GetFriendRequestListResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestListResp.ProtoReflect.Descriptor instead.
func (*GetFriendRequestListResp) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{18}
}

func (x *GetFriendRequestListResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GetFriendRequestListResp) GetFRList() []*FriendRequest {
	if x != nil {
		return x.FRList
	}
	return nil
}

type SetFriendRequestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  int64           `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	OuID    int64           `protobuf:"varint,2,opt,name=OuID,proto3" json:"OuID,omitempty"`
	Type    SetFRequestType `protobuf:"varint,3,opt,name=Type,proto3,enum=contacts.SetFRequestType" json:"Type,omitempty"` //0 add request, 1 accept, 2 del
	Context string          `protobuf:"bytes,4,opt,name=Context,proto3" json:"Context,omitempty"`                          // 申请信息
	Remark  string          `protobuf:"bytes,5,opt,name=Remark,proto3" json:"Remark,omitempty"`                            // 对接收者的备注
}

func (x *SetFriendRequestReq) Reset() {
	*x = SetFriendRequestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFriendRequestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendRequestReq) ProtoMessage() {}

func (x *SetFriendRequestReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendRequestReq.ProtoReflect.Descriptor instead.
func (*SetFriendRequestReq) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{19}
}

func (x *SetFriendRequestReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *SetFriendRequestReq) GetOuID() int64 {
	if x != nil {
		return x.OuID
	}
	return 0
}

func (x *SetFriendRequestReq) GetType() SetFRequestType {
	if x != nil {
		return x.Type
	}
	return SetFRequestType_AddFRequest
}

func (x *SetFriendRequestReq) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *SetFriendRequestReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type SetFriendRequestResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *ContactResult `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *SetFriendRequestResp) Reset() {
	*x = SetFriendRequestResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetFriendRequestResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFriendRequestResp) ProtoMessage() {}

func (x *SetFriendRequestResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFriendRequestResp.ProtoReflect.Descriptor instead.
func (*SetFriendRequestResp) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{20}
}

func (x *SetFriendRequestResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CheckRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetType RelationType   `protobuf:"varint,1,opt,name=SetType,proto3,enum=contacts.RelationType" json:"SetType,omitempty"`
	RTypes  []RelationType `protobuf:"varint,2,rep,packed,name=RTypes,proto3,enum=contacts.RelationType" json:"RTypes,omitempty"` //要check的关系
	Ouids   []string       `protobuf:"bytes,3,rep,name=Ouids,proto3" json:"Ouids,omitempty"`
	UserID  string         `protobuf:"bytes,4,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *CheckRelationReq) Reset() {
	*x = CheckRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRelationReq) ProtoMessage() {}

func (x *CheckRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRelationReq.ProtoReflect.Descriptor instead.
func (*CheckRelationReq) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{21}
}

func (x *CheckRelationReq) GetSetType() RelationType {
	if x != nil {
		return x.SetType
	}
	return RelationType_CheckFriend
}

func (x *CheckRelationReq) GetRTypes() []RelationType {
	if x != nil {
		return x.RTypes
	}
	return nil
}

func (x *CheckRelationReq) GetOuids() []string {
	if x != nil {
		return x.Ouids
	}
	return nil
}

func (x *CheckRelationReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relation map[string]int32 `protobuf:"bytes,1,rep,name=Relation,proto3" json:"Relation,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{22}
}

func (x *Relation) GetRelation() map[string]int32 {
	if x != nil {
		return x.Relation
	}
	return nil
}

type CheckRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    *ContactResult       `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Relations map[string]*Relation `protobuf:"bytes,2,rep,name=Relations,proto3" json:"Relations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //key为relationtype的字符串
}

func (x *CheckRelationResp) Reset() {
	*x = CheckRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRelationResp) ProtoMessage() {}

func (x *CheckRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRelationResp.ProtoReflect.Descriptor instead.
func (*CheckRelationResp) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{23}
}

func (x *CheckRelationResp) GetResult() *ContactResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CheckRelationResp) GetRelations() map[string]*Relation {
	if x != nil {
		return x.Relations
	}
	return nil
}

type RunTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskName string `protobuf:"bytes,1,opt,name=TaskName,proto3" json:"TaskName,omitempty"`
}

func (x *RunTaskReq) Reset() {
	*x = RunTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTaskReq) ProtoMessage() {}

func (x *RunTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTaskReq.ProtoReflect.Descriptor instead.
func (*RunTaskReq) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{24}
}

func (x *RunTaskReq) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

type GetSingleContactsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetSingleContactsReq) Reset() {
	*x = GetSingleContactsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleContactsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleContactsReq) ProtoMessage() {}

func (x *GetSingleContactsReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleContactsReq.ProtoReflect.Descriptor instead.
func (*GetSingleContactsReq) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{25}
}

func (x *GetSingleContactsReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetSingleContactsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=UserIds,proto3" json:"UserIds,omitempty"`
}

func (x *GetSingleContactsResp) Reset() {
	*x = GetSingleContactsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_contacts_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleContactsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleContactsResp) ProtoMessage() {}

func (x *GetSingleContactsResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_contacts_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleContactsResp.ProtoReflect.Descriptor instead.
func (*GetSingleContactsResp) Descriptor() ([]byte, []int) {
	return file_define_contacts_proto_rawDescGZIP(), []int{26}
}

func (x *GetSingleContactsResp) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

var File_define_contacts_proto protoreflect.FileDescriptor

var file_define_contacts_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x22, 0x93, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x4f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4f, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x69, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x22, 0xd7, 0x01, 0x0a, 0x07, 0x4d, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x47, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x47, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49,
	0x73, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x54, 0x6f, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x54, 0x6f, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x49, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49,
	0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x47, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x47, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x3b, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x52, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x62,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0xad, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x53, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22,
	0x41, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x47, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x47, 0x69, 0x64, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x6e, 0x6c, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x4f, 0x6e, 0x6c, 0x79, 0x42, 0x6f, 0x6f,
	0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xb2, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x08,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x12,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x46, 0x0a, 0x13, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x4f, 0x0a, 0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x22, 0x63, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x0f,
	0x53, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x30, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4f, 0x75, 0x69, 0x64, 0x22, 0x43, 0x0a,
	0x10, 0x53, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x0d, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x75, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x4f, 0x75, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x75,
	0x74, 0x75, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x75, 0x74, 0x75,
	0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x69,
	0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x4e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22, 0x31,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x7c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2f,
	0x0a, 0x06, 0x46, 0x52, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x46, 0x52, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xa2, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x4f, 0x75, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x4f,
	0x75, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0x47, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa2, 0x01,
	0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x30, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x53, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x52, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x52, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x75, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x75, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x22, 0x85, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3c, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3b, 0x0a,
	0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe0, 0x01, 0x0a, 0x11, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x48, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x50, 0x0a, 0x0e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x28, 0x0a,
	0x0a, 0x52, 0x75, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54,
	0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x2a, 0x56, 0x0a, 0x0e, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x10, 0x03, 0x2a, 0x68, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x54, 0x6f, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x47, 0x4e, 0x69, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x04, 0x12, 0x0c,
	0x0a, 0x08, 0x44, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x05, 0x2a, 0x2a, 0x0a, 0x0c,
	0x53, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x65,
	0x6c, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x10, 0x01, 0x2a, 0x5b, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x46,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x41,
	0x64, 0x64, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x46, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10,
	0x02, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x46, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x10, 0x03, 0x2a, 0x60, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46,
	0x6f, 0x63, 0x75, 0x73, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x42, 0x6f, 0x6f, 0x6b, 0x10, 0x04, 0x32, 0xcc, 0x06, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x12, 0x5d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0a, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12,
	0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x2e, 0x52, 0x75, 0x6e,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x54, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_define_contacts_proto_rawDescOnce sync.Once
	file_define_contacts_proto_rawDescData = file_define_contacts_proto_rawDesc
)

func file_define_contacts_proto_rawDescGZIP() []byte {
	file_define_contacts_proto_rawDescOnce.Do(func() {
		file_define_contacts_proto_rawDescData = protoimpl.X.CompressGZIP(file_define_contacts_proto_rawDescData)
	})
	return file_define_contacts_proto_rawDescData
}

var file_define_contacts_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_define_contacts_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_define_contacts_proto_goTypes = []interface{}{
	(SetContactType)(0),              // 0: contacts.SetContactType
	(SetGroupType)(0),                // 1: contacts.SetGroupType
	(SetBlackType)(0),                // 2: contacts.SetBlackType
	(SetFRequestType)(0),             // 3: contacts.SetFRequestType
	(RelationType)(0),                // 4: contacts.RelationType
	(*Contact)(nil),                  // 5: contacts.Contact
	(*MyGroup)(nil),                  // 6: contacts.MyGroup
	(*ContactResult)(nil),            // 7: contacts.ContactResult
	(*GetContactsReq)(nil),           // 8: contacts.GetContactsReq
	(*GetContactsResp)(nil),          // 9: contacts.GetContactsResp
	(*SetContactReq)(nil),            // 10: contacts.SetContactReq
	(*SetContactResp)(nil),           // 11: contacts.SetContactResp
	(*GetGroupContactsReq)(nil),      // 12: contacts.GetGroupContactsReq
	(*GetGroupContactsResp)(nil),     // 13: contacts.GetGroupContactsResp
	(*SetGroupContactReq)(nil),       // 14: contacts.SetGroupContactReq
	(*SetGroupContactResp)(nil),      // 15: contacts.SetGroupContactResp
	(*BlackInfo)(nil),                // 16: contacts.BlackInfo
	(*GetBlackListReq)(nil),          // 17: contacts.GetBlackListReq
	(*GetBlackListResp)(nil),         // 18: contacts.GetBlackListResp
	(*SetBlackListReq)(nil),          // 19: contacts.SetBlackListReq
	(*SetBlackListResp)(nil),         // 20: contacts.SetBlackListResp
	(*FriendRequest)(nil),            // 21: contacts.FriendRequest
	(*GetFriendRequestListReq)(nil),  // 22: contacts.GetFriendRequestListReq
	(*GetFriendRequestListResp)(nil), // 23: contacts.GetFriendRequestListResp
	(*SetFriendRequestReq)(nil),      // 24: contacts.SetFriendRequestReq
	(*SetFriendRequestResp)(nil),     // 25: contacts.SetFriendRequestResp
	(*CheckRelationReq)(nil),         // 26: contacts.CheckRelationReq
	(*Relation)(nil),                 // 27: contacts.Relation
	(*CheckRelationResp)(nil),        // 28: contacts.CheckRelationResp
	(*RunTaskReq)(nil),               // 29: contacts.RunTaskReq
	(*GetSingleContactsReq)(nil),     // 30: contacts.GetSingleContactsReq
	(*GetSingleContactsResp)(nil),    // 31: contacts.GetSingleContactsResp
	nil,                              // 32: contacts.Relation.RelationEntry
	nil,                              // 33: contacts.CheckRelationResp.RelationsEntry
}
var file_define_contacts_proto_depIdxs = []int32{
	7,  // 0: contacts.GetContactsResp.Result:type_name -> contacts.ContactResult
	5,  // 1: contacts.GetContactsResp.Contacts:type_name -> contacts.Contact
	5,  // 2: contacts.SetContactReq.Contact:type_name -> contacts.Contact
	0,  // 3: contacts.SetContactReq.SetType:type_name -> contacts.SetContactType
	7,  // 4: contacts.SetContactResp.Result:type_name -> contacts.ContactResult
	7,  // 5: contacts.GetGroupContactsResp.Result:type_name -> contacts.ContactResult
	6,  // 6: contacts.GetGroupContactsResp.Contacts:type_name -> contacts.MyGroup
	6,  // 7: contacts.SetGroupContactReq.Contact:type_name -> contacts.MyGroup
	1,  // 8: contacts.SetGroupContactReq.SetType:type_name -> contacts.SetGroupType
	7,  // 9: contacts.SetGroupContactResp.Result:type_name -> contacts.ContactResult
	7,  // 10: contacts.GetBlackListResp.Result:type_name -> contacts.ContactResult
	16, // 11: contacts.GetBlackListResp.BlackList:type_name -> contacts.BlackInfo
	2,  // 12: contacts.SetBlackListReq.SetType:type_name -> contacts.SetBlackType
	7,  // 13: contacts.SetBlackListResp.Result:type_name -> contacts.ContactResult
	7,  // 14: contacts.GetFriendRequestListResp.Result:type_name -> contacts.ContactResult
	21, // 15: contacts.GetFriendRequestListResp.FRList:type_name -> contacts.FriendRequest
	3,  // 16: contacts.SetFriendRequestReq.Type:type_name -> contacts.SetFRequestType
	7,  // 17: contacts.SetFriendRequestResp.Result:type_name -> contacts.ContactResult
	4,  // 18: contacts.CheckRelationReq.SetType:type_name -> contacts.RelationType
	4,  // 19: contacts.CheckRelationReq.RTypes:type_name -> contacts.RelationType
	32, // 20: contacts.Relation.Relation:type_name -> contacts.Relation.RelationEntry
	7,  // 21: contacts.CheckRelationResp.Result:type_name -> contacts.ContactResult
	33, // 22: contacts.CheckRelationResp.Relations:type_name -> contacts.CheckRelationResp.RelationsEntry
	27, // 23: contacts.CheckRelationResp.RelationsEntry.value:type_name -> contacts.Relation
	22, // 24: contacts.Contacts.GetFriendRequestList:input_type -> contacts.GetFriendRequestListReq
	24, // 25: contacts.Contacts.SetFriendRequest:input_type -> contacts.SetFriendRequestReq
	8,  // 26: contacts.Contacts.GetContacts:input_type -> contacts.GetContactsReq
	10, // 27: contacts.Contacts.SetContact:input_type -> contacts.SetContactReq
	12, // 28: contacts.Contacts.GetGroupContacts:input_type -> contacts.GetGroupContactsReq
	14, // 29: contacts.Contacts.SetGroupContact:input_type -> contacts.SetGroupContactReq
	17, // 30: contacts.Contacts.GetBlackList:input_type -> contacts.GetBlackListReq
	19, // 31: contacts.Contacts.SetBlackList:input_type -> contacts.SetBlackListReq
	26, // 32: contacts.Contacts.CheckRelation:input_type -> contacts.CheckRelationReq
	29, // 33: contacts.Contacts.RunTask:input_type -> contacts.RunTaskReq
	30, // 34: contacts.Contacts.GetSingleContacts:input_type -> contacts.GetSingleContactsReq
	23, // 35: contacts.Contacts.GetFriendRequestList:output_type -> contacts.GetFriendRequestListResp
	25, // 36: contacts.Contacts.SetFriendRequest:output_type -> contacts.SetFriendRequestResp
	9,  // 37: contacts.Contacts.GetContacts:output_type -> contacts.GetContactsResp
	11, // 38: contacts.Contacts.SetContact:output_type -> contacts.SetContactResp
	13, // 39: contacts.Contacts.GetGroupContacts:output_type -> contacts.GetGroupContactsResp
	15, // 40: contacts.Contacts.SetGroupContact:output_type -> contacts.SetGroupContactResp
	18, // 41: contacts.Contacts.GetBlackList:output_type -> contacts.GetBlackListResp
	20, // 42: contacts.Contacts.SetBlackList:output_type -> contacts.SetBlackListResp
	28, // 43: contacts.Contacts.CheckRelation:output_type -> contacts.CheckRelationResp
	7,  // 44: contacts.Contacts.RunTask:output_type -> contacts.ContactResult
	31, // 45: contacts.Contacts.GetSingleContacts:output_type -> contacts.GetSingleContactsResp
	35, // [35:46] is the sub-list for method output_type
	24, // [24:35] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_define_contacts_proto_init() }
func file_define_contacts_proto_init() {
	if File_define_contacts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_define_contacts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetContactReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetContactResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupContactsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupContactsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupContactReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupContactResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlackInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlackListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlackListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBlackListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBlackListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFriendRequestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetFriendRequestResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSingleContactsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_contacts_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSingleContactsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_define_contacts_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_define_contacts_proto_goTypes,
		DependencyIndexes: file_define_contacts_proto_depIdxs,
		EnumInfos:         file_define_contacts_proto_enumTypes,
		MessageInfos:      file_define_contacts_proto_msgTypes,
	}.Build()
	File_define_contacts_proto = out.File
	file_define_contacts_proto_rawDesc = nil
	file_define_contacts_proto_goTypes = nil
	file_define_contacts_proto_depIdxs = nil
}
