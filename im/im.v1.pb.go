// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: define/im.v1.proto

package im

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatType int32

const (
	ChatType_User     ChatType = 0
	ChatType_Group    ChatType = 1
	ChatType_ChatRoom ChatType = 2
)

// Enum value maps for ChatType.
var (
	ChatType_name = map[int32]string{
		0: "User",
		1: "Group",
		2: "ChatRoom",
	}
	ChatType_value = map[string]int32{
		"User":     0,
		"Group":    1,
		"ChatRoom": 2,
	}
)

func (x ChatType) Enum() *ChatType {
	p := new(ChatType)
	*p = x
	return p
}

func (x ChatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_im_v1_proto_enumTypes[0].Descriptor()
}

func (ChatType) Type() protoreflect.EnumType {
	return &file_define_im_v1_proto_enumTypes[0]
}

func (x ChatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatType.Descriptor instead.
func (ChatType) EnumDescriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{0}
}

type SetType int32

const (
	SetType_Create SetType = 0
	SetType_Update SetType = 1
	SetType_Del    SetType = 3
)

// Enum value maps for SetType.
var (
	SetType_name = map[int32]string{
		0: "Create",
		1: "Update",
		3: "Del",
	}
	SetType_value = map[string]int32{
		"Create": 0,
		"Update": 1,
		"Del":    3,
	}
)

func (x SetType) Enum() *SetType {
	p := new(SetType)
	*p = x
	return p
}

func (x SetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_im_v1_proto_enumTypes[1].Descriptor()
}

func (SetType) Type() protoreflect.EnumType {
	return &file_define_im_v1_proto_enumTypes[1]
}

func (x SetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetType.Descriptor instead.
func (SetType) EnumDescriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{1}
}

type UpdateGroupUserType int32

const (
	UpdateGroupUserType_Add       UpdateGroupUserType = 0
	UpdateGroupUserType_Remove    UpdateGroupUserType = 1
	UpdateGroupUserType_Frozen    UpdateGroupUserType = 3
	UpdateGroupUserType_UnFrozen  UpdateGroupUserType = 4
	UpdateGroupUserType_EditOwner UpdateGroupUserType = 5
)

// Enum value maps for UpdateGroupUserType.
var (
	UpdateGroupUserType_name = map[int32]string{
		0: "Add",
		1: "Remove",
		3: "Frozen",
		4: "UnFrozen",
		5: "EditOwner",
	}
	UpdateGroupUserType_value = map[string]int32{
		"Add":       0,
		"Remove":    1,
		"Frozen":    3,
		"UnFrozen":  4,
		"EditOwner": 5,
	}
)

func (x UpdateGroupUserType) Enum() *UpdateGroupUserType {
	p := new(UpdateGroupUserType)
	*p = x
	return p
}

func (x UpdateGroupUserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateGroupUserType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_im_v1_proto_enumTypes[2].Descriptor()
}

func (UpdateGroupUserType) Type() protoreflect.EnumType {
	return &file_define_im_v1_proto_enumTypes[2]
}

func (x UpdateGroupUserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateGroupUserType.Descriptor instead.
func (UpdateGroupUserType) EnumDescriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{2}
}

type NotificationType int32

const (
	NotificationType_NONE NotificationType = 0 // 不接收离线消息的推送通知
	NotificationType_ALL  NotificationType = 1 // 接收全部离线消息的推送通知
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "NONE",
		1: "ALL",
	}
	NotificationType_value = map[string]int32{
		"NONE": 0,
		"ALL":  1,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_im_v1_proto_enumTypes[3].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_define_im_v1_proto_enumTypes[3]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{3}
}

type EmojiRelationType int32

const (
	EmojiRelationType_UserEmoji EmojiRelationType = 0 // 用户
	EmojiRelationType_ClubEmoji EmojiRelationType = 1 // 部落
)

// Enum value maps for EmojiRelationType.
var (
	EmojiRelationType_name = map[int32]string{
		0: "UserEmoji",
		1: "ClubEmoji",
	}
	EmojiRelationType_value = map[string]int32{
		"UserEmoji": 0,
		"ClubEmoji": 1,
	}
)

func (x EmojiRelationType) Enum() *EmojiRelationType {
	p := new(EmojiRelationType)
	*p = x
	return p
}

func (x EmojiRelationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmojiRelationType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_im_v1_proto_enumTypes[4].Descriptor()
}

func (EmojiRelationType) Type() protoreflect.EnumType {
	return &file_define_im_v1_proto_enumTypes[4]
}

func (x EmojiRelationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmojiRelationType.Descriptor instead.
func (EmojiRelationType) EnumDescriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{4}
}

type GetTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetTokenReq) Reset() {
	*x = GetTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenReq) ProtoMessage() {}

func (x *GetTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenReq.ProtoReflect.Descriptor instead.
func (*GetTokenReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{0}
}

func (x *GetTokenReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetTokenRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	ExpiresIn   int64  `protobuf:"varint,2,opt,name=ExpiresIn,proto3" json:"ExpiresIn,omitempty"`
}

func (x *GetTokenRes) Reset() {
	*x = GetTokenRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenRes) ProtoMessage() {}

func (x *GetTokenRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenRes.ProtoReflect.Descriptor instead.
func (*GetTokenRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{1}
}

func (x *GetTokenRes) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetTokenRes) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type MsgRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]string `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 消息返回
}

func (x *MsgRes) Reset() {
	*x = MsgRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRes) ProtoMessage() {}

func (x *MsgRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRes.ProtoReflect.Descriptor instead.
func (*MsgRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{2}
}

func (x *MsgRes) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type MsgExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmApnsExt *EmApnsExtItem `protobuf:"bytes,1,opt,name=EmApnsExt,proto3" json:"EmApnsExt,omitempty"` // 消息推送配置 （目前只有这个）
}

func (x *MsgExt) Reset() {
	*x = MsgExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExt) ProtoMessage() {}

func (x *MsgExt) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgExt.ProtoReflect.Descriptor instead.
func (*MsgExt) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{3}
}

func (x *MsgExt) GetEmApnsExt() *EmApnsExtItem {
	if x != nil {
		return x.EmApnsExt
	}
	return nil
}

type EmApnsExtItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmAlertTitle string `protobuf:"bytes,1,opt,name=EmAlertTitle,proto3" json:"EmAlertTitle,omitempty"` // 推送标题
	EmAlertBody  string `protobuf:"bytes,2,opt,name=EmAlertBody,proto3" json:"EmAlertBody,omitempty"`   // 推送内容
	Data         string `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`                 // 拓展信息（客户端用于跳转的,json 字符串）
	IsPush       bool   `protobuf:"varint,4,opt,name=IsPush,proto3" json:"IsPush,omitempty"`            // 客户端后台运行时是否创建系统提示
}

func (x *EmApnsExtItem) Reset() {
	*x = EmApnsExtItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmApnsExtItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmApnsExtItem) ProtoMessage() {}

func (x *EmApnsExtItem) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmApnsExtItem.ProtoReflect.Descriptor instead.
func (*EmApnsExtItem) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{4}
}

func (x *EmApnsExtItem) GetEmAlertTitle() string {
	if x != nil {
		return x.EmAlertTitle
	}
	return ""
}

func (x *EmApnsExtItem) GetEmAlertBody() string {
	if x != nil {
		return x.EmAlertBody
	}
	return ""
}

func (x *EmApnsExtItem) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *EmApnsExtItem) GetIsPush() bool {
	if x != nil {
		return x.IsPush
	}
	return false
}

type SendPackMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      string   `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`                           // 发送方
	To        []string `protobuf:"bytes,2,rep,name=To,proto3" json:"To,omitempty"`                               // 接收方
	ChatType  ChatType `protobuf:"varint,3,opt,name=ChatType,proto3,enum=im.ChatType" json:"ChatType,omitempty"` // 会话类型
	MorderNo  string   `protobuf:"bytes,4,opt,name=MorderNo,proto3" json:"MorderNo,omitempty"`                   // 红包单号
	Content   string   `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`                     // 红包封面文案
	SendNick  string   `protobuf:"bytes,6,opt,name=SendNick,proto3" json:"SendNick,omitempty"`                   // 发送方昵称
	Status    string   `protobuf:"bytes,7,opt,name=Status,proto3" json:"Status,omitempty"`                       // 红包状态
	IsReceive string   `protobuf:"bytes,8,opt,name=IsReceive,proto3" json:"IsReceive,omitempty"`                 // 是否可领
	Ext       *MsgExt  `protobuf:"bytes,9,opt,name=Ext,proto3" json:"Ext,omitempty"`
}

func (x *SendPackMsgReq) Reset() {
	*x = SendPackMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPackMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPackMsgReq) ProtoMessage() {}

func (x *SendPackMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPackMsgReq.ProtoReflect.Descriptor instead.
func (*SendPackMsgReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{5}
}

func (x *SendPackMsgReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendPackMsgReq) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SendPackMsgReq) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_User
}

func (x *SendPackMsgReq) GetMorderNo() string {
	if x != nil {
		return x.MorderNo
	}
	return ""
}

func (x *SendPackMsgReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendPackMsgReq) GetSendNick() string {
	if x != nil {
		return x.SendNick
	}
	return ""
}

func (x *SendPackMsgReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendPackMsgReq) GetIsReceive() string {
	if x != nil {
		return x.IsReceive
	}
	return ""
}

func (x *SendPackMsgReq) GetExt() *MsgExt {
	if x != nil {
		return x.Ext
	}
	return nil
}

type SystemCmdMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From     string            `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`                                                                                         // 发送方
	To       []string          `protobuf:"bytes,2,rep,name=To,proto3" json:"To,omitempty"`                                                                                             // 接收方
	ChatType ChatType          `protobuf:"varint,3,opt,name=ChatType,proto3,enum=im.ChatType" json:"ChatType,omitempty"`                                                               // 会话类型
	Name     string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                                                                         // 命令名称
	Data     map[string]string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 命令拓展数据
}

func (x *SystemCmdMsgReq) Reset() {
	*x = SystemCmdMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCmdMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCmdMsgReq) ProtoMessage() {}

func (x *SystemCmdMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCmdMsgReq.ProtoReflect.Descriptor instead.
func (*SystemCmdMsgReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{6}
}

func (x *SystemCmdMsgReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SystemCmdMsgReq) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SystemCmdMsgReq) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_User
}

func (x *SystemCmdMsgReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemCmdMsgReq) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      string            `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`                                                                                                   // 发送方
	To        []string          `protobuf:"bytes,2,rep,name=To,proto3" json:"To,omitempty"`                                                                                                       // 接收方
	ChatType  ChatType          `protobuf:"varint,3,opt,name=ChatType,proto3,enum=im.ChatType" json:"ChatType,omitempty"`                                                                         // 会话类型
	EventType string            `protobuf:"bytes,4,opt,name=EventType,proto3" json:"EventType,omitempty"`                                                                                         //自定义消息类型
	EventData map[string]string `protobuf:"bytes,5,rep,name=EventData,proto3" json:"EventData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 自定义消息体,涉及复杂消息结构，可以通过pb或json序列化后再放里面
	Ext       *MsgExt           `protobuf:"bytes,6,opt,name=Ext,proto3" json:"Ext,omitempty"`                                                                                                     //扩展数据，用于系统push
}

func (x *SendMsgReq) Reset() {
	*x = SendMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgReq) ProtoMessage() {}

func (x *SendMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgReq.ProtoReflect.Descriptor instead.
func (*SendMsgReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{7}
}

func (x *SendMsgReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendMsgReq) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SendMsgReq) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_User
}

func (x *SendMsgReq) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *SendMsgReq) GetEventData() map[string]string {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *SendMsgReq) GetExt() *MsgExt {
	if x != nil {
		return x.Ext
	}
	return nil
}

type GetGroupInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId      []string `protobuf:"bytes,1,rep,name=MapId,proto3" json:"MapId,omitempty"`            // 群聊Id（第三方IM生成的）
	Uniqid     []string `protobuf:"bytes,2,rep,name=Uniqid,proto3" json:"Uniqid,omitempty"`          // 服务端唯一id（兼容查询）
	GetMembers int32    `protobuf:"varint,3,opt,name=GetMembers,proto3" json:"GetMembers,omitempty"` // 是否获取群成员 0否 1是
}

func (x *GetGroupInfoReq) Reset() {
	*x = GetGroupInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoReq) ProtoMessage() {}

func (x *GetGroupInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoReq.ProtoReflect.Descriptor instead.
func (*GetGroupInfoReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{8}
}

func (x *GetGroupInfoReq) GetMapId() []string {
	if x != nil {
		return x.MapId
	}
	return nil
}

func (x *GetGroupInfoReq) GetUniqid() []string {
	if x != nil {
		return x.Uniqid
	}
	return nil
}

func (x *GetGroupInfoReq) GetGetMembers() int32 {
	if x != nil {
		return x.GetMembers
	}
	return 0
}

type GetGroupInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfo map[string]*GroupInfo `protobuf:"bytes,1,rep,name=GroupInfo,proto3" json:"GroupInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetGroupInfoRes) Reset() {
	*x = GetGroupInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoRes) ProtoMessage() {}

func (x *GetGroupInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoRes.ProtoReflect.Descriptor instead.
func (*GetGroupInfoRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{9}
}

func (x *GetGroupInfoRes) GetGroupInfo() map[string]*GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uniqid      string           `protobuf:"bytes,1,opt,name=Uniqid,proto3" json:"Uniqid,omitempty"`            // 服务端唯一id
	MapId       string           `protobuf:"bytes,2,opt,name=MapId,proto3" json:"MapId,omitempty"`              // 群聊Id（第三方IM生成的）
	UserId      int64            `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`           // 群主Id
	Name        string           `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`                // 群名称
	Desc        string           `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`                // 群介绍
	Avatar      string           `protobuf:"bytes,6,opt,name=Avatar,proto3" json:"Avatar,omitempty"`            // 群头像
	Ctime       int64            `protobuf:"varint,7,opt,name=Ctime,proto3" json:"Ctime,omitempty"`             // 创建时间
	IsBan       int64            `protobuf:"varint,8,opt,name=IsBan,proto3" json:"IsBan,omitempty"`             // 是否禁言 0否 1是
	IsDel       int64            `protobuf:"varint,9,opt,name=IsDel,proto3" json:"IsDel,omitempty"`             // 是否删除 0否 1是
	IsBlock     int64            `protobuf:"varint,10,opt,name=IsBlock,proto3" json:"IsBlock,omitempty"`        // 管理员封禁 0否 1是
	IsClean     int64            `protobuf:"varint,11,opt,name=IsClean,proto3" json:"IsClean,omitempty"`        //  是否清理消息 0否 1是
	CleanTime   int64            `protobuf:"varint,12,opt,name=CleanTime,proto3" json:"CleanTime,omitempty"`    // 清理时间 单位：分钟
	GroupNotice *GroupNoticeInfo `protobuf:"bytes,13,opt,name=GroupNotice,proto3" json:"GroupNotice,omitempty"` // 群公告
	Type        int64            `protobuf:"varint,14,opt,name=Type,proto3" json:"Type,omitempty"`              // 群类型：频道： 0文字 1语音（废弃） 2应用，普通群聊 固定为 1
	IsChannel   bool             `protobuf:"varint,15,opt,name=IsChannel,proto3" json:"IsChannel,omitempty"`    // 是否频道
	// 频道特殊字段
	Property int64   `protobuf:"varint,16,opt,name=Property,proto3" json:"Property,omitempty"` // 0:持有数字货币，1:持有数字藏品,2:无限制
	Chain    int64   `protobuf:"varint,17,opt,name=Chain,proto3" json:"Chain,omitempty"`       // 所属链
	Coins    float32 `protobuf:"fixed32,18,opt,name=Coins,proto3" json:"Coins,omitempty"`      // 限制额度
	Sort     int64   `protobuf:"varint,19,opt,name=Sort,proto3" json:"Sort,omitempty"`         // 排序
	// int64 Frozen = 20; // 用户状态 0正常 1锁定 2冻结
	Dapp  *GroupInfoDapp `protobuf:"bytes,21,opt,name=Dapp,proto3" json:"Dapp,omitempty"`
	Id    int64          `protobuf:"varint,22,opt,name=Id,proto3" json:"Id,omitempty"`       // 频道id，数据库自增
	TbMid int64          `protobuf:"varint,23,opt,name=TbMid,proto3" json:"TbMid,omitempty"` // 关联部落id
	TbZid int64          `protobuf:"varint,24,opt,name=TbZid,proto3" json:"TbZid,omitempty"` // 关联分钟id
	// 普通群特殊字段
	Manages      []int64           `protobuf:"varint,27,rep,packed,name=Manages,proto3" json:"Manages,omitempty"` // 群管理员
	Members      *GroupInfoMembers `protobuf:"bytes,28,opt,name=Members,proto3" json:"Members,omitempty"`
	SetCacheTime *int64            `protobuf:"varint,29,opt,name=SetCacheTime,proto3,oneof" json:"SetCacheTime,omitempty"` // 缓存设置时间
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{10}
}

func (x *GroupInfo) GetUniqid() string {
	if x != nil {
		return x.Uniqid
	}
	return ""
}

func (x *GroupInfo) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *GroupInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GroupInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *GroupInfo) GetIsBan() int64 {
	if x != nil {
		return x.IsBan
	}
	return 0
}

func (x *GroupInfo) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *GroupInfo) GetIsBlock() int64 {
	if x != nil {
		return x.IsBlock
	}
	return 0
}

func (x *GroupInfo) GetIsClean() int64 {
	if x != nil {
		return x.IsClean
	}
	return 0
}

func (x *GroupInfo) GetCleanTime() int64 {
	if x != nil {
		return x.CleanTime
	}
	return 0
}

func (x *GroupInfo) GetGroupNotice() *GroupNoticeInfo {
	if x != nil {
		return x.GroupNotice
	}
	return nil
}

func (x *GroupInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GroupInfo) GetIsChannel() bool {
	if x != nil {
		return x.IsChannel
	}
	return false
}

func (x *GroupInfo) GetProperty() int64 {
	if x != nil {
		return x.Property
	}
	return 0
}

func (x *GroupInfo) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *GroupInfo) GetCoins() float32 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *GroupInfo) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GroupInfo) GetDapp() *GroupInfoDapp {
	if x != nil {
		return x.Dapp
	}
	return nil
}

func (x *GroupInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupInfo) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *GroupInfo) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *GroupInfo) GetManages() []int64 {
	if x != nil {
		return x.Manages
	}
	return nil
}

func (x *GroupInfo) GetMembers() *GroupInfoMembers {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *GroupInfo) GetSetCacheTime() int64 {
	if x != nil && x.SetCacheTime != nil {
		return *x.SetCacheTime
	}
	return 0
}

// 群dapp信息
type GroupInfoDapp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	DappIcon   string `protobuf:"bytes,2,opt,name=DappIcon,proto3" json:"DappIcon,omitempty"`
	DappName   string `protobuf:"bytes,3,opt,name=DappName,proto3" json:"DappName,omitempty"`
	DappUrl    string `protobuf:"bytes,4,opt,name=DappUrl,proto3" json:"DappUrl,omitempty"`
	IsDel      int64  `protobuf:"varint,5,opt,name=IsDel,proto3" json:"IsDel,omitempty"`
	DappDesc   string `protobuf:"bytes,6,opt,name=DappDesc,proto3" json:"DappDesc,omitempty"`
	UserId     int64  `protobuf:"varint,7,opt,name=UserId,proto3" json:"UserId,omitempty"`
	IsOfficial int64  `protobuf:"varint,8,opt,name=IsOfficial,proto3" json:"IsOfficial,omitempty"`
}

func (x *GroupInfoDapp) Reset() {
	*x = GroupInfoDapp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoDapp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoDapp) ProtoMessage() {}

func (x *GroupInfoDapp) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoDapp.ProtoReflect.Descriptor instead.
func (*GroupInfoDapp) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{11}
}

func (x *GroupInfoDapp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupInfoDapp) GetDappIcon() string {
	if x != nil {
		return x.DappIcon
	}
	return ""
}

func (x *GroupInfoDapp) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *GroupInfoDapp) GetDappUrl() string {
	if x != nil {
		return x.DappUrl
	}
	return ""
}

func (x *GroupInfoDapp) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *GroupInfoDapp) GetDappDesc() string {
	if x != nil {
		return x.DappDesc
	}
	return ""
}

func (x *GroupInfoDapp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GroupInfoDapp) GetIsOfficial() int64 {
	if x != nil {
		return x.IsOfficial
	}
	return 0
}

// 群公告
type GroupNoticeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *GroupNoticeInfo) Reset() {
	*x = GroupNoticeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupNoticeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupNoticeInfo) ProtoMessage() {}

func (x *GroupNoticeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupNoticeInfo.ProtoReflect.Descriptor instead.
func (*GroupNoticeInfo) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{12}
}

func (x *GroupNoticeInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupNoticeInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GroupInfoMembers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member map[int64]*GroupInfoMember `protobuf:"bytes,1,rep,name=Member,proto3" json:"Member,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GroupInfoMembers) Reset() {
	*x = GroupInfoMembers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoMembers) ProtoMessage() {}

func (x *GroupInfoMembers) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoMembers.ProtoReflect.Descriptor instead.
func (*GroupInfoMembers) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{13}
}

func (x *GroupInfoMembers) GetMember() map[int64]*GroupInfoMember {
	if x != nil {
		return x.Member
	}
	return nil
}

// 成员信息
type GroupInfoMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Ctime  int64  `protobuf:"varint,2,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	Status int32  `protobuf:"varint,3,opt,name=Status,proto3" json:"Status,omitempty"`
	Gnick  string `protobuf:"bytes,4,opt,name=Gnick,proto3" json:"Gnick,omitempty"`
	Avatar string `protobuf:"bytes,5,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
}

func (x *GroupInfoMember) Reset() {
	*x = GroupInfoMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoMember) ProtoMessage() {}

func (x *GroupInfoMember) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoMember.ProtoReflect.Descriptor instead.
func (*GroupInfoMember) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{14}
}

func (x *GroupInfoMember) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupInfoMember) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *GroupInfoMember) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GroupInfoMember) GetGnick() string {
	if x != nil {
		return x.Gnick
	}
	return ""
}

func (x *GroupInfoMember) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type UpdateGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64             `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Type   SetType           `protobuf:"varint,2,opt,name=Type,proto3,enum=im.SetType" json:"Type,omitempty"`
	MapId  string            `protobuf:"bytes,3,opt,name=MapId,proto3" json:"MapId,omitempty"`
	Data   *UpdateGroupField `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	Uniqid string            `protobuf:"bytes,5,opt,name=Uniqid,proto3" json:"Uniqid,omitempty"`
}

func (x *UpdateGroupReq) Reset() {
	*x = UpdateGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupReq) ProtoMessage() {}

func (x *UpdateGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupReq.ProtoReflect.Descriptor instead.
func (*UpdateGroupReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateGroupReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateGroupReq) GetType() SetType {
	if x != nil {
		return x.Type
	}
	return SetType_Create
}

func (x *UpdateGroupReq) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *UpdateGroupReq) GetData() *UpdateGroupField {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateGroupReq) GetUniqid() string {
	if x != nil {
		return x.Uniqid
	}
	return ""
}

// 群信息可修改字段
type UpdateGroupField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string  `protobuf:"bytes,1,opt,name=Name,proto3,oneof" json:"Name,omitempty"`            // 群名称
	Desc      *string  `protobuf:"bytes,2,opt,name=Desc,proto3,oneof" json:"Desc,omitempty"`            // 群介绍
	Avatar    *string  `protobuf:"bytes,3,opt,name=Avatar,proto3,oneof" json:"Avatar,omitempty"`        // 群头像
	IsBan     *int64   `protobuf:"varint,4,opt,name=IsBan,proto3,oneof" json:"IsBan,omitempty"`         // 是否禁言 0否 1是
	IsDel     *int64   `protobuf:"varint,5,opt,name=IsDel,proto3,oneof" json:"IsDel,omitempty"`         // 是否删除 0否 1是
	IsBlock   *int64   `protobuf:"varint,6,opt,name=IsBlock,proto3,oneof" json:"IsBlock,omitempty"`     // 管理员封禁 0否 1是
	IsClean   *int64   `protobuf:"varint,7,opt,name=IsClean,proto3,oneof" json:"IsClean,omitempty"`     // 是否清理消息 0否 1是
	CleanTime *int64   `protobuf:"varint,8,opt,name=CleanTime,proto3,oneof" json:"CleanTime,omitempty"` // 清理时间 单位：分钟
	Property  *int64   `protobuf:"varint,9,opt,name=Property,proto3,oneof" json:"Property,omitempty"`   // 0:持有数字货币，1:持有数字藏品,2:无限制
	Chain     *int64   `protobuf:"varint,10,opt,name=Chain,proto3,oneof" json:"Chain,omitempty"`        // 所属链
	Coins     *float32 `protobuf:"fixed32,11,opt,name=Coins,proto3,oneof" json:"Coins,omitempty"`       // 限制额度
	Sort      *int64   `protobuf:"varint,12,opt,name=Sort,proto3,oneof" json:"Sort,omitempty"`          // 排序
	// 创建时传
	IsChannel   bool    `protobuf:"varint,13,opt,name=IsChannel,proto3" json:"IsChannel,omitempty"`     // 是否频道
	TbMid       int64   `protobuf:"varint,14,opt,name=TbMid,proto3" json:"TbMid,omitempty"`             // 关联部落id
	TbZid       int64   `protobuf:"varint,15,opt,name=TbZid,proto3" json:"TbZid,omitempty"`             // 关联分钟id
	ChannelType int64   `protobuf:"varint,16,opt,name=ChannelType,proto3" json:"ChannelType,omitempty"` // 频道类型
	MTime       int64   `protobuf:"varint,17,opt,name=MTime,proto3" json:"MTime,omitempty"`             // 部落创建时间
	ZTime       int64   `protobuf:"varint,18,opt,name=ZTime,proto3" json:"ZTime,omitempty"`             // 分组创建时间
	Members     []int64 `protobuf:"varint,19,rep,packed,name=Members,proto3" json:"Members,omitempty"`
}

func (x *UpdateGroupField) Reset() {
	*x = UpdateGroupField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupField) ProtoMessage() {}

func (x *UpdateGroupField) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupField.ProtoReflect.Descriptor instead.
func (*UpdateGroupField) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateGroupField) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateGroupField) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *UpdateGroupField) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *UpdateGroupField) GetIsBan() int64 {
	if x != nil && x.IsBan != nil {
		return *x.IsBan
	}
	return 0
}

func (x *UpdateGroupField) GetIsDel() int64 {
	if x != nil && x.IsDel != nil {
		return *x.IsDel
	}
	return 0
}

func (x *UpdateGroupField) GetIsBlock() int64 {
	if x != nil && x.IsBlock != nil {
		return *x.IsBlock
	}
	return 0
}

func (x *UpdateGroupField) GetIsClean() int64 {
	if x != nil && x.IsClean != nil {
		return *x.IsClean
	}
	return 0
}

func (x *UpdateGroupField) GetCleanTime() int64 {
	if x != nil && x.CleanTime != nil {
		return *x.CleanTime
	}
	return 0
}

func (x *UpdateGroupField) GetProperty() int64 {
	if x != nil && x.Property != nil {
		return *x.Property
	}
	return 0
}

func (x *UpdateGroupField) GetChain() int64 {
	if x != nil && x.Chain != nil {
		return *x.Chain
	}
	return 0
}

func (x *UpdateGroupField) GetCoins() float32 {
	if x != nil && x.Coins != nil {
		return *x.Coins
	}
	return 0
}

func (x *UpdateGroupField) GetSort() int64 {
	if x != nil && x.Sort != nil {
		return *x.Sort
	}
	return 0
}

func (x *UpdateGroupField) GetIsChannel() bool {
	if x != nil {
		return x.IsChannel
	}
	return false
}

func (x *UpdateGroupField) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *UpdateGroupField) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *UpdateGroupField) GetChannelType() int64 {
	if x != nil {
		return x.ChannelType
	}
	return 0
}

func (x *UpdateGroupField) GetMTime() int64 {
	if x != nil {
		return x.MTime
	}
	return 0
}

func (x *UpdateGroupField) GetZTime() int64 {
	if x != nil {
		return x.ZTime
	}
	return 0
}

func (x *UpdateGroupField) GetMembers() []int64 {
	if x != nil {
		return x.Members
	}
	return nil
}

type CommonRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     int32  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`        // 0 ok , 1 error
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"` // 描述
}

func (x *CommonRes) Reset() {
	*x = CommonRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRes) ProtoMessage() {}

func (x *CommonRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRes.ProtoReflect.Descriptor instead.
func (*CommonRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{17}
}

func (x *CommonRes) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *CommonRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CommonRes `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Data   *GroupInfo `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *UpdateGroupRes) Reset() {
	*x = UpdateGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupRes) ProtoMessage() {}

func (x *UpdateGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupRes.ProtoReflect.Descriptor instead.
func (*UpdateGroupRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateGroupRes) GetResult() *CommonRes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpdateGroupRes) GetData() *GroupInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateGroupUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64               `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Users  []int64             `protobuf:"varint,2,rep,packed,name=Users,proto3" json:"Users,omitempty"`
	MapId  string              `protobuf:"bytes,3,opt,name=MapId,proto3" json:"MapId,omitempty"`
	Type   UpdateGroupUserType `protobuf:"varint,4,opt,name=Type,proto3,enum=im.UpdateGroupUserType" json:"Type,omitempty"`
	Uniqid string              `protobuf:"bytes,5,opt,name=Uniqid,proto3" json:"Uniqid,omitempty"`
}

func (x *UpdateGroupUserReq) Reset() {
	*x = UpdateGroupUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupUserReq) ProtoMessage() {}

func (x *UpdateGroupUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupUserReq.ProtoReflect.Descriptor instead.
func (*UpdateGroupUserReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateGroupUserReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateGroupUserReq) GetUsers() []int64 {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *UpdateGroupUserReq) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *UpdateGroupUserReq) GetType() UpdateGroupUserType {
	if x != nil {
		return x.Type
	}
	return UpdateGroupUserType_Add
}

func (x *UpdateGroupUserReq) GetUniqid() string {
	if x != nil {
		return x.Uniqid
	}
	return ""
}

type UpdateGroupUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CommonRes `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Data   *GroupInfo `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *UpdateGroupUserRes) Reset() {
	*x = UpdateGroupUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupUserRes) ProtoMessage() {}

func (x *UpdateGroupUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupUserRes.ProtoReflect.Descriptor instead.
func (*UpdateGroupUserRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateGroupUserRes) GetResult() *CommonRes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpdateGroupUserRes) GetData() *GroupInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateGroupManagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64   `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	MapId  string  `protobuf:"bytes,2,opt,name=MapId,proto3" json:"MapId,omitempty"`
	Users  []int64 `protobuf:"varint,3,rep,packed,name=Users,proto3" json:"Users,omitempty"`
	Type   SetType `protobuf:"varint,4,opt,name=Type,proto3,enum=im.SetType" json:"Type,omitempty"`
	Uniqid string  `protobuf:"bytes,5,opt,name=Uniqid,proto3" json:"Uniqid,omitempty"`
}

func (x *UpdateGroupManagesReq) Reset() {
	*x = UpdateGroupManagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupManagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupManagesReq) ProtoMessage() {}

func (x *UpdateGroupManagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupManagesReq.ProtoReflect.Descriptor instead.
func (*UpdateGroupManagesReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateGroupManagesReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateGroupManagesReq) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *UpdateGroupManagesReq) GetUsers() []int64 {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *UpdateGroupManagesReq) GetType() SetType {
	if x != nil {
		return x.Type
	}
	return SetType_Create
}

func (x *UpdateGroupManagesReq) GetUniqid() string {
	if x != nil {
		return x.Uniqid
	}
	return ""
}

type UpdateGroupManagesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CommonRes `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Data   *GroupInfo `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *UpdateGroupManagesRes) Reset() {
	*x = UpdateGroupManagesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupManagesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupManagesRes) ProtoMessage() {}

func (x *UpdateGroupManagesRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupManagesRes.ProtoReflect.Descriptor instead.
func (*UpdateGroupManagesRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateGroupManagesRes) GetResult() *CommonRes {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *UpdateGroupManagesRes) GetData() *GroupInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateGroupNoticeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	MapId   string `protobuf:"bytes,2,opt,name=MapId,proto3" json:"MapId,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	Uniqid  string `protobuf:"bytes,4,opt,name=Uniqid,proto3" json:"Uniqid,omitempty"`
}

func (x *UpdateGroupNoticeReq) Reset() {
	*x = UpdateGroupNoticeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupNoticeReq) ProtoMessage() {}

func (x *UpdateGroupNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupNoticeReq.ProtoReflect.Descriptor instead.
func (*UpdateGroupNoticeReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateGroupNoticeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateGroupNoticeReq) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *UpdateGroupNoticeReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateGroupNoticeReq) GetUniqid() string {
	if x != nil {
		return x.Uniqid
	}
	return ""
}

type UpdateGroupNoticeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *CommonRes `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *UpdateGroupNoticeRes) Reset() {
	*x = UpdateGroupNoticeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupNoticeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupNoticeRes) ProtoMessage() {}

func (x *UpdateGroupNoticeRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupNoticeRes.ProtoReflect.Descriptor instead.
func (*UpdateGroupNoticeRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateGroupNoticeRes) GetResult() *CommonRes {
	if x != nil {
		return x.Result
	}
	return nil
}

type SetBlocksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64   `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Type   SetType `protobuf:"varint,2,opt,name=Type,proto3,enum=im.SetType" json:"Type,omitempty"`
	Users  []int64 `protobuf:"varint,3,rep,packed,name=Users,proto3" json:"Users,omitempty"`
}

func (x *SetBlocksReq) Reset() {
	*x = SetBlocksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBlocksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBlocksReq) ProtoMessage() {}

func (x *SetBlocksReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBlocksReq.ProtoReflect.Descriptor instead.
func (*SetBlocksReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{25}
}

func (x *SetBlocksReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SetBlocksReq) GetType() SetType {
	if x != nil {
		return x.Type
	}
	return SetType_Create
}

func (x *SetBlocksReq) GetUsers() []int64 {
	if x != nil {
		return x.Users
	}
	return nil
}

type SetGroupDappReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId  string  `protobuf:"bytes,1,opt,name=MapId,proto3" json:"MapId,omitempty"`
	Uniqid string  `protobuf:"bytes,2,opt,name=Uniqid,proto3" json:"Uniqid,omitempty"`
	DappId int64   `protobuf:"varint,3,opt,name=DappId,proto3" json:"DappId,omitempty"`
	Type   SetType `protobuf:"varint,4,opt,name=Type,proto3,enum=im.SetType" json:"Type,omitempty"`
	UserId int64   `protobuf:"varint,5,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Icon   string  `protobuf:"bytes,6,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Name   string  `protobuf:"bytes,7,opt,name=Name,proto3" json:"Name,omitempty"`
	Desc   string  `protobuf:"bytes,8,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Url    string  `protobuf:"bytes,9,opt,name=Url,proto3" json:"Url,omitempty"`
}

func (x *SetGroupDappReq) Reset() {
	*x = SetGroupDappReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupDappReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupDappReq) ProtoMessage() {}

func (x *SetGroupDappReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupDappReq.ProtoReflect.Descriptor instead.
func (*SetGroupDappReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{26}
}

func (x *SetGroupDappReq) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *SetGroupDappReq) GetUniqid() string {
	if x != nil {
		return x.Uniqid
	}
	return ""
}

func (x *SetGroupDappReq) GetDappId() int64 {
	if x != nil {
		return x.DappId
	}
	return 0
}

func (x *SetGroupDappReq) GetType() SetType {
	if x != nil {
		return x.Type
	}
	return SetType_Create
}

func (x *SetGroupDappReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SetGroupDappReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SetGroupDappReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetGroupDappReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SetGroupDappReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetGroupDappReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId  string `protobuf:"bytes,1,opt,name=MapId,proto3" json:"MapId,omitempty"`
	Uniqid string `protobuf:"bytes,2,opt,name=Uniqid,proto3" json:"Uniqid,omitempty"`
}

func (x *GetGroupDappReq) Reset() {
	*x = GetGroupDappReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupDappReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupDappReq) ProtoMessage() {}

func (x *GetGroupDappReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupDappReq.ProtoReflect.Descriptor instead.
func (*GetGroupDappReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{27}
}

func (x *GetGroupDappReq) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *GetGroupDappReq) GetUniqid() string {
	if x != nil {
		return x.Uniqid
	}
	return ""
}

type GetGroupDappRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*GroupInfoDapp `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetGroupDappRes) Reset() {
	*x = GetGroupDappRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupDappRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupDappRes) ProtoMessage() {}

func (x *GetGroupDappRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupDappRes.ProtoReflect.Descriptor instead.
func (*GetGroupDappRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{28}
}

func (x *GetGroupDappRes) GetData() []*GroupInfoDapp {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUserOldGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetUserOldGroupReq) Reset() {
	*x = GetUserOldGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOldGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOldGroupReq) ProtoMessage() {}

func (x *GetUserOldGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOldGroupReq.ProtoReflect.Descriptor instead.
func (*GetUserOldGroupReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserOldGroupReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserOldGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*OldGroupItem `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *GetUserOldGroupRes) Reset() {
	*x = GetUserOldGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserOldGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserOldGroupRes) ProtoMessage() {}

func (x *GetUserOldGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserOldGroupRes.ProtoReflect.Descriptor instead.
func (*GetUserOldGroupRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{30}
}

func (x *GetUserOldGroupRes) GetData() []*OldGroupItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type OldGroupItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId string `protobuf:"bytes,1,opt,name=MapId,proto3" json:"MapId,omitempty"`
	TbMid int64  `protobuf:"varint,2,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
}

func (x *OldGroupItem) Reset() {
	*x = OldGroupItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OldGroupItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OldGroupItem) ProtoMessage() {}

func (x *OldGroupItem) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OldGroupItem.ProtoReflect.Descriptor instead.
func (*OldGroupItem) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{31}
}

func (x *OldGroupItem) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *OldGroupItem) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

type GetStatClubReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStatClubReq) Reset() {
	*x = GetStatClubReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatClubReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatClubReq) ProtoMessage() {}

func (x *GetStatClubReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatClubReq.ProtoReflect.Descriptor instead.
func (*GetStatClubReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{32}
}

type GetStatClubRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]string `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetStatClubRes) Reset() {
	*x = GetStatClubRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatClubRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatClubRes) ProtoMessage() {}

func (x *GetStatClubRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatClubRes.ProtoReflect.Descriptor instead.
func (*GetStatClubRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{33}
}

func (x *GetStatClubRes) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type PushStatClubReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TbMid  string `protobuf:"bytes,1,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *PushStatClubReq) Reset() {
	*x = PushStatClubReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushStatClubReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushStatClubReq) ProtoMessage() {}

func (x *PushStatClubReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushStatClubReq.ProtoReflect.Descriptor instead.
func (*PushStatClubReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{34}
}

func (x *PushStatClubReq) GetTbMid() string {
	if x != nil {
		return x.TbMid
	}
	return ""
}

func (x *PushStatClubReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type EmptyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyData) Reset() {
	*x = EmptyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyData) ProtoMessage() {}

func (x *EmptyData) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyData.ProtoReflect.Descriptor instead.
func (*EmptyData) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{35}
}

type SetNotificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64            `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`                            // 用户id
	ChatType ChatType         `protobuf:"varint,2,opt,name=ChatType,proto3,enum=im.ChatType" json:"ChatType,omitempty"`       // 会话类型
	ChatId   []string         `protobuf:"bytes,3,rep,name=ChatId,proto3" json:"ChatId,omitempty"`                             // 会话id
	SetType  NotificationType `protobuf:"varint,4,opt,name=SetType,proto3,enum=im.NotificationType" json:"SetType,omitempty"` // 设置类型
	IsClub   bool             `protobuf:"varint,5,opt,name=IsClub,proto3" json:"IsClub,omitempty"`
}

func (x *SetNotificationReq) Reset() {
	*x = SetNotificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNotificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNotificationReq) ProtoMessage() {}

func (x *SetNotificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNotificationReq.ProtoReflect.Descriptor instead.
func (*SetNotificationReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{36}
}

func (x *SetNotificationReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SetNotificationReq) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_User
}

func (x *SetNotificationReq) GetChatId() []string {
	if x != nil {
		return x.ChatId
	}
	return nil
}

func (x *SetNotificationReq) GetSetType() NotificationType {
	if x != nil {
		return x.SetType
	}
	return NotificationType_NONE
}

func (x *SetNotificationReq) GetIsClub() bool {
	if x != nil {
		return x.IsClub
	}
	return false
}

type SetNotificationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]bool `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *SetNotificationRes) Reset() {
	*x = SetNotificationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNotificationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNotificationRes) ProtoMessage() {}

func (x *SetNotificationRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNotificationRes.ProtoReflect.Descriptor instead.
func (*SetNotificationRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{37}
}

func (x *SetNotificationRes) GetData() map[string]bool {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetNotificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64    `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`                      // 用户id
	ChatType ChatType `protobuf:"varint,2,opt,name=ChatType,proto3,enum=im.ChatType" json:"ChatType,omitempty"` // 会话类型
	ChatId   []string `protobuf:"bytes,3,rep,name=ChatId,proto3" json:"ChatId,omitempty"`                       // 会话id
}

func (x *GetNotificationReq) Reset() {
	*x = GetNotificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationReq) ProtoMessage() {}

func (x *GetNotificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationReq.ProtoReflect.Descriptor instead.
func (*GetNotificationReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{38}
}

func (x *GetNotificationReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetNotificationReq) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_User
}

func (x *GetNotificationReq) GetChatId() []string {
	if x != nil {
		return x.ChatId
	}
	return nil
}

type GetNotificationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]bool `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetNotificationRes) Reset() {
	*x = GetNotificationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRes) ProtoMessage() {}

func (x *GetNotificationRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRes.ProtoReflect.Descriptor instead.
func (*GetNotificationRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{39}
}

func (x *GetNotificationRes) GetData() map[string]bool {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddUserOldGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	MapId  string `protobuf:"bytes,2,opt,name=MapId,proto3" json:"MapId,omitempty"`
	TbMid  int64  `protobuf:"varint,3,opt,name=TbMid,proto3" json:"TbMid,omitempty"`
}

func (x *AddUserOldGroupReq) Reset() {
	*x = AddUserOldGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserOldGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserOldGroupReq) ProtoMessage() {}

func (x *AddUserOldGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserOldGroupReq.ProtoReflect.Descriptor instead.
func (*AddUserOldGroupReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{40}
}

func (x *AddUserOldGroupReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddUserOldGroupReq) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *AddUserOldGroupReq) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

type GetUserChannelNoticeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64    `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	MapId  []string `protobuf:"bytes,2,rep,name=MapId,proto3" json:"MapId,omitempty"`
}

func (x *GetUserChannelNoticeReq) Reset() {
	*x = GetUserChannelNoticeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserChannelNoticeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChannelNoticeReq) ProtoMessage() {}

func (x *GetUserChannelNoticeReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChannelNoticeReq.ProtoReflect.Descriptor instead.
func (*GetUserChannelNoticeReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{41}
}

func (x *GetUserChannelNoticeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserChannelNoticeReq) GetMapId() []string {
	if x != nil {
		return x.MapId
	}
	return nil
}

type GetUserChannelNoticeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]int64 `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserChannelNoticeRes) Reset() {
	*x = GetUserChannelNoticeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserChannelNoticeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChannelNoticeRes) ProtoMessage() {}

func (x *GetUserChannelNoticeRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChannelNoticeRes.ProtoReflect.Descriptor instead.
func (*GetUserChannelNoticeRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{42}
}

func (x *GetUserChannelNoticeRes) GetData() map[string]int64 {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetNotificationDisturbingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Disturbing bool  `protobuf:"varint,2,opt,name=Disturbing,proto3" json:"Disturbing,omitempty"` // true消息免打扰 false取消消息免打扰
}

func (x *SetNotificationDisturbingReq) Reset() {
	*x = SetNotificationDisturbingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNotificationDisturbingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNotificationDisturbingReq) ProtoMessage() {}

func (x *SetNotificationDisturbingReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNotificationDisturbingReq.ProtoReflect.Descriptor instead.
func (*SetNotificationDisturbingReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{43}
}

func (x *SetNotificationDisturbingReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SetNotificationDisturbingReq) GetDisturbing() bool {
	if x != nil {
		return x.Disturbing
	}
	return false
}

type SetNotificationDisturbingRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetNotificationDisturbingRes) Reset() {
	*x = SetNotificationDisturbingRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNotificationDisturbingRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNotificationDisturbingRes) ProtoMessage() {}

func (x *SetNotificationDisturbingRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNotificationDisturbingRes.ProtoReflect.Descriptor instead.
func (*SetNotificationDisturbingRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{44}
}

type SetNotificationDisplayStyleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Style  int64 `protobuf:"varint,2,opt,name=Style,proto3" json:"Style,omitempty"` // 1 展示发送者及内容 0 不展示(默认)
}

func (x *SetNotificationDisplayStyleReq) Reset() {
	*x = SetNotificationDisplayStyleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNotificationDisplayStyleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNotificationDisplayStyleReq) ProtoMessage() {}

func (x *SetNotificationDisplayStyleReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNotificationDisplayStyleReq.ProtoReflect.Descriptor instead.
func (*SetNotificationDisplayStyleReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{45}
}

func (x *SetNotificationDisplayStyleReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SetNotificationDisplayStyleReq) GetStyle() int64 {
	if x != nil {
		return x.Style
	}
	return 0
}

type SetNotificationDisplayStyleRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetNotificationDisplayStyleRes) Reset() {
	*x = SetNotificationDisplayStyleRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNotificationDisplayStyleRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNotificationDisplayStyleRes) ProtoMessage() {}

func (x *SetNotificationDisplayStyleRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNotificationDisplayStyleRes.ProtoReflect.Descriptor instead.
func (*SetNotificationDisplayStyleRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{46}
}

type EmojiItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiId int64  `protobuf:"varint,1,opt,name=EmojiId,proto3" json:"EmojiId,omitempty"`
	Url     string `protobuf:"bytes,2,opt,name=Url,proto3" json:"Url,omitempty"`
	Width   string `protobuf:"bytes,3,opt,name=Width,proto3" json:"Width,omitempty"`
	Height  string `protobuf:"bytes,4,opt,name=Height,proto3" json:"Height,omitempty"`
	Size    string `protobuf:"bytes,5,opt,name=Size,proto3" json:"Size,omitempty"`
	Cover   string `protobuf:"bytes,6,opt,name=Cover,proto3" json:"Cover,omitempty"`
}

func (x *EmojiItem) Reset() {
	*x = EmojiItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmojiItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmojiItem) ProtoMessage() {}

func (x *EmojiItem) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmojiItem.ProtoReflect.Descriptor instead.
func (*EmojiItem) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{47}
}

func (x *EmojiItem) GetEmojiId() int64 {
	if x != nil {
		return x.EmojiId
	}
	return 0
}

func (x *EmojiItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *EmojiItem) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *EmojiItem) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *EmojiItem) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *EmojiItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

type UploadEmojiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Url    string `protobuf:"bytes,2,opt,name=Url,proto3" json:"Url,omitempty"`
	Width  string `protobuf:"bytes,3,opt,name=Width,proto3" json:"Width,omitempty"`
	Height string `protobuf:"bytes,4,opt,name=Height,proto3" json:"Height,omitempty"`
	Size   string `protobuf:"bytes,5,opt,name=Size,proto3" json:"Size,omitempty"`
	Cover  string `protobuf:"bytes,6,opt,name=Cover,proto3" json:"Cover,omitempty"`
}

func (x *UploadEmojiReq) Reset() {
	*x = UploadEmojiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadEmojiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadEmojiReq) ProtoMessage() {}

func (x *UploadEmojiReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadEmojiReq.ProtoReflect.Descriptor instead.
func (*UploadEmojiReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{48}
}

func (x *UploadEmojiReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UploadEmojiReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UploadEmojiReq) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *UploadEmojiReq) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *UploadEmojiReq) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *UploadEmojiReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

type UploadEmojiRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiId int64 `protobuf:"varint,1,opt,name=EmojiId,proto3" json:"EmojiId,omitempty"`
}

func (x *UploadEmojiRes) Reset() {
	*x = UploadEmojiRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadEmojiRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadEmojiRes) ProtoMessage() {}

func (x *UploadEmojiRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadEmojiRes.ProtoReflect.Descriptor instead.
func (*UploadEmojiRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{49}
}

func (x *UploadEmojiRes) GetEmojiId() int64 {
	if x != nil {
		return x.EmojiId
	}
	return 0
}

type CollectEmojiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiId      int64             `protobuf:"varint,1,opt,name=EmojiId,proto3" json:"EmojiId,omitempty"`                                     // 表情Id
	RelationId   int64             `protobuf:"varint,2,opt,name=RelationId,proto3" json:"RelationId,omitempty"`                               // 关联Id
	RelationType EmojiRelationType `protobuf:"varint,3,opt,name=RelationType,proto3,enum=im.EmojiRelationType" json:"RelationType,omitempty"` // 类型
	UserId       int64             `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId,omitempty"`                                       // 操作人
}

func (x *CollectEmojiReq) Reset() {
	*x = CollectEmojiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectEmojiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectEmojiReq) ProtoMessage() {}

func (x *CollectEmojiReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectEmojiReq.ProtoReflect.Descriptor instead.
func (*CollectEmojiReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{50}
}

func (x *CollectEmojiReq) GetEmojiId() int64 {
	if x != nil {
		return x.EmojiId
	}
	return 0
}

func (x *CollectEmojiReq) GetRelationId() int64 {
	if x != nil {
		return x.RelationId
	}
	return 0
}

func (x *CollectEmojiReq) GetRelationType() EmojiRelationType {
	if x != nil {
		return x.RelationType
	}
	return EmojiRelationType_UserEmoji
}

func (x *CollectEmojiReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DelEmojiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmojiId      []int64           `protobuf:"varint,1,rep,packed,name=EmojiId,proto3" json:"EmojiId,omitempty"`
	RelationId   int64             `protobuf:"varint,2,opt,name=RelationId,proto3" json:"RelationId,omitempty"`
	RelationType EmojiRelationType `protobuf:"varint,3,opt,name=RelationType,proto3,enum=im.EmojiRelationType" json:"RelationType,omitempty"`
}

func (x *DelEmojiReq) Reset() {
	*x = DelEmojiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelEmojiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelEmojiReq) ProtoMessage() {}

func (x *DelEmojiReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelEmojiReq.ProtoReflect.Descriptor instead.
func (*DelEmojiReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{51}
}

func (x *DelEmojiReq) GetEmojiId() []int64 {
	if x != nil {
		return x.EmojiId
	}
	return nil
}

func (x *DelEmojiReq) GetRelationId() int64 {
	if x != nil {
		return x.RelationId
	}
	return 0
}

func (x *DelEmojiReq) GetRelationType() EmojiRelationType {
	if x != nil {
		return x.RelationType
	}
	return EmojiRelationType_UserEmoji
}

type SortEmojiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MoveId     []int64 `protobuf:"varint,1,rep,packed,name=MoveId,proto3" json:"MoveId,omitempty"` // 要移动的列表
	TargetId   int64   `protobuf:"varint,2,opt,name=TargetId,proto3" json:"TargetId,omitempty"`    // 目标位置Id
	RelationId int64   `protobuf:"varint,3,opt,name=RelationId,proto3" json:"RelationId,omitempty"`
}

func (x *SortEmojiReq) Reset() {
	*x = SortEmojiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortEmojiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortEmojiReq) ProtoMessage() {}

func (x *SortEmojiReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortEmojiReq.ProtoReflect.Descriptor instead.
func (*SortEmojiReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{52}
}

func (x *SortEmojiReq) GetMoveId() []int64 {
	if x != nil {
		return x.MoveId
	}
	return nil
}

func (x *SortEmojiReq) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *SortEmojiReq) GetRelationId() int64 {
	if x != nil {
		return x.RelationId
	}
	return 0
}

type GetEmojiListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationId   int64             `protobuf:"varint,1,opt,name=RelationId,proto3" json:"RelationId,omitempty"`
	Page         int64             `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	RelationType EmojiRelationType `protobuf:"varint,3,opt,name=RelationType,proto3,enum=im.EmojiRelationType" json:"RelationType,omitempty"`
}

func (x *GetEmojiListReq) Reset() {
	*x = GetEmojiListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmojiListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmojiListReq) ProtoMessage() {}

func (x *GetEmojiListReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmojiListReq.ProtoReflect.Descriptor instead.
func (*GetEmojiListReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{53}
}

func (x *GetEmojiListReq) GetRelationId() int64 {
	if x != nil {
		return x.RelationId
	}
	return 0
}

func (x *GetEmojiListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetEmojiListReq) GetRelationType() EmojiRelationType {
	if x != nil {
		return x.RelationType
	}
	return EmojiRelationType_UserEmoji
}

type GetEmojiListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*EmojiItem `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	Page  int64        `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	Count int64        `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *GetEmojiListRes) Reset() {
	*x = GetEmojiListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmojiListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmojiListRes) ProtoMessage() {}

func (x *GetEmojiListRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmojiListRes.ProtoReflect.Descriptor instead.
func (*GetEmojiListRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{54}
}

func (x *GetEmojiListRes) GetList() []*EmojiItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetEmojiListRes) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetEmojiListRes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type MsgRecallReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId    string   `protobuf:"bytes,1,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	From     string   `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	To       string   `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
	ChatType ChatType `protobuf:"varint,4,opt,name=ChatType,proto3,enum=im.ChatType" json:"ChatType,omitempty"`
}

func (x *MsgRecallReq) Reset() {
	*x = MsgRecallReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRecallReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRecallReq) ProtoMessage() {}

func (x *MsgRecallReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRecallReq.ProtoReflect.Descriptor instead.
func (*MsgRecallReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{55}
}

func (x *MsgRecallReq) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *MsgRecallReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *MsgRecallReq) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *MsgRecallReq) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_User
}

var File_define_im_v1_proto protoreflect.FileDescriptor

var file_define_im_v1_proto_rawDesc = []byte{
	0x0a, 0x12, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2f, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x69, 0x6d, 0x22, 0x25, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x4d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x22, 0x6b,
	0x0a, 0x06, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x39, 0x0a, 0x06, 0x4d,
	0x73, 0x67, 0x45, 0x78, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x45, 0x6d, 0x41, 0x70, 0x6e, 0x73, 0x45,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x2e, 0x45, 0x6d,
	0x41, 0x70, 0x6e, 0x73, 0x45, 0x78, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x45, 0x6d, 0x41,
	0x70, 0x6e, 0x73, 0x45, 0x78, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x45, 0x6d, 0x41, 0x70, 0x6e,
	0x73, 0x45, 0x78, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x45, 0x6d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x45, 0x6d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x45, 0x6d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x50, 0x75, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x50, 0x75, 0x73, 0x68, 0x22, 0x84, 0x02, 0x0a, 0x0e, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x54,
	0x6f, 0x12, 0x28, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x73, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x03, 0x45, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x74, 0x52, 0x03, 0x45, 0x78,
	0x74, 0x22, 0xdf, 0x01, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6d, 0x64, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x28, 0x0a, 0x08, 0x43, 0x68, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x69, 0x6d,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x43, 0x6d, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x91, 0x02, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x28, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b,
	0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x71, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x03, 0x45,
	0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x73,
	0x67, 0x45, 0x78, 0x74, 0x52, 0x03, 0x45, 0x78, 0x74, 0x1a, 0x3c, 0x0a, 0x0e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x4b,
	0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd1, 0x05, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x69,
	0x71, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x49,
	0x73, 0x44, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x44, 0x65,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x49,
	0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x49, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x49, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x43,
	0x6f, 0x69, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x70, 0x70,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x70, 0x70, 0x52, 0x04, 0x44, 0x61, 0x70, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x07, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0c, 0x53,
	0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x53, 0x65, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xdb, 0x01, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x70,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x44, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x61, 0x70,
	0x70, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44, 0x61, 0x70, 0x70,
	0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x70,
	0x70, 0x44, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x70,
	0x70, 0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x49, 0x73, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x49, 0x73, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x22, 0x3b, 0x0a,
	0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x10, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x38, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x4e, 0x0a, 0x0b, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7d, 0x0a, 0x0f, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x47, 0x6e,
	0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x47, 0x6e, 0x69, 0x63, 0x6b,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xa1, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0b, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6d, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69, 0x64, 0x22, 0x9b, 0x05, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x17, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x03, 0x52, 0x05, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x49,
	0x73, 0x44, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x05, 0x49, 0x73,
	0x44, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x49, 0x73, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x07, 0x49, 0x73, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x49, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x06, 0x52, 0x07, 0x49, 0x73, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x08, 0x52, 0x08, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x02, 0x48, 0x0a, 0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0b, 0x52, 0x04,
	0x53, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x62, 0x5a, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x5a, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x4d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x5a, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x5a, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4e, 0x61,
	0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x44, 0x65, 0x73, 0x63, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x49, 0x73, 0x42, 0x61, 0x6e,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x49,
	0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x49, 0x73, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x53, 0x6f, 0x72, 0x74, 0x22, 0x37, 0x0a, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x5a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x9d, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x69, 0x6d, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69, 0x64, 0x22,
	0x5e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x94, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x69, 0x6d,
	0x2e, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x6e, 0x69, 0x71, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x76, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x69,
	0x71, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69,
	0x64, 0x22, 0x3d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x5d, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22,
	0xde, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x69,
	0x71, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x44, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65,
	0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c,
	0x22, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x70, 0x70,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x69,
	0x71, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69,
	0x64, 0x22, 0x38, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x61, 0x70, 0x70, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x69, 0x6d, 0x2e, 0x4f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a, 0x0c, 0x4f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x62, 0x4d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69,
	0x64, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x75, 0x62,
	0x52, 0x65, 0x71, 0x22, 0x7b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6c,
	0x75, 0x62, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x3f, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x75, 0x62,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x0b, 0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb6,
	0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x43,
	0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x69, 0x6d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x73, 0x43, 0x6c, 0x75, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x49, 0x73, 0x43, 0x6c, 0x75, 0x62, 0x22, 0x83, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x34,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69,
	0x6d, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6e, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x43,
	0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x69, 0x6d, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x43, 0x68, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x22, 0x83, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x58, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6c,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64, 0x22, 0x47, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x56, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x67, 0x22, 0x1e,
	0x0a, 0x1c, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x69, 0x73, 0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x22, 0x4e,
	0x0a, 0x1e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x22, 0x20,
	0x0a, 0x1e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x22, 0x8f, 0x01, 0x0a, 0x09, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x22, 0x92, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45,
	0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x69, 0x6d, 0x2e, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39,
	0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x69, 0x6d, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x62, 0x0a, 0x0c, 0x53, 0x6f, 0x72,
	0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x6f, 0x76,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x4d, 0x6f, 0x76, 0x65, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x80, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x69, 0x6d,
	0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x72, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x28, 0x0a, 0x08, 0x43, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x69,
	0x6d, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x2a, 0x2d, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x10, 0x02, 0x2a, 0x2a, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x65, 0x6c, 0x10, 0x03, 0x2a,
	0x53, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x6e, 0x46, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x64, 0x69, 0x74, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x10, 0x05, 0x2a, 0x25, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x2a, 0x31, 0x0a, 0x11, 0x45,
	0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x6c, 0x75, 0x62, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x10, 0x01, 0x32, 0xdd,
	0x0c, 0x0a, 0x08, 0x49, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x08, 0x67,
	0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x0b, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x69,
	0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6d, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x13, 0x2e, 0x69,
	0x6d, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6d, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x0a, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x07, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x35,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x2e,
	0x69, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x69, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x73, 0x12, 0x19,
	0x2e, 0x69, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x69, 0x6d, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x69, 0x6d, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x69, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2c, 0x0a,
	0x09, 0x53, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x10, 0x2e, 0x69, 0x6d, 0x2e,
	0x53, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x69,
	0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x53,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x70, 0x70, 0x12, 0x13, 0x2e, 0x69, 0x6d,
	0x2e, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x70, 0x70, 0x52, 0x65, 0x71,
	0x1a, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12,
	0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x70, 0x70, 0x12,
	0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x61, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x61, 0x70, 0x70, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x69,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x12, 0x2e, 0x69, 0x6d,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x1a,
	0x12, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x43, 0x6c, 0x75, 0x62,
	0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x43,
	0x6c, 0x75, 0x62, 0x12, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x41, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x69, 0x6d, 0x2e,
	0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e,
	0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x16, 0x2e, 0x69, 0x6d, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6c, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x1b, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x69,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x19, 0x53, 0x65, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74,
	0x75, 0x72, 0x62, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x75,
	0x72, 0x62, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73,
	0x74, 0x75, 0x72, 0x62, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x12, 0x65, 0x0a, 0x1b, 0x53, 0x65,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x69, 0x6d, 0x2e, 0x53,
	0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x69, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x12, 0x35, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x12, 0x12, 0x2e, 0x69, 0x6d, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6d, 0x6f, 0x6a,
	0x69, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x69, 0x6d, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e,
	0x69, 0x6d, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x08,
	0x44, 0x65, 0x6c, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x44, 0x65,
	0x6c, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x10, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x45,
	0x6d, 0x6f, 0x6a, 0x69, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x69, 0x6d,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x09, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x10, 0x2e,
	0x69, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x1a,
	0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x42, 0x05,
	0x5a, 0x03, 0x2f, 0x69, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_define_im_v1_proto_rawDescOnce sync.Once
	file_define_im_v1_proto_rawDescData = file_define_im_v1_proto_rawDesc
)

func file_define_im_v1_proto_rawDescGZIP() []byte {
	file_define_im_v1_proto_rawDescOnce.Do(func() {
		file_define_im_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_define_im_v1_proto_rawDescData)
	})
	return file_define_im_v1_proto_rawDescData
}

var file_define_im_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_define_im_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 65)
var file_define_im_v1_proto_goTypes = []interface{}{
	(ChatType)(0),                          // 0: im.ChatType
	(SetType)(0),                           // 1: im.SetType
	(UpdateGroupUserType)(0),               // 2: im.UpdateGroupUserType
	(NotificationType)(0),                  // 3: im.NotificationType
	(EmojiRelationType)(0),                 // 4: im.EmojiRelationType
	(*GetTokenReq)(nil),                    // 5: im.GetTokenReq
	(*GetTokenRes)(nil),                    // 6: im.GetTokenRes
	(*MsgRes)(nil),                         // 7: im.MsgRes
	(*MsgExt)(nil),                         // 8: im.MsgExt
	(*EmApnsExtItem)(nil),                  // 9: im.EmApnsExtItem
	(*SendPackMsgReq)(nil),                 // 10: im.SendPackMsgReq
	(*SystemCmdMsgReq)(nil),                // 11: im.SystemCmdMsgReq
	(*SendMsgReq)(nil),                     // 12: im.SendMsgReq
	(*GetGroupInfoReq)(nil),                // 13: im.GetGroupInfoReq
	(*GetGroupInfoRes)(nil),                // 14: im.GetGroupInfoRes
	(*GroupInfo)(nil),                      // 15: im.GroupInfo
	(*GroupInfoDapp)(nil),                  // 16: im.GroupInfoDapp
	(*GroupNoticeInfo)(nil),                // 17: im.GroupNoticeInfo
	(*GroupInfoMembers)(nil),               // 18: im.GroupInfoMembers
	(*GroupInfoMember)(nil),                // 19: im.GroupInfoMember
	(*UpdateGroupReq)(nil),                 // 20: im.UpdateGroupReq
	(*UpdateGroupField)(nil),               // 21: im.UpdateGroupField
	(*CommonRes)(nil),                      // 22: im.CommonRes
	(*UpdateGroupRes)(nil),                 // 23: im.UpdateGroupRes
	(*UpdateGroupUserReq)(nil),             // 24: im.UpdateGroupUserReq
	(*UpdateGroupUserRes)(nil),             // 25: im.UpdateGroupUserRes
	(*UpdateGroupManagesReq)(nil),          // 26: im.UpdateGroupManagesReq
	(*UpdateGroupManagesRes)(nil),          // 27: im.UpdateGroupManagesRes
	(*UpdateGroupNoticeReq)(nil),           // 28: im.UpdateGroupNoticeReq
	(*UpdateGroupNoticeRes)(nil),           // 29: im.UpdateGroupNoticeRes
	(*SetBlocksReq)(nil),                   // 30: im.SetBlocksReq
	(*SetGroupDappReq)(nil),                // 31: im.SetGroupDappReq
	(*GetGroupDappReq)(nil),                // 32: im.GetGroupDappReq
	(*GetGroupDappRes)(nil),                // 33: im.GetGroupDappRes
	(*GetUserOldGroupReq)(nil),             // 34: im.GetUserOldGroupReq
	(*GetUserOldGroupRes)(nil),             // 35: im.GetUserOldGroupRes
	(*OldGroupItem)(nil),                   // 36: im.OldGroupItem
	(*GetStatClubReq)(nil),                 // 37: im.GetStatClubReq
	(*GetStatClubRes)(nil),                 // 38: im.GetStatClubRes
	(*PushStatClubReq)(nil),                // 39: im.PushStatClubReq
	(*EmptyData)(nil),                      // 40: im.EmptyData
	(*SetNotificationReq)(nil),             // 41: im.SetNotificationReq
	(*SetNotificationRes)(nil),             // 42: im.SetNotificationRes
	(*GetNotificationReq)(nil),             // 43: im.GetNotificationReq
	(*GetNotificationRes)(nil),             // 44: im.GetNotificationRes
	(*AddUserOldGroupReq)(nil),             // 45: im.AddUserOldGroupReq
	(*GetUserChannelNoticeReq)(nil),        // 46: im.GetUserChannelNoticeReq
	(*GetUserChannelNoticeRes)(nil),        // 47: im.GetUserChannelNoticeRes
	(*SetNotificationDisturbingReq)(nil),   // 48: im.SetNotificationDisturbingReq
	(*SetNotificationDisturbingRes)(nil),   // 49: im.SetNotificationDisturbingRes
	(*SetNotificationDisplayStyleReq)(nil), // 50: im.SetNotificationDisplayStyleReq
	(*SetNotificationDisplayStyleRes)(nil), // 51: im.SetNotificationDisplayStyleRes
	(*EmojiItem)(nil),                      // 52: im.EmojiItem
	(*UploadEmojiReq)(nil),                 // 53: im.UploadEmojiReq
	(*UploadEmojiRes)(nil),                 // 54: im.UploadEmojiRes
	(*CollectEmojiReq)(nil),                // 55: im.CollectEmojiReq
	(*DelEmojiReq)(nil),                    // 56: im.DelEmojiReq
	(*SortEmojiReq)(nil),                   // 57: im.SortEmojiReq
	(*GetEmojiListReq)(nil),                // 58: im.GetEmojiListReq
	(*GetEmojiListRes)(nil),                // 59: im.GetEmojiListRes
	(*MsgRecallReq)(nil),                   // 60: im.MsgRecallReq
	nil,                                    // 61: im.MsgRes.DataEntry
	nil,                                    // 62: im.SystemCmdMsgReq.DataEntry
	nil,                                    // 63: im.SendMsgReq.EventDataEntry
	nil,                                    // 64: im.GetGroupInfoRes.GroupInfoEntry
	nil,                                    // 65: im.GroupInfoMembers.MemberEntry
	nil,                                    // 66: im.GetStatClubRes.DataEntry
	nil,                                    // 67: im.SetNotificationRes.DataEntry
	nil,                                    // 68: im.GetNotificationRes.DataEntry
	nil,                                    // 69: im.GetUserChannelNoticeRes.DataEntry
}
var file_define_im_v1_proto_depIdxs = []int32{
	61, // 0: im.MsgRes.Data:type_name -> im.MsgRes.DataEntry
	9,  // 1: im.MsgExt.EmApnsExt:type_name -> im.EmApnsExtItem
	0,  // 2: im.SendPackMsgReq.ChatType:type_name -> im.ChatType
	8,  // 3: im.SendPackMsgReq.Ext:type_name -> im.MsgExt
	0,  // 4: im.SystemCmdMsgReq.ChatType:type_name -> im.ChatType
	62, // 5: im.SystemCmdMsgReq.data:type_name -> im.SystemCmdMsgReq.DataEntry
	0,  // 6: im.SendMsgReq.ChatType:type_name -> im.ChatType
	63, // 7: im.SendMsgReq.EventData:type_name -> im.SendMsgReq.EventDataEntry
	8,  // 8: im.SendMsgReq.Ext:type_name -> im.MsgExt
	64, // 9: im.GetGroupInfoRes.GroupInfo:type_name -> im.GetGroupInfoRes.GroupInfoEntry
	17, // 10: im.GroupInfo.GroupNotice:type_name -> im.GroupNoticeInfo
	16, // 11: im.GroupInfo.Dapp:type_name -> im.GroupInfoDapp
	18, // 12: im.GroupInfo.Members:type_name -> im.GroupInfoMembers
	65, // 13: im.GroupInfoMembers.Member:type_name -> im.GroupInfoMembers.MemberEntry
	1,  // 14: im.UpdateGroupReq.Type:type_name -> im.SetType
	21, // 15: im.UpdateGroupReq.Data:type_name -> im.UpdateGroupField
	22, // 16: im.UpdateGroupRes.Result:type_name -> im.CommonRes
	15, // 17: im.UpdateGroupRes.Data:type_name -> im.GroupInfo
	2,  // 18: im.UpdateGroupUserReq.Type:type_name -> im.UpdateGroupUserType
	22, // 19: im.UpdateGroupUserRes.Result:type_name -> im.CommonRes
	15, // 20: im.UpdateGroupUserRes.Data:type_name -> im.GroupInfo
	1,  // 21: im.UpdateGroupManagesReq.Type:type_name -> im.SetType
	22, // 22: im.UpdateGroupManagesRes.Result:type_name -> im.CommonRes
	15, // 23: im.UpdateGroupManagesRes.Data:type_name -> im.GroupInfo
	22, // 24: im.UpdateGroupNoticeRes.Result:type_name -> im.CommonRes
	1,  // 25: im.SetBlocksReq.Type:type_name -> im.SetType
	1,  // 26: im.SetGroupDappReq.Type:type_name -> im.SetType
	16, // 27: im.GetGroupDappRes.Data:type_name -> im.GroupInfoDapp
	36, // 28: im.GetUserOldGroupRes.Data:type_name -> im.OldGroupItem
	66, // 29: im.GetStatClubRes.Data:type_name -> im.GetStatClubRes.DataEntry
	0,  // 30: im.SetNotificationReq.ChatType:type_name -> im.ChatType
	3,  // 31: im.SetNotificationReq.SetType:type_name -> im.NotificationType
	67, // 32: im.SetNotificationRes.Data:type_name -> im.SetNotificationRes.DataEntry
	0,  // 33: im.GetNotificationReq.ChatType:type_name -> im.ChatType
	68, // 34: im.GetNotificationRes.Data:type_name -> im.GetNotificationRes.DataEntry
	69, // 35: im.GetUserChannelNoticeRes.Data:type_name -> im.GetUserChannelNoticeRes.DataEntry
	4,  // 36: im.CollectEmojiReq.RelationType:type_name -> im.EmojiRelationType
	4,  // 37: im.DelEmojiReq.RelationType:type_name -> im.EmojiRelationType
	4,  // 38: im.GetEmojiListReq.RelationType:type_name -> im.EmojiRelationType
	52, // 39: im.GetEmojiListRes.List:type_name -> im.EmojiItem
	0,  // 40: im.MsgRecallReq.ChatType:type_name -> im.ChatType
	15, // 41: im.GetGroupInfoRes.GroupInfoEntry.value:type_name -> im.GroupInfo
	19, // 42: im.GroupInfoMembers.MemberEntry.value:type_name -> im.GroupInfoMember
	5,  // 43: im.ImServer.getToken:input_type -> im.GetTokenReq
	10, // 44: im.ImServer.SendPackMsg:input_type -> im.SendPackMsgReq
	11, // 45: im.ImServer.SendSystemCmdMsg:input_type -> im.SystemCmdMsgReq
	12, // 46: im.ImServer.SendMsg:input_type -> im.SendMsgReq
	13, // 47: im.ImServer.GetGroupInfo:input_type -> im.GetGroupInfoReq
	20, // 48: im.ImServer.UpdateGroup:input_type -> im.UpdateGroupReq
	24, // 49: im.ImServer.UpdateGroupUser:input_type -> im.UpdateGroupUserReq
	26, // 50: im.ImServer.UpdateGroupManages:input_type -> im.UpdateGroupManagesReq
	28, // 51: im.ImServer.UpdateGroupNotice:input_type -> im.UpdateGroupNoticeReq
	30, // 52: im.ImServer.SetBlocks:input_type -> im.SetBlocksReq
	31, // 53: im.ImServer.SetGroupDapp:input_type -> im.SetGroupDappReq
	32, // 54: im.ImServer.GetGroupDapp:input_type -> im.GetGroupDappReq
	34, // 55: im.ImServer.GetUserOldGroup:input_type -> im.GetUserOldGroupReq
	37, // 56: im.ImServer.GetStatClub:input_type -> im.GetStatClubReq
	39, // 57: im.ImServer.PushStatClub:input_type -> im.PushStatClubReq
	41, // 58: im.ImServer.SetNotification:input_type -> im.SetNotificationReq
	43, // 59: im.ImServer.GetNotification:input_type -> im.GetNotificationReq
	45, // 60: im.ImServer.AddUserOldGroup:input_type -> im.AddUserOldGroupReq
	46, // 61: im.ImServer.GetUserChannelNotice:input_type -> im.GetUserChannelNoticeReq
	48, // 62: im.ImServer.SetNotificationDisturbing:input_type -> im.SetNotificationDisturbingReq
	50, // 63: im.ImServer.SetNotificationDisplayStyle:input_type -> im.SetNotificationDisplayStyleReq
	53, // 64: im.ImServer.UploadEmoji:input_type -> im.UploadEmojiReq
	55, // 65: im.ImServer.CollectEmoji:input_type -> im.CollectEmojiReq
	56, // 66: im.ImServer.DelEmoji:input_type -> im.DelEmojiReq
	57, // 67: im.ImServer.SortEmoji:input_type -> im.SortEmojiReq
	58, // 68: im.ImServer.GetEmojiList:input_type -> im.GetEmojiListReq
	60, // 69: im.ImServer.MsgRecall:input_type -> im.MsgRecallReq
	6,  // 70: im.ImServer.getToken:output_type -> im.GetTokenRes
	7,  // 71: im.ImServer.SendPackMsg:output_type -> im.MsgRes
	7,  // 72: im.ImServer.SendSystemCmdMsg:output_type -> im.MsgRes
	7,  // 73: im.ImServer.SendMsg:output_type -> im.MsgRes
	14, // 74: im.ImServer.GetGroupInfo:output_type -> im.GetGroupInfoRes
	23, // 75: im.ImServer.UpdateGroup:output_type -> im.UpdateGroupRes
	25, // 76: im.ImServer.UpdateGroupUser:output_type -> im.UpdateGroupUserRes
	27, // 77: im.ImServer.UpdateGroupManages:output_type -> im.UpdateGroupManagesRes
	29, // 78: im.ImServer.UpdateGroupNotice:output_type -> im.UpdateGroupNoticeRes
	22, // 79: im.ImServer.SetBlocks:output_type -> im.CommonRes
	22, // 80: im.ImServer.SetGroupDapp:output_type -> im.CommonRes
	33, // 81: im.ImServer.GetGroupDapp:output_type -> im.GetGroupDappRes
	35, // 82: im.ImServer.GetUserOldGroup:output_type -> im.GetUserOldGroupRes
	38, // 83: im.ImServer.GetStatClub:output_type -> im.GetStatClubRes
	40, // 84: im.ImServer.PushStatClub:output_type -> im.EmptyData
	42, // 85: im.ImServer.SetNotification:output_type -> im.SetNotificationRes
	44, // 86: im.ImServer.GetNotification:output_type -> im.GetNotificationRes
	22, // 87: im.ImServer.AddUserOldGroup:output_type -> im.CommonRes
	47, // 88: im.ImServer.GetUserChannelNotice:output_type -> im.GetUserChannelNoticeRes
	49, // 89: im.ImServer.SetNotificationDisturbing:output_type -> im.SetNotificationDisturbingRes
	51, // 90: im.ImServer.SetNotificationDisplayStyle:output_type -> im.SetNotificationDisplayStyleRes
	54, // 91: im.ImServer.UploadEmoji:output_type -> im.UploadEmojiRes
	40, // 92: im.ImServer.CollectEmoji:output_type -> im.EmptyData
	40, // 93: im.ImServer.DelEmoji:output_type -> im.EmptyData
	40, // 94: im.ImServer.SortEmoji:output_type -> im.EmptyData
	59, // 95: im.ImServer.GetEmojiList:output_type -> im.GetEmojiListRes
	40, // 96: im.ImServer.MsgRecall:output_type -> im.EmptyData
	70, // [70:97] is the sub-list for method output_type
	43, // [43:70] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_define_im_v1_proto_init() }
func file_define_im_v1_proto_init() {
	if File_define_im_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_define_im_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmApnsExtItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPackMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCmdMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoDapp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupNoticeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoMembers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupManagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupManagesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupNoticeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupNoticeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBlocksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGroupDappReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupDappReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupDappRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOldGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserOldGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OldGroupItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatClubReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatClubRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushStatClubReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNotificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNotificationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserOldGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserChannelNoticeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserChannelNoticeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNotificationDisturbingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNotificationDisturbingRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNotificationDisplayStyleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNotificationDisplayStyleRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmojiItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadEmojiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadEmojiRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectEmojiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelEmojiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortEmojiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmojiListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmojiListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRecallReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_define_im_v1_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_define_im_v1_proto_msgTypes[16].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_define_im_v1_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   65,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_define_im_v1_proto_goTypes,
		DependencyIndexes: file_define_im_v1_proto_depIdxs,
		EnumInfos:         file_define_im_v1_proto_enumTypes,
		MessageInfos:      file_define_im_v1_proto_msgTypes,
	}.Build()
	File_define_im_v1_proto = out.File
	file_define_im_v1_proto_rawDesc = nil
	file_define_im_v1_proto_goTypes = nil
	file_define_im_v1_proto_depIdxs = nil
}
