// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.19.4
// source: define/im.v1.proto

package im

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatType int32

const (
	ChatType_User  ChatType = 0
	ChatType_Group ChatType = 1
)

// Enum value maps for ChatType.
var (
	ChatType_name = map[int32]string{
		0: "User",
		1: "Group",
	}
	ChatType_value = map[string]int32{
		"User":  0,
		"Group": 1,
	}
)

func (x ChatType) Enum() *ChatType {
	p := new(ChatType)
	*p = x
	return p
}

func (x ChatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatType) Descriptor() protoreflect.EnumDescriptor {
	return file_define_im_v1_proto_enumTypes[0].Descriptor()
}

func (ChatType) Type() protoreflect.EnumType {
	return &file_define_im_v1_proto_enumTypes[0]
}

func (x ChatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatType.Descriptor instead.
func (ChatType) EnumDescriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{0}
}

type GetTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetTokenReq) Reset() {
	*x = GetTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenReq) ProtoMessage() {}

func (x *GetTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenReq.ProtoReflect.Descriptor instead.
func (*GetTokenReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{0}
}

func (x *GetTokenReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetTokenRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	ExpiresIn   int64  `protobuf:"varint,2,opt,name=ExpiresIn,proto3" json:"ExpiresIn,omitempty"`
}

func (x *GetTokenRes) Reset() {
	*x = GetTokenRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenRes) ProtoMessage() {}

func (x *GetTokenRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenRes.ProtoReflect.Descriptor instead.
func (*GetTokenRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{1}
}

func (x *GetTokenRes) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetTokenRes) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type MsgRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]string `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 消息返回
}

func (x *MsgRes) Reset() {
	*x = MsgRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRes) ProtoMessage() {}

func (x *MsgRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRes.ProtoReflect.Descriptor instead.
func (*MsgRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{2}
}

func (x *MsgRes) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type MsgExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmApnsExt *EmApnsExtItem `protobuf:"bytes,1,opt,name=EmApnsExt,proto3" json:"EmApnsExt,omitempty"` // 消息推送配置 （目前只有这个）
}

func (x *MsgExt) Reset() {
	*x = MsgExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExt) ProtoMessage() {}

func (x *MsgExt) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgExt.ProtoReflect.Descriptor instead.
func (*MsgExt) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{3}
}

func (x *MsgExt) GetEmApnsExt() *EmApnsExtItem {
	if x != nil {
		return x.EmApnsExt
	}
	return nil
}

type EmApnsExtItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmAlertTitle string `protobuf:"bytes,1,opt,name=EmAlertTitle,proto3" json:"EmAlertTitle,omitempty"` // 推送标题
	EmAlertBody  string `protobuf:"bytes,2,opt,name=EmAlertBody,proto3" json:"EmAlertBody,omitempty"`   // 推送内容
	Data         string `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`                 // 拓展信息（客户端用于跳转的,json 字符串）
	IsPush       bool   `protobuf:"varint,4,opt,name=IsPush,proto3" json:"IsPush,omitempty"`            // 客户端后台运行时是否创建系统提示
}

func (x *EmApnsExtItem) Reset() {
	*x = EmApnsExtItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmApnsExtItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmApnsExtItem) ProtoMessage() {}

func (x *EmApnsExtItem) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmApnsExtItem.ProtoReflect.Descriptor instead.
func (*EmApnsExtItem) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{4}
}

func (x *EmApnsExtItem) GetEmAlertTitle() string {
	if x != nil {
		return x.EmAlertTitle
	}
	return ""
}

func (x *EmApnsExtItem) GetEmAlertBody() string {
	if x != nil {
		return x.EmAlertBody
	}
	return ""
}

func (x *EmApnsExtItem) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *EmApnsExtItem) GetIsPush() bool {
	if x != nil {
		return x.IsPush
	}
	return false
}

type SendPackMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      string   `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`                           // 发送方
	To        []string `protobuf:"bytes,2,rep,name=To,proto3" json:"To,omitempty"`                               // 接收方
	ChatType  ChatType `protobuf:"varint,3,opt,name=ChatType,proto3,enum=im.ChatType" json:"ChatType,omitempty"` // 会话类型
	MorderNo  string   `protobuf:"bytes,4,opt,name=MorderNo,proto3" json:"MorderNo,omitempty"`                   // 红包单号
	Content   string   `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`                     // 红包封面文案
	SendNick  string   `protobuf:"bytes,6,opt,name=SendNick,proto3" json:"SendNick,omitempty"`                   // 发送方昵称
	Status    string   `protobuf:"bytes,7,opt,name=Status,proto3" json:"Status,omitempty"`                       // 红包状态
	IsReceive string   `protobuf:"bytes,8,opt,name=IsReceive,proto3" json:"IsReceive,omitempty"`                 // 是否可领
	Ext       *MsgExt  `protobuf:"bytes,9,opt,name=Ext,proto3" json:"Ext,omitempty"`
}

func (x *SendPackMsgReq) Reset() {
	*x = SendPackMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPackMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPackMsgReq) ProtoMessage() {}

func (x *SendPackMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPackMsgReq.ProtoReflect.Descriptor instead.
func (*SendPackMsgReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{5}
}

func (x *SendPackMsgReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendPackMsgReq) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SendPackMsgReq) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_User
}

func (x *SendPackMsgReq) GetMorderNo() string {
	if x != nil {
		return x.MorderNo
	}
	return ""
}

func (x *SendPackMsgReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendPackMsgReq) GetSendNick() string {
	if x != nil {
		return x.SendNick
	}
	return ""
}

func (x *SendPackMsgReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendPackMsgReq) GetIsReceive() string {
	if x != nil {
		return x.IsReceive
	}
	return ""
}

func (x *SendPackMsgReq) GetExt() *MsgExt {
	if x != nil {
		return x.Ext
	}
	return nil
}

type SystemCmdMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From     string            `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`                                                                                         // 发送方
	To       []string          `protobuf:"bytes,2,rep,name=To,proto3" json:"To,omitempty"`                                                                                             // 接收方
	ChatType ChatType          `protobuf:"varint,3,opt,name=ChatType,proto3,enum=im.ChatType" json:"ChatType,omitempty"`                                                               // 会话类型
	Name     string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                                                                         // 命令名称
	Data     map[string]string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 命令拓展数据
}

func (x *SystemCmdMsgReq) Reset() {
	*x = SystemCmdMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemCmdMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemCmdMsgReq) ProtoMessage() {}

func (x *SystemCmdMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemCmdMsgReq.ProtoReflect.Descriptor instead.
func (*SystemCmdMsgReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{6}
}

func (x *SystemCmdMsgReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SystemCmdMsgReq) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SystemCmdMsgReq) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_User
}

func (x *SystemCmdMsgReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemCmdMsgReq) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type SendMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      string            `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`                                                                                                   // 发送方
	To        []string          `protobuf:"bytes,2,rep,name=To,proto3" json:"To,omitempty"`                                                                                                       // 接收方
	ChatType  ChatType          `protobuf:"varint,3,opt,name=ChatType,proto3,enum=im.ChatType" json:"ChatType,omitempty"`                                                                         // 会话类型
	EventType string            `protobuf:"bytes,4,opt,name=EventType,proto3" json:"EventType,omitempty"`                                                                                         //自定义消息类型
	EventData map[string]string `protobuf:"bytes,5,rep,name=EventData,proto3" json:"EventData,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 自定义消息体,涉及复杂消息结构，可以通过pb或json序列化后再放里面
	Ext       *MsgExt           `protobuf:"bytes,6,opt,name=Ext,proto3" json:"Ext,omitempty"`                                                                                                     //扩展数据，用于系统push
}

func (x *SendMsgReq) Reset() {
	*x = SendMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgReq) ProtoMessage() {}

func (x *SendMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgReq.ProtoReflect.Descriptor instead.
func (*SendMsgReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{7}
}

func (x *SendMsgReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendMsgReq) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SendMsgReq) GetChatType() ChatType {
	if x != nil {
		return x.ChatType
	}
	return ChatType_User
}

func (x *SendMsgReq) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *SendMsgReq) GetEventData() map[string]string {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *SendMsgReq) GetExt() *MsgExt {
	if x != nil {
		return x.Ext
	}
	return nil
}

type GetGroupInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId      []string `protobuf:"bytes,1,rep,name=MapId,proto3" json:"MapId,omitempty"`            // 群聊Id（第三方IM生成的）
	GetMembers int32    `protobuf:"varint,2,opt,name=GetMembers,proto3" json:"GetMembers,omitempty"` // 是否获取群成员 0否 1是
}

func (x *GetGroupInfoReq) Reset() {
	*x = GetGroupInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoReq) ProtoMessage() {}

func (x *GetGroupInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoReq.ProtoReflect.Descriptor instead.
func (*GetGroupInfoReq) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{8}
}

func (x *GetGroupInfoReq) GetMapId() []string {
	if x != nil {
		return x.MapId
	}
	return nil
}

func (x *GetGroupInfoReq) GetGetMembers() int32 {
	if x != nil {
		return x.GetMembers
	}
	return 0
}

type GetGroupInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfo map[string]*GroupInfo `protobuf:"bytes,1,rep,name=GroupInfo,proto3" json:"GroupInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetGroupInfoRes) Reset() {
	*x = GetGroupInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoRes) ProtoMessage() {}

func (x *GetGroupInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoRes.ProtoReflect.Descriptor instead.
func (*GetGroupInfoRes) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{9}
}

func (x *GetGroupInfoRes) GetGroupInfo() map[string]*GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uniqid      string `protobuf:"bytes,1,opt,name=Uniqid,proto3" json:"Uniqid,omitempty"`            // 服务端唯一id
	MapId       string `protobuf:"bytes,2,opt,name=MapId,proto3" json:"MapId,omitempty"`              // 群聊Id（第三方IM生成的）
	UserId      int64  `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId,omitempty"`           // 群主Id
	Name        string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`                // 群名称
	Desc        string `protobuf:"bytes,5,opt,name=Desc,proto3" json:"Desc,omitempty"`                // 群介绍
	Avatar      string `protobuf:"bytes,6,opt,name=Avatar,proto3" json:"Avatar,omitempty"`            // 群头像
	Ctime       int64  `protobuf:"varint,7,opt,name=Ctime,proto3" json:"Ctime,omitempty"`             // 创建时间
	IsBan       int64  `protobuf:"varint,8,opt,name=IsBan,proto3" json:"IsBan,omitempty"`             // 是否禁言 0否 1是
	IsDel       int64  `protobuf:"varint,9,opt,name=IsDel,proto3" json:"IsDel,omitempty"`             // 是否删除 0否 1是
	IsBlock     int64  `protobuf:"varint,10,opt,name=IsBlock,proto3" json:"IsBlock,omitempty"`        // 管理员封禁 0否 1是
	IsClean     int64  `protobuf:"varint,11,opt,name=IsClean,proto3" json:"IsClean,omitempty"`        //  是否清理消息 0否 1是
	CleanTime   int64  `protobuf:"varint,12,opt,name=CleanTime,proto3" json:"CleanTime,omitempty"`    // 清理时间 单位：分钟
	GroupNotice string `protobuf:"bytes,13,opt,name=GroupNotice,proto3" json:"GroupNotice,omitempty"` // 群公告
	Type        int64  `protobuf:"varint,14,opt,name=Type,proto3" json:"Type,omitempty"`              // 群类型：频道： 0文字 1语音（废弃） 2应用，普通群聊 固定为 1
	IsChannel   bool   `protobuf:"varint,15,opt,name=IsChannel,proto3" json:"IsChannel,omitempty"`    // 是否频道
	// 频道特殊字段
	Property int64          `protobuf:"varint,16,opt,name=Property,proto3" json:"Property,omitempty"` // 0:持有数字货币，1:持有数字藏品,2:无限制
	Chain    int64          `protobuf:"varint,17,opt,name=Chain,proto3" json:"Chain,omitempty"`       // 所属链
	Coins    float32        `protobuf:"fixed32,18,opt,name=Coins,proto3" json:"Coins,omitempty"`      // 限制额度
	Sort     int64          `protobuf:"varint,19,opt,name=Sort,proto3" json:"Sort,omitempty"`         // 排序
	Frozen   int64          `protobuf:"varint,20,opt,name=Frozen,proto3" json:"Frozen,omitempty"`     // 用户状态 0正常 1锁定 2冻结
	Dapp     *GroupInfoDapp `protobuf:"bytes,21,opt,name=Dapp,proto3" json:"Dapp,omitempty"`
	Id       int64          `protobuf:"varint,22,opt,name=Id,proto3" json:"Id,omitempty"`       // 频道id，数据库自增
	TbMid    int64          `protobuf:"varint,23,opt,name=TbMid,proto3" json:"TbMid,omitempty"` // 关联部落id
	TbZid    int64          `protobuf:"varint,24,opt,name=TbZid,proto3" json:"TbZid,omitempty"` // 关联分钟id
	// 普通群特殊字段
	Members  map[int64]*GroupInfoMembers `protobuf:"bytes,26,rep,name=Members,proto3" json:"Members,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 群成员
	Manages  []int64                     `protobuf:"varint,27,rep,packed,name=Manages,proto3" json:"Manages,omitempty"`                                                                                  // 群管理员
	InMember int64                       `protobuf:"varint,28,opt,name=InMember,proto3" json:"InMember,omitempty"`                                                                                       // 是否在群 0 否 1 是
	Notice   int64                       `protobuf:"varint,29,opt,name=Notice,proto3" json:"Notice,omitempty"`                                                                                           // 消息免打扰 0否 1是
	Bookmark int64                       `protobuf:"varint,30,opt,name=Bookmark,proto3" json:"Bookmark,omitempty"`                                                                                       // 是否保存通讯录 0否 1是
	IsTop    int64                       `protobuf:"varint,31,opt,name=IsTop,proto3" json:"IsTop,omitempty"`                                                                                             // 是否置顶 0否 1是
	Gnick    string                      `protobuf:"bytes,32,opt,name=Gnick,proto3" json:"Gnick,omitempty"`                                                                                              // 群组中昵称
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{10}
}

func (x *GroupInfo) GetUniqid() string {
	if x != nil {
		return x.Uniqid
	}
	return ""
}

func (x *GroupInfo) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *GroupInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GroupInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GroupInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *GroupInfo) GetIsBan() int64 {
	if x != nil {
		return x.IsBan
	}
	return 0
}

func (x *GroupInfo) GetIsDel() int64 {
	if x != nil {
		return x.IsDel
	}
	return 0
}

func (x *GroupInfo) GetIsBlock() int64 {
	if x != nil {
		return x.IsBlock
	}
	return 0
}

func (x *GroupInfo) GetIsClean() int64 {
	if x != nil {
		return x.IsClean
	}
	return 0
}

func (x *GroupInfo) GetCleanTime() int64 {
	if x != nil {
		return x.CleanTime
	}
	return 0
}

func (x *GroupInfo) GetGroupNotice() string {
	if x != nil {
		return x.GroupNotice
	}
	return ""
}

func (x *GroupInfo) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GroupInfo) GetIsChannel() bool {
	if x != nil {
		return x.IsChannel
	}
	return false
}

func (x *GroupInfo) GetProperty() int64 {
	if x != nil {
		return x.Property
	}
	return 0
}

func (x *GroupInfo) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *GroupInfo) GetCoins() float32 {
	if x != nil {
		return x.Coins
	}
	return 0
}

func (x *GroupInfo) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *GroupInfo) GetFrozen() int64 {
	if x != nil {
		return x.Frozen
	}
	return 0
}

func (x *GroupInfo) GetDapp() *GroupInfoDapp {
	if x != nil {
		return x.Dapp
	}
	return nil
}

func (x *GroupInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupInfo) GetTbMid() int64 {
	if x != nil {
		return x.TbMid
	}
	return 0
}

func (x *GroupInfo) GetTbZid() int64 {
	if x != nil {
		return x.TbZid
	}
	return 0
}

func (x *GroupInfo) GetMembers() map[int64]*GroupInfoMembers {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *GroupInfo) GetManages() []int64 {
	if x != nil {
		return x.Manages
	}
	return nil
}

func (x *GroupInfo) GetInMember() int64 {
	if x != nil {
		return x.InMember
	}
	return 0
}

func (x *GroupInfo) GetNotice() int64 {
	if x != nil {
		return x.Notice
	}
	return 0
}

func (x *GroupInfo) GetBookmark() int64 {
	if x != nil {
		return x.Bookmark
	}
	return 0
}

func (x *GroupInfo) GetIsTop() int64 {
	if x != nil {
		return x.IsTop
	}
	return 0
}

func (x *GroupInfo) GetGnick() string {
	if x != nil {
		return x.Gnick
	}
	return ""
}

// 群dapp信息
type GroupInfoDapp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DappIcon string `protobuf:"bytes,1,opt,name=DappIcon,proto3" json:"DappIcon,omitempty"`
	DappName string `protobuf:"bytes,2,opt,name=DappName,proto3" json:"DappName,omitempty"`
	DappUrl  string `protobuf:"bytes,3,opt,name=DappUrl,proto3" json:"DappUrl,omitempty"`
}

func (x *GroupInfoDapp) Reset() {
	*x = GroupInfoDapp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoDapp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoDapp) ProtoMessage() {}

func (x *GroupInfoDapp) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoDapp.ProtoReflect.Descriptor instead.
func (*GroupInfoDapp) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{11}
}

func (x *GroupInfoDapp) GetDappIcon() string {
	if x != nil {
		return x.DappIcon
	}
	return ""
}

func (x *GroupInfoDapp) GetDappName() string {
	if x != nil {
		return x.DappName
	}
	return ""
}

func (x *GroupInfoDapp) GetDappUrl() string {
	if x != nil {
		return x.DappUrl
	}
	return ""
}

type GroupInfoMembers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Status int32 `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *GroupInfoMembers) Reset() {
	*x = GroupInfoMembers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_im_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfoMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfoMembers) ProtoMessage() {}

func (x *GroupInfoMembers) ProtoReflect() protoreflect.Message {
	mi := &file_define_im_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfoMembers.ProtoReflect.Descriptor instead.
func (*GroupInfoMembers) Descriptor() ([]byte, []int) {
	return file_define_im_v1_proto_rawDescGZIP(), []int{12}
}

func (x *GroupInfoMembers) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GroupInfoMembers) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_define_im_v1_proto protoreflect.FileDescriptor

var file_define_im_v1_proto_rawDesc = []byte{
	0x0a, 0x12, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2f, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x69, 0x6d, 0x22, 0x25, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x4d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x22, 0x6b,
	0x0a, 0x06, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x39, 0x0a, 0x06, 0x4d,
	0x73, 0x67, 0x45, 0x78, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x45, 0x6d, 0x41, 0x70, 0x6e, 0x73, 0x45,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x2e, 0x45, 0x6d,
	0x41, 0x70, 0x6e, 0x73, 0x45, 0x78, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x45, 0x6d, 0x41,
	0x70, 0x6e, 0x73, 0x45, 0x78, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x45, 0x6d, 0x41, 0x70, 0x6e,
	0x73, 0x45, 0x78, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x45, 0x6d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x45, 0x6d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x45, 0x6d, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x50, 0x75, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x50, 0x75, 0x73, 0x68, 0x22, 0x84, 0x02, 0x0a, 0x0e, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x54,
	0x6f, 0x12, 0x28, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x73, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x03, 0x45, 0x78, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x74, 0x52, 0x03, 0x45, 0x78,
	0x74, 0x22, 0xdf, 0x01, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6d, 0x64, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x28, 0x0a, 0x08, 0x43, 0x68, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x69, 0x6d,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x43, 0x6d, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x91, 0x02, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x28, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x69, 0x6d, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b,
	0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x71, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x03, 0x45,
	0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x73,
	0x67, 0x45, 0x78, 0x74, 0x52, 0x03, 0x45, 0x78, 0x74, 0x1a, 0x3c, 0x0a, 0x0e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x22, 0xa0, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x4b, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6d, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xee, 0x06, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x6e, 0x69, 0x71, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x49, 0x73, 0x42, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73,
	0x42, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x44, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x46,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x70, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x44, 0x61, 0x70, 0x70, 0x52, 0x04, 0x44, 0x61, 0x70, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x62,
	0x4d, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x62, 0x4d, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x54, 0x62, 0x5a, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x6e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x6f,
	0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x6f,
	0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x54, 0x6f, 0x70, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x49, 0x73, 0x54, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x47, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x47, 0x6e, 0x69,
	0x63, 0x6b, 0x1a, 0x50, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x61, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x44, 0x61, 0x70, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x70, 0x70, 0x49, 0x63, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x70, 0x70, 0x49, 0x63, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x44, 0x61, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x44, 0x61, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x22, 0x42, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x1f, 0x0a, 0x08, 0x43,
	0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x01, 0x32, 0xfd, 0x01, 0x0a,
	0x08, 0x49, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x08, 0x67, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x69, 0x6d, 0x2e,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x43, 0x6d, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x13, 0x2e, 0x69, 0x6d, 0x2e,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6d, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x0a, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x2e, 0x69, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x69, 0x6d, 0x2e, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x69, 0x6d, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x42, 0x05, 0x5a, 0x03,
	0x2f, 0x69, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_define_im_v1_proto_rawDescOnce sync.Once
	file_define_im_v1_proto_rawDescData = file_define_im_v1_proto_rawDesc
)

func file_define_im_v1_proto_rawDescGZIP() []byte {
	file_define_im_v1_proto_rawDescOnce.Do(func() {
		file_define_im_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_define_im_v1_proto_rawDescData)
	})
	return file_define_im_v1_proto_rawDescData
}

var file_define_im_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_define_im_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_define_im_v1_proto_goTypes = []interface{}{
	(ChatType)(0),            // 0: im.ChatType
	(*GetTokenReq)(nil),      // 1: im.GetTokenReq
	(*GetTokenRes)(nil),      // 2: im.GetTokenRes
	(*MsgRes)(nil),           // 3: im.MsgRes
	(*MsgExt)(nil),           // 4: im.MsgExt
	(*EmApnsExtItem)(nil),    // 5: im.EmApnsExtItem
	(*SendPackMsgReq)(nil),   // 6: im.SendPackMsgReq
	(*SystemCmdMsgReq)(nil),  // 7: im.SystemCmdMsgReq
	(*SendMsgReq)(nil),       // 8: im.SendMsgReq
	(*GetGroupInfoReq)(nil),  // 9: im.GetGroupInfoReq
	(*GetGroupInfoRes)(nil),  // 10: im.GetGroupInfoRes
	(*GroupInfo)(nil),        // 11: im.GroupInfo
	(*GroupInfoDapp)(nil),    // 12: im.GroupInfoDapp
	(*GroupInfoMembers)(nil), // 13: im.GroupInfoMembers
	nil,                      // 14: im.MsgRes.DataEntry
	nil,                      // 15: im.SystemCmdMsgReq.DataEntry
	nil,                      // 16: im.SendMsgReq.EventDataEntry
	nil,                      // 17: im.GetGroupInfoRes.GroupInfoEntry
	nil,                      // 18: im.GroupInfo.MembersEntry
}
var file_define_im_v1_proto_depIdxs = []int32{
	14, // 0: im.MsgRes.Data:type_name -> im.MsgRes.DataEntry
	5,  // 1: im.MsgExt.EmApnsExt:type_name -> im.EmApnsExtItem
	0,  // 2: im.SendPackMsgReq.ChatType:type_name -> im.ChatType
	4,  // 3: im.SendPackMsgReq.Ext:type_name -> im.MsgExt
	0,  // 4: im.SystemCmdMsgReq.ChatType:type_name -> im.ChatType
	15, // 5: im.SystemCmdMsgReq.data:type_name -> im.SystemCmdMsgReq.DataEntry
	0,  // 6: im.SendMsgReq.ChatType:type_name -> im.ChatType
	16, // 7: im.SendMsgReq.EventData:type_name -> im.SendMsgReq.EventDataEntry
	4,  // 8: im.SendMsgReq.Ext:type_name -> im.MsgExt
	17, // 9: im.GetGroupInfoRes.GroupInfo:type_name -> im.GetGroupInfoRes.GroupInfoEntry
	12, // 10: im.GroupInfo.Dapp:type_name -> im.GroupInfoDapp
	18, // 11: im.GroupInfo.Members:type_name -> im.GroupInfo.MembersEntry
	11, // 12: im.GetGroupInfoRes.GroupInfoEntry.value:type_name -> im.GroupInfo
	13, // 13: im.GroupInfo.MembersEntry.value:type_name -> im.GroupInfoMembers
	1,  // 14: im.ImServer.getToken:input_type -> im.GetTokenReq
	6,  // 15: im.ImServer.SendPackMsg:input_type -> im.SendPackMsgReq
	7,  // 16: im.ImServer.SendSystemCmdMsg:input_type -> im.SystemCmdMsgReq
	8,  // 17: im.ImServer.SendMsg:input_type -> im.SendMsgReq
	9,  // 18: im.ImServer.GetGroupInfo:input_type -> im.GetGroupInfoReq
	2,  // 19: im.ImServer.getToken:output_type -> im.GetTokenRes
	3,  // 20: im.ImServer.SendPackMsg:output_type -> im.MsgRes
	3,  // 21: im.ImServer.SendSystemCmdMsg:output_type -> im.MsgRes
	3,  // 22: im.ImServer.SendMsg:output_type -> im.MsgRes
	10, // 23: im.ImServer.GetGroupInfo:output_type -> im.GetGroupInfoRes
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_define_im_v1_proto_init() }
func file_define_im_v1_proto_init() {
	if File_define_im_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_define_im_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmApnsExtItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPackMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemCmdMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoDapp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_im_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfoMembers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_define_im_v1_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_define_im_v1_proto_goTypes,
		DependencyIndexes: file_define_im_v1_proto_depIdxs,
		EnumInfos:         file_define_im_v1_proto_enumTypes,
		MessageInfos:      file_define_im_v1_proto_msgTypes,
	}.Build()
	File_define_im_v1_proto = out.File
	file_define_im_v1_proto_rawDesc = nil
	file_define_im_v1_proto_goTypes = nil
	file_define_im_v1_proto_depIdxs = nil
}
