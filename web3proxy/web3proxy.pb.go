// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: define/web3proxy.proto

package webTProxy

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string            `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`                                                                                       //钱包账户
	Balance string            `protobuf:"bytes,2,opt,name=Balance,proto3" json:"Balance,omitempty"`                                                                                       //主币余额
	Tokens  map[string]string `protobuf:"bytes,3,rep,name=Tokens,proto3" json:"Tokens,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //代币资产
}

func (x *AccountInfo) Reset() {
	*x = AccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInfo) ProtoMessage() {}

func (x *AccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInfo.ProtoReflect.Descriptor instead.
func (*AccountInfo) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{0}
}

func (x *AccountInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AccountInfo) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *AccountInfo) GetTokens() map[string]string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type GetBalanceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`     // 请求者身份
	Accounts []string `protobuf:"bytes,2,rep,name=Accounts,proto3" json:"Accounts,omitempty"` //要查询的账户
	ChainID  int64    `protobuf:"varint,3,opt,name=ChainID,proto3" json:"ChainID,omitempty"`  //要查询的链
	Tokens   []string `protobuf:"bytes,4,rep,name=Tokens,proto3" json:"Tokens,omitempty"`     //要查询的token,用代币的symble表示
}

func (x *GetBalanceReq) Reset() {
	*x = GetBalanceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceReq) ProtoMessage() {}

func (x *GetBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceReq.ProtoReflect.Descriptor instead.
func (*GetBalanceReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{1}
}

func (x *GetBalanceReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetBalanceReq) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *GetBalanceReq) GetChainID() int64 {
	if x != nil {
		return x.ChainID
	}
	return 0
}

func (x *GetBalanceReq) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type GetBalanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      int32          `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg      string         `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Accounts []*AccountInfo `protobuf:"bytes,3,rep,name=Accounts,proto3" json:"Accounts,omitempty"`
}

func (x *GetBalanceResp) Reset() {
	*x = GetBalanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceResp) ProtoMessage() {}

func (x *GetBalanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceResp.ProtoReflect.Descriptor instead.
func (*GetBalanceResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{2}
}

func (x *GetBalanceResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetBalanceResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetBalanceResp) GetAccounts() []*AccountInfo {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type TransactionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxID           string `protobuf:"bytes,1,opt,name=TxID,proto3" json:"TxID,omitempty"`
	From           string `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`
	To             string `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
	Amount         string `protobuf:"bytes,4,opt,name=Amount,proto3" json:"Amount,omitempty"` //16进制表达的资产余额
	Fee            string `protobuf:"bytes,5,opt,name=Fee,proto3" json:"Fee,omitempty"`
	Timestamp      int64  `protobuf:"varint,6,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BlockTimeStamp int64  `protobuf:"varint,7,opt,name=BlockTimeStamp,proto3" json:"BlockTimeStamp,omitempty"`
	State          int64  `protobuf:"varint,8,opt,name=State,proto3" json:"State,omitempty"`
	Token          string `protobuf:"bytes,9,opt,name=Token,proto3" json:"Token,omitempty"`
	Nonce          int64  `protobuf:"varint,10,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	ToNick         string `protobuf:"bytes,11,opt,name=ToNick,proto3" json:"ToNick,omitempty"`
	ToAvatar       string `protobuf:"bytes,12,opt,name=ToAvatar,proto3" json:"ToAvatar,omitempty"`
	ID             int64  `protobuf:"varint,13,opt,name=ID,proto3" json:"ID,omitempty"`
	Type           int32  `protobuf:"varint,14,opt,name=Type,proto3" json:"Type,omitempty"`
	ToUid          int64  `protobuf:"varint,15,opt,name=ToUid,proto3" json:"ToUid,omitempty"`
	Gas            int64  `protobuf:"varint,16,opt,name=Gas,proto3" json:"Gas,omitempty"`
	GasPrice       string `protobuf:"bytes,17,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	Contract       string `protobuf:"bytes,18,opt,name=Contract,proto3" json:"Contract,omitempty"`
	Chain          int64  `protobuf:"varint,19,opt,name=Chain,proto3" json:"Chain,omitempty"`
	ScaleShow      int64  `protobuf:"varint,20,opt,name=ScaleShow,proto3" json:"ScaleShow,omitempty"`
	Unit           int64  `protobuf:"varint,21,opt,name=Unit,proto3" json:"Unit,omitempty"`
	GasSymbol      string `protobuf:"bytes,22,opt,name=GasSymbol,proto3" json:"GasSymbol,omitempty"`
	IsChange       int32  `protobuf:"varint,23,opt,name=IsChange,proto3" json:"IsChange,omitempty"`
	Input          string `protobuf:"bytes,24,opt,name=Input,proto3" json:"Input,omitempty"`
	Nft            *Nft   `protobuf:"bytes,25,opt,name=Nft,proto3" json:"Nft,omitempty"`
}

func (x *TransactionInfo) Reset() {
	*x = TransactionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfo) ProtoMessage() {}

func (x *TransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfo.ProtoReflect.Descriptor instead.
func (*TransactionInfo) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionInfo) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *TransactionInfo) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransactionInfo) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransactionInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransactionInfo) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *TransactionInfo) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransactionInfo) GetBlockTimeStamp() int64 {
	if x != nil {
		return x.BlockTimeStamp
	}
	return 0
}

func (x *TransactionInfo) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *TransactionInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TransactionInfo) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TransactionInfo) GetToNick() string {
	if x != nil {
		return x.ToNick
	}
	return ""
}

func (x *TransactionInfo) GetToAvatar() string {
	if x != nil {
		return x.ToAvatar
	}
	return ""
}

func (x *TransactionInfo) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TransactionInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TransactionInfo) GetToUid() int64 {
	if x != nil {
		return x.ToUid
	}
	return 0
}

func (x *TransactionInfo) GetGas() int64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *TransactionInfo) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *TransactionInfo) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *TransactionInfo) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *TransactionInfo) GetScaleShow() int64 {
	if x != nil {
		return x.ScaleShow
	}
	return 0
}

func (x *TransactionInfo) GetUnit() int64 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *TransactionInfo) GetGasSymbol() string {
	if x != nil {
		return x.GasSymbol
	}
	return ""
}

func (x *TransactionInfo) GetIsChange() int32 {
	if x != nil {
		return x.IsChange
	}
	return 0
}

func (x *TransactionInfo) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *TransactionInfo) GetNft() *Nft {
	if x != nil {
		return x.Nft
	}
	return nil
}

type Nft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErcType              string  `protobuf:"bytes,1,opt,name=ErcType,proto3" json:"ErcType,omitempty"`
	EventType            string  `protobuf:"bytes,2,opt,name=EventType,proto3" json:"EventType,omitempty"`
	Minter               string  `protobuf:"bytes,3,opt,name=Minter,proto3" json:"Minter,omitempty"`
	Owner                string  `protobuf:"bytes,4,opt,name=Owner,proto3" json:"Owner,omitempty"`
	OwnTimestamp         int64   `protobuf:"varint,5,opt,name=OwnTimestamp,proto3" json:"OwnTimestamp,omitempty"`
	MintPrice            float64 `protobuf:"fixed64,6,opt,name=MintPrice,proto3" json:"MintPrice,omitempty"`
	TokenURI             string  `protobuf:"bytes,7,opt,name=TokenURI,proto3" json:"TokenURI,omitempty"`
	TokenID              string  `protobuf:"bytes,8,opt,name=TokenID,proto3" json:"TokenID,omitempty"`
	Name                 string  `protobuf:"bytes,9,opt,name=Name,proto3" json:"Name,omitempty"`
	ImageURI             string  `protobuf:"bytes,10,opt,name=ImageURI,proto3" json:"ImageURI,omitempty"`
	LatestTradeTimestamp string  `protobuf:"bytes,11,opt,name=LatestTradeTimestamp,proto3" json:"LatestTradeTimestamp,omitempty"`
}

func (x *Nft) Reset() {
	*x = Nft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nft) ProtoMessage() {}

func (x *Nft) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nft.ProtoReflect.Descriptor instead.
func (*Nft) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{4}
}

func (x *Nft) GetErcType() string {
	if x != nil {
		return x.ErcType
	}
	return ""
}

func (x *Nft) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *Nft) GetMinter() string {
	if x != nil {
		return x.Minter
	}
	return ""
}

func (x *Nft) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Nft) GetOwnTimestamp() int64 {
	if x != nil {
		return x.OwnTimestamp
	}
	return 0
}

func (x *Nft) GetMintPrice() float64 {
	if x != nil {
		return x.MintPrice
	}
	return 0
}

func (x *Nft) GetTokenURI() string {
	if x != nil {
		return x.TokenURI
	}
	return ""
}

func (x *Nft) GetTokenID() string {
	if x != nil {
		return x.TokenID
	}
	return ""
}

func (x *Nft) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Nft) GetImageURI() string {
	if x != nil {
		return x.ImageURI
	}
	return ""
}

func (x *Nft) GetLatestTradeTimestamp() string {
	if x != nil {
		return x.LatestTradeTimestamp
	}
	return ""
}

type GetTransactionListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    int64   `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`   // 请求者身份
	Account   string  `protobuf:"bytes,2,opt,name=Account,proto3" json:"Account,omitempty"`  //要查询的账户
	ChainID   int64   `protobuf:"varint,3,opt,name=ChainID,proto3" json:"ChainID,omitempty"` //要查询的链
	Page      int32   `protobuf:"varint,4,opt,name=Page,proto3" json:"Page,omitempty"`
	Count     int32   `protobuf:"varint,5,opt,name=Count,proto3" json:"Count,omitempty"`
	Type      int32   `protobuf:"varint,6,opt,name=Type,proto3" json:"Type,omitempty"`                // 1: 转入 2: 转出 0: all
	Contract  string  `protobuf:"bytes,7,opt,name=Contract,proto3" json:"Contract,omitempty"`         // 代币合约
	TimeRange *string `protobuf:"bytes,8,opt,name=TimeRange,proto3,oneof" json:"TimeRange,omitempty"` // 时间范围
}

func (x *GetTransactionListReq) Reset() {
	*x = GetTransactionListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionListReq) ProtoMessage() {}

func (x *GetTransactionListReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionListReq.ProtoReflect.Descriptor instead.
func (*GetTransactionListReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{5}
}

func (x *GetTransactionListReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetTransactionListReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetTransactionListReq) GetChainID() int64 {
	if x != nil {
		return x.ChainID
	}
	return 0
}

func (x *GetTransactionListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTransactionListReq) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetTransactionListReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetTransactionListReq) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *GetTransactionListReq) GetTimeRange() string {
	if x != nil && x.TimeRange != nil {
		return *x.TimeRange
	}
	return ""
}

type GetTransactionListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       int32              `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg       string             `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Accounts  []*TransactionInfo `protobuf:"bytes,3,rep,name=Accounts,proto3" json:"Accounts,omitempty"`
	TotalPage int32              `protobuf:"varint,4,opt,name=TotalPage,proto3" json:"TotalPage,omitempty"`
}

func (x *GetTransactionListResp) Reset() {
	*x = GetTransactionListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionListResp) ProtoMessage() {}

func (x *GetTransactionListResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionListResp.ProtoReflect.Descriptor instead.
func (*GetTransactionListResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{6}
}

func (x *GetTransactionListResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetTransactionListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetTransactionListResp) GetAccounts() []*TransactionInfo {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *GetTransactionListResp) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

type TransactionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxID     string `protobuf:"bytes,1,opt,name=TxID,proto3" json:"TxID,omitempty"`          // 交易hash
	Chain    int64  `protobuf:"varint,2,opt,name=Chain,proto3" json:"Chain,omitempty"`       // 链id
	From     string `protobuf:"bytes,3,opt,name=From,proto3" json:"From,omitempty"`          // 发起方地址
	To       string `protobuf:"bytes,4,opt,name=To,proto3" json:"To,omitempty"`              // 接收方地址
	Status   int64  `protobuf:"varint,5,opt,name=Status,proto3" json:"Status,omitempty"`     // 交易状态0异常,1正常
	Ctime    int64  `protobuf:"varint,6,opt,name=Ctime,proto3" json:"Ctime,omitempty"`       // 交易时间
	Balance  string `protobuf:"bytes,7,opt,name=Balance,proto3" json:"Balance,omitempty"`    // 订单金额
	Nonce    string `protobuf:"bytes,8,opt,name=Nonce,proto3" json:"Nonce,omitempty"`        //
	Gas      string `protobuf:"bytes,9,opt,name=Gas,proto3" json:"Gas,omitempty"`            //
	GasPrice string `protobuf:"bytes,10,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"` //
	Input    string `protobuf:"bytes,11,opt,name=Input,proto3" json:"Input,omitempty"`
}

func (x *TransactionItem) Reset() {
	*x = TransactionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionItem) ProtoMessage() {}

func (x *TransactionItem) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionItem.ProtoReflect.Descriptor instead.
func (*TransactionItem) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{7}
}

func (x *TransactionItem) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

func (x *TransactionItem) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *TransactionItem) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransactionItem) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransactionItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TransactionItem) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *TransactionItem) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *TransactionItem) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *TransactionItem) GetGas() string {
	if x != nil {
		return x.Gas
	}
	return ""
}

func (x *TransactionItem) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *TransactionItem) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

type SaveTransactionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions  []*TransactionItem `protobuf:"bytes,1,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
	MapWalletInfo map[string]string  `protobuf:"bytes,2,rep,name=MapWalletInfo,proto3" json:"MapWalletInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //wallet-userid的映射关系
}

func (x *SaveTransactionsReq) Reset() {
	*x = SaveTransactionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveTransactionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTransactionsReq) ProtoMessage() {}

func (x *SaveTransactionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTransactionsReq.ProtoReflect.Descriptor instead.
func (*SaveTransactionsReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{8}
}

func (x *SaveTransactionsReq) GetTransactions() []*TransactionItem {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *SaveTransactionsReq) GetMapWalletInfo() map[string]string {
	if x != nil {
		return x.MapWalletInfo
	}
	return nil
}

type SaveTransactionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *SaveTransactionsResp) Reset() {
	*x = SaveTransactionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveTransactionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTransactionsResp) ProtoMessage() {}

func (x *SaveTransactionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTransactionsResp.ProtoReflect.Descriptor instead.
func (*SaveTransactionsResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{9}
}

func (x *SaveTransactionsResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *SaveTransactionsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetContactsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"` // 钱包地址
	Page    int32  `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`      //
	Count   int32  `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"`    // 分页条数
	Chain   int64  `protobuf:"varint,4,opt,name=Chain,proto3" json:"Chain,omitempty"`
	Type    int32  `protobuf:"varint,5,opt,name=Type,proto3" json:"Type,omitempty"` // 记录类型
	Uid     int64  `protobuf:"varint,6,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *GetContactsReq) Reset() {
	*x = GetContactsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactsReq) ProtoMessage() {}

func (x *GetContactsReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactsReq.ProtoReflect.Descriptor instead.
func (*GetContactsReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{10}
}

func (x *GetContactsReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetContactsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetContactsReq) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetContactsReq) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *GetContactsReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetContactsReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ContactItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     int32  `protobuf:"varint,1,opt,name=Type,proto3" json:"Type,omitempty"`         // 类型 0 出 1入
	From     string `protobuf:"bytes,2,opt,name=From,proto3" json:"From,omitempty"`          // 对方地址
	Nick     string `protobuf:"bytes,3,opt,name=Nick,proto3" json:"Nick,omitempty"`          // 昵称
	Avatar   string `protobuf:"bytes,4,opt,name=Avatar,proto3" json:"Avatar,omitempty"`      // 头像
	LastTime int64  `protobuf:"varint,5,opt,name=LastTime,proto3" json:"LastTime,omitempty"` // 最新时间
	UserID   int64  `protobuf:"varint,6,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *ContactItem) Reset() {
	*x = ContactItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactItem) ProtoMessage() {}

func (x *ContactItem) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactItem.ProtoReflect.Descriptor instead.
func (*ContactItem) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{11}
}

func (x *ContactItem) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ContactItem) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ContactItem) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *ContactItem) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ContactItem) GetLastTime() int64 {
	if x != nil {
		return x.LastTime
	}
	return 0
}

func (x *ContactItem) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type GetContactsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       int32          `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg       string         `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Contacts  []*ContactItem `protobuf:"bytes,3,rep,name=Contacts,proto3" json:"Contacts,omitempty"`
	TotalPage int32          `protobuf:"varint,4,opt,name=TotalPage,proto3" json:"TotalPage,omitempty"`
}

func (x *GetContactsResp) Reset() {
	*x = GetContactsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContactsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactsResp) ProtoMessage() {}

func (x *GetContactsResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactsResp.ProtoReflect.Descriptor instead.
func (*GetContactsResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{12}
}

func (x *GetContactsResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetContactsResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetContactsResp) GetContacts() []*ContactItem {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *GetContactsResp) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

type GetWalletListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	OuId   int64 `protobuf:"varint,2,opt,name=OuId,proto3" json:"OuId,omitempty"`
}

func (x *GetWalletListReq) Reset() {
	*x = GetWalletListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletListReq) ProtoMessage() {}

func (x *GetWalletListReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletListReq.ProtoReflect.Descriptor instead.
func (*GetWalletListReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{13}
}

func (x *GetWalletListReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetWalletListReq) GetOuId() int64 {
	if x != nil {
		return x.OuId
	}
	return 0
}

type GetWalletListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       int32         `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg       string        `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Accounts  []*WalletItem `protobuf:"bytes,3,rep,name=Accounts,proto3" json:"Accounts,omitempty"`
	TotalPage int32         `protobuf:"varint,4,opt,name=TotalPage,proto3" json:"TotalPage,omitempty"`
}

func (x *GetWalletListResp) Reset() {
	*x = GetWalletListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletListResp) ProtoMessage() {}

func (x *GetWalletListResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletListResp.ProtoReflect.Descriptor instead.
func (*GetWalletListResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{14}
}

func (x *GetWalletListResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetWalletListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetWalletListResp) GetAccounts() []*WalletItem {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *GetWalletListResp) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

type WalletItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallet string `protobuf:"bytes,1,opt,name=Wallet,proto3" json:"Wallet,omitempty"` // 钱包地址
	Chain  int64  `protobuf:"varint,2,opt,name=Chain,proto3" json:"Chain,omitempty"`  // 链id
}

func (x *WalletItem) Reset() {
	*x = WalletItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletItem) ProtoMessage() {}

func (x *WalletItem) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletItem.ProtoReflect.Descriptor instead.
func (*WalletItem) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{15}
}

func (x *WalletItem) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

func (x *WalletItem) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

type InitWalletListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain    int64 `protobuf:"varint,1,opt,name=Chain,proto3" json:"Chain,omitempty"`
	Page     int32 `protobuf:"varint,2,opt,name=Page,proto3" json:"Page,omitempty"`
	PageSize int32 `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *InitWalletListReq) Reset() {
	*x = InitWalletListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitWalletListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitWalletListReq) ProtoMessage() {}

func (x *InitWalletListReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitWalletListReq.ProtoReflect.Descriptor instead.
func (*InitWalletListReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{16}
}

func (x *InitWalletListReq) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *InitWalletListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *InitWalletListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type InitWalletListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *InitWalletListResp) Reset() {
	*x = InitWalletListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitWalletListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitWalletListResp) ProtoMessage() {}

func (x *InitWalletListResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitWalletListResp.ProtoReflect.Descriptor instead.
func (*InitWalletListResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{17}
}

func (x *InitWalletListResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *InitWalletListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetWalletCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain int64 `protobuf:"varint,1,opt,name=Chain,proto3" json:"Chain,omitempty"`
}

func (x *GetWalletCountReq) Reset() {
	*x = GetWalletCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletCountReq) ProtoMessage() {}

func (x *GetWalletCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletCountReq.ProtoReflect.Descriptor instead.
func (*GetWalletCountReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{18}
}

func (x *GetWalletCountReq) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

type GetWalletCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   int32  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg   string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Count int32  `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *GetWalletCountResp) Reset() {
	*x = GetWalletCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWalletCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletCountResp) ProtoMessage() {}

func (x *GetWalletCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletCountResp.ProtoReflect.Descriptor instead.
func (*GetWalletCountResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{19}
}

func (x *GetWalletCountResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetWalletCountResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetWalletCountResp) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type WalletSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords string `protobuf:"bytes,1,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
	Chain    int64  `protobuf:"varint,2,opt,name=Chain,proto3" json:"Chain,omitempty"`
}

func (x *WalletSearchReq) Reset() {
	*x = WalletSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletSearchReq) ProtoMessage() {}

func (x *WalletSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletSearchReq.ProtoReflect.Descriptor instead.
func (*WalletSearchReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{20}
}

func (x *WalletSearchReq) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *WalletSearchReq) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

type WalletSearchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  int32     `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg  string    `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Info *UserInfo `protobuf:"bytes,3,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *WalletSearchResp) Reset() {
	*x = WalletSearchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletSearchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletSearchResp) ProtoMessage() {}

func (x *WalletSearchResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletSearchResp.ProtoReflect.Descriptor instead.
func (*WalletSearchResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{21}
}

func (x *WalletSearchResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *WalletSearchResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WalletSearchResp) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Nick    string `protobuf:"bytes,2,opt,name=Nick,proto3" json:"Nick,omitempty"`
	Avatar  string `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Desc    string `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Address string `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`
	Chain   int64  `protobuf:"varint,6,opt,name=Chain,proto3" json:"Chain,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{22}
}

func (x *UserInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserInfo) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *UserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UserInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserInfo) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

type GetTransLogByTxidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	TxId   string `protobuf:"bytes,2,opt,name=TxId,proto3" json:"TxId,omitempty"`
}

func (x *GetTransLogByTxidReq) Reset() {
	*x = GetTransLogByTxidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransLogByTxidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransLogByTxidReq) ProtoMessage() {}

func (x *GetTransLogByTxidReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransLogByTxidReq.ProtoReflect.Descriptor instead.
func (*GetTransLogByTxidReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{23}
}

func (x *GetTransLogByTxidReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetTransLogByTxidReq) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type TokensAddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   int32      `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg   string     `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Token *TokenInfo `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *TokensAddResp) Reset() {
	*x = TokensAddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokensAddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokensAddResp) ProtoMessage() {}

func (x *TokensAddResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokensAddResp.ProtoReflect.Descriptor instead.
func (*TokensAddResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{24}
}

func (x *TokensAddResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *TokensAddResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TokensAddResp) GetToken() *TokenInfo {
	if x != nil {
		return x.Token
	}
	return nil
}

type TokensAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain    int64  `protobuf:"varint,1,opt,name=Chain,proto3" json:"Chain,omitempty"`
	UserID   int64  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Contract string `protobuf:"bytes,3,opt,name=Contract,proto3" json:"Contract,omitempty"`
	Symbol   string `protobuf:"bytes,4,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	Decimals int64  `protobuf:"varint,5,opt,name=Decimals,proto3" json:"Decimals,omitempty"`
	Issuer   string `protobuf:"bytes,6,opt,name=Issuer,proto3" json:"Issuer,omitempty"`
}

func (x *TokensAddReq) Reset() {
	*x = TokensAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokensAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokensAddReq) ProtoMessage() {}

func (x *TokensAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokensAddReq.ProtoReflect.Descriptor instead.
func (*TokensAddReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{25}
}

func (x *TokensAddReq) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *TokensAddReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *TokensAddReq) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *TokensAddReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TokensAddReq) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *TokensAddReq) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract  string `protobuf:"bytes,1,opt,name=Contract,proto3" json:"Contract,omitempty"`
	ExApi     string `protobuf:"bytes,2,opt,name=ExApi,proto3" json:"ExApi,omitempty"`
	GasLimit  int64  `protobuf:"varint,3,opt,name=GasLimit,proto3" json:"GasLimit,omitempty"`
	Icon      string `protobuf:"bytes,4,opt,name=Icon,proto3" json:"Icon,omitempty"`
	Name      string `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
	Symbol    string `protobuf:"bytes,6,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	PackIcon  string `protobuf:"bytes,7,opt,name=PackIcon,proto3" json:"PackIcon,omitempty"`
	ScaleShow int64  `protobuf:"varint,8,opt,name=ScaleShow,proto3" json:"ScaleShow,omitempty"`
	Unit      int64  `protobuf:"varint,9,opt,name=Unit,proto3" json:"Unit,omitempty"`
	UnitWei   string `protobuf:"bytes,10,opt,name=UnitWei,proto3" json:"UnitWei,omitempty"`
	ID        int64  `protobuf:"varint,11,opt,name=ID,proto3" json:"ID,omitempty"`
	ChainCode int64  `protobuf:"varint,12,opt,name=ChainCode,proto3" json:"ChainCode,omitempty"`
	ChainName string `protobuf:"bytes,13,opt,name=ChainName,proto3" json:"ChainName,omitempty"`
	GasSymbol string `protobuf:"bytes,14,opt,name=GasSymbol,proto3" json:"GasSymbol,omitempty"`
	Sort      int64  `protobuf:"varint,15,opt,name=Sort,proto3" json:"Sort,omitempty"`
	Issuer    string `protobuf:"bytes,16,opt,name=Issuer,proto3" json:"Issuer,omitempty"`
	Decimals  int64  `protobuf:"varint,17,opt,name=Decimals,proto3" json:"Decimals,omitempty"`
	ChainId   int64  `protobuf:"varint,18,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{26}
}

func (x *TokenInfo) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *TokenInfo) GetExApi() string {
	if x != nil {
		return x.ExApi
	}
	return ""
}

func (x *TokenInfo) GetGasLimit() int64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *TokenInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *TokenInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TokenInfo) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TokenInfo) GetPackIcon() string {
	if x != nil {
		return x.PackIcon
	}
	return ""
}

func (x *TokenInfo) GetScaleShow() int64 {
	if x != nil {
		return x.ScaleShow
	}
	return 0
}

func (x *TokenInfo) GetUnit() int64 {
	if x != nil {
		return x.Unit
	}
	return 0
}

func (x *TokenInfo) GetUnitWei() string {
	if x != nil {
		return x.UnitWei
	}
	return ""
}

func (x *TokenInfo) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TokenInfo) GetChainCode() int64 {
	if x != nil {
		return x.ChainCode
	}
	return 0
}

func (x *TokenInfo) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *TokenInfo) GetGasSymbol() string {
	if x != nil {
		return x.GasSymbol
	}
	return ""
}

func (x *TokenInfo) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *TokenInfo) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *TokenInfo) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *TokenInfo) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

type TokensListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *TokensListReq) Reset() {
	*x = TokensListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokensListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokensListReq) ProtoMessage() {}

func (x *TokensListReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokensListReq.ProtoReflect.Descriptor instead.
func (*TokensListReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{27}
}

func (x *TokensListReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type TokensListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   int32                    `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg   string                   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Token map[int64]*TokenInfoList `protobuf:"bytes,3,rep,name=Token,proto3" json:"Token,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // <chain,token>
}

func (x *TokensListResp) Reset() {
	*x = TokensListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokensListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokensListResp) ProtoMessage() {}

func (x *TokensListResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokensListResp.ProtoReflect.Descriptor instead.
func (*TokensListResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{28}
}

func (x *TokensListResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *TokensListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TokensListResp) GetToken() map[int64]*TokenInfoList {
	if x != nil {
		return x.Token
	}
	return nil
}

type TokenInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenInfo []*TokenInfo `protobuf:"bytes,1,rep,name=TokenInfo,proto3" json:"TokenInfo,omitempty"`
}

func (x *TokenInfoList) Reset() {
	*x = TokenInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfoList) ProtoMessage() {}

func (x *TokenInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfoList.ProtoReflect.Descriptor instead.
func (*TokenInfoList) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{29}
}

func (x *TokenInfoList) GetTokenInfo() []*TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

type TokensDelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain    int64  `protobuf:"varint,1,opt,name=Chain,proto3" json:"Chain,omitempty"`
	Contract string `protobuf:"bytes,2,opt,name=Contract,proto3" json:"Contract,omitempty"`
	UserID   int64  `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *TokensDelReq) Reset() {
	*x = TokensDelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokensDelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokensDelReq) ProtoMessage() {}

func (x *TokensDelReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokensDelReq.ProtoReflect.Descriptor instead.
func (*TokensDelReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{30}
}

func (x *TokensDelReq) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

func (x *TokensDelReq) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *TokensDelReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type TokensDelResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *TokensDelResp) Reset() {
	*x = TokensDelResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokensDelResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokensDelResp) ProtoMessage() {}

func (x *TokensDelResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokensDelResp.ProtoReflect.Descriptor instead.
func (*TokensDelResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{31}
}

func (x *TokensDelResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *TokensDelResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type TokensSortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sort   string `protobuf:"bytes,1,opt,name=Sort,proto3" json:"Sort,omitempty"`
	UserID int64  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Chain  int64  `protobuf:"varint,3,opt,name=Chain,proto3" json:"Chain,omitempty"`
}

func (x *TokensSortReq) Reset() {
	*x = TokensSortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokensSortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokensSortReq) ProtoMessage() {}

func (x *TokensSortReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokensSortReq.ProtoReflect.Descriptor instead.
func (*TokensSortReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{32}
}

func (x *TokensSortReq) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *TokensSortReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *TokensSortReq) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

type TokensSortResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *TokensSortResp) Reset() {
	*x = TokensSortResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokensSortResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokensSortResp) ProtoMessage() {}

func (x *TokensSortResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokensSortResp.ProtoReflect.Descriptor instead.
func (*TokensSortResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{33}
}

func (x *TokensSortResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *TokensSortResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UserTokensListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Chain  int64 `protobuf:"varint,2,opt,name=Chain,proto3" json:"Chain,omitempty"`
}

func (x *UserTokensListReq) Reset() {
	*x = UserTokensListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTokensListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTokensListReq) ProtoMessage() {}

func (x *UserTokensListReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTokensListReq.ProtoReflect.Descriptor instead.
func (*UserTokensListReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{34}
}

func (x *UserTokensListReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserTokensListReq) GetChain() int64 {
	if x != nil {
		return x.Chain
	}
	return 0
}

type UserTokensListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      int32        `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg      string       `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Token    []*TokenInfo `protobuf:"bytes,3,rep,name=Token,proto3" json:"Token,omitempty"`       //
	DelToken []*TokenInfo `protobuf:"bytes,4,rep,name=DelToken,proto3" json:"DelToken,omitempty"` //
}

func (x *UserTokensListResp) Reset() {
	*x = UserTokensListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTokensListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTokensListResp) ProtoMessage() {}

func (x *UserTokensListResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTokensListResp.ProtoReflect.Descriptor instead.
func (*UserTokensListResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{35}
}

func (x *UserTokensListResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *UserTokensListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserTokensListResp) GetToken() []*TokenInfo {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *UserTokensListResp) GetDelToken() []*TokenInfo {
	if x != nil {
		return x.DelToken
	}
	return nil
}

type SyncTokenInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract string `protobuf:"bytes,1,opt,name=Contract,proto3" json:"Contract,omitempty"`
}

func (x *SyncTokenInfoReq) Reset() {
	*x = SyncTokenInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncTokenInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTokenInfoReq) ProtoMessage() {}

func (x *SyncTokenInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTokenInfoReq.ProtoReflect.Descriptor instead.
func (*SyncTokenInfoReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{36}
}

func (x *SyncTokenInfoReq) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

type SyncTokenInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *SyncTokenInfoResp) Reset() {
	*x = SyncTokenInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncTokenInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTokenInfoResp) ProtoMessage() {}

func (x *SyncTokenInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTokenInfoResp.ProtoReflect.Descriptor instead.
func (*SyncTokenInfoResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{37}
}

func (x *SyncTokenInfoResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *SyncTokenInfoResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SymbolListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Symbol string `protobuf:"bytes,1,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
}

func (x *SymbolListReq) Reset() {
	*x = SymbolListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolListReq) ProtoMessage() {}

func (x *SymbolListReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolListReq.ProtoReflect.Descriptor instead.
func (*SymbolListReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{38}
}

func (x *SymbolListReq) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type SymbolListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       int32        `protobuf:"varint,1,opt,name=Ret,proto3" json:"Ret,omitempty"`
	Msg       string       `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	TokenInfo []*TokenInfo `protobuf:"bytes,3,rep,name=TokenInfo,proto3" json:"TokenInfo,omitempty"`
}

func (x *SymbolListResp) Reset() {
	*x = SymbolListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolListResp) ProtoMessage() {}

func (x *SymbolListResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolListResp.ProtoReflect.Descriptor instead.
func (*SymbolListResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{39}
}

func (x *SymbolListResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *SymbolListResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SymbolListResp) GetTokenInfo() []*TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

type GetTransactionDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainCode int64  `protobuf:"varint,1,opt,name=ChainCode,proto3" json:"ChainCode,omitempty"`
	TxID      string `protobuf:"bytes,2,opt,name=TxID,proto3" json:"TxID,omitempty"`
}

func (x *GetTransactionDetailReq) Reset() {
	*x = GetTransactionDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionDetailReq) ProtoMessage() {}

func (x *GetTransactionDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionDetailReq.ProtoReflect.Descriptor instead.
func (*GetTransactionDetailReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{40}
}

func (x *GetTransactionDetailReq) GetChainCode() int64 {
	if x != nil {
		return x.ChainCode
	}
	return 0
}

func (x *GetTransactionDetailReq) GetTxID() string {
	if x != nil {
		return x.TxID
	}
	return ""
}

type GetTransactionDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *TransactionInfo `protobuf:"bytes,1,opt,name=Transaction,proto3" json:"Transaction,omitempty"`
}

func (x *GetTransactionDetailResp) Reset() {
	*x = GetTransactionDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionDetailResp) ProtoMessage() {}

func (x *GetTransactionDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionDetailResp.ProtoReflect.Descriptor instead.
func (*GetTransactionDetailResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{41}
}

func (x *GetTransactionDetailResp) GetTransaction() *TransactionInfo {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type SendTransactionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To        string `protobuf:"bytes,1,opt,name=To,proto3" json:"To,omitempty"`
	Amount    string `protobuf:"bytes,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	ChainCode int64  `protobuf:"varint,3,opt,name=ChainCode,proto3" json:"ChainCode,omitempty"`
	GasPrice  int64  `protobuf:"varint,4,opt,name=GasPrice,proto3" json:"GasPrice,omitempty"`
	Nonce     int64  `protobuf:"varint,5,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	Cover     int64  `protobuf:"varint,6,opt,name=Cover,proto3" json:"Cover,omitempty"`
}

func (x *SendTransactionReq) Reset() {
	*x = SendTransactionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionReq) ProtoMessage() {}

func (x *SendTransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionReq.ProtoReflect.Descriptor instead.
func (*SendTransactionReq) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{42}
}

func (x *SendTransactionReq) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendTransactionReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SendTransactionReq) GetChainCode() int64 {
	if x != nil {
		return x.ChainCode
	}
	return 0
}

func (x *SendTransactionReq) GetGasPrice() int64 {
	if x != nil {
		return x.GasPrice
	}
	return 0
}

func (x *SendTransactionReq) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *SendTransactionReq) GetCover() int64 {
	if x != nil {
		return x.Cover
	}
	return 0
}

type SendTransactionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]string `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Msg  string            `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Ret  int32             `protobuf:"varint,3,opt,name=Ret,proto3" json:"Ret,omitempty"`
}

func (x *SendTransactionResp) Reset() {
	*x = SendTransactionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_define_web3proxy_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTransactionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionResp) ProtoMessage() {}

func (x *SendTransactionResp) ProtoReflect() protoreflect.Message {
	mi := &file_define_web3proxy_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionResp.ProtoReflect.Descriptor instead.
func (*SendTransactionResp) Descriptor() ([]byte, []int) {
	return file_define_web3proxy_proto_rawDescGZIP(), []int{43}
}

func (x *SendTransactionResp) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SendTransactionResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SendTransactionResp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

var File_define_web3proxy_proto protoreflect.FileDescriptor

var file_define_web3proxy_proto_rawDesc = []byte{
	0x0a, 0x16, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2f, 0x77, 0x65, 0x62, 0x33, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x22, 0xb8, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x75,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x68, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x08, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22,
	0xed, 0x04, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x78, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x46, 0x65, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x54, 0x6f, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54,
	0x6f, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x6f, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x55, 0x69, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x47,
	0x61, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x47, 0x61, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x6e, 0x69,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x47, 0x61, 0x73, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x47, 0x61, 0x73, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x49,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x49,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a,
	0x03, 0x4e, 0x66, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x65, 0x62,
	0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4e, 0x66, 0x74, 0x52, 0x03, 0x4e, 0x66, 0x74, 0x22,
	0xc7, 0x02, 0x0a, 0x03, 0x4e, 0x66, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x72, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x72, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x4d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x4d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a,
	0x0c, 0x4f, 0x77, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x4f, 0x77, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4d, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x52, 0x49, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x52, 0x49, 0x12, 0x18, 0x0a, 0x07, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x52, 0x49, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x52, 0x49, 0x12, 0x32, 0x0a, 0x14, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xee, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x08, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x65,
	0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x22,
	0x81, 0x02, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x78, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x47, 0x61, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x61,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x0c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x57, 0x0a, 0x0d, 0x4d,
	0x61, 0x70, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x2e, 0x4d, 0x61, 0x70, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x4d, 0x61, 0x70, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x40, 0x0a, 0x12, 0x4d, 0x61, 0x70, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3a, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d,
	0x73, 0x67, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x55, 0x69, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x69, 0x63,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4c, 0x61, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x87, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x08, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x75, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x4f, 0x75, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a,
	0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73,
	0x67, 0x12, 0x31, 0x0a, 0x08, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61,
	0x67, 0x65, 0x22, 0x3a, 0x0a, 0x0a, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x59,
	0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x38, 0x0a, 0x12, 0x49, 0x6e, 0x69,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4d, 0x73, 0x67, 0x22, 0x29, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x4e,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x43,
	0x0a, 0x0f, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x22, 0x5f, 0x0a, 0x10, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x77, 0x65, 0x62, 0x54,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x92, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x69, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x42, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x54, 0x78, 0x69, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x78, 0x49, 0x64, 0x22, 0x5f, 0x0a,
	0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d,
	0x73, 0x67, 0x12, 0x2a, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa4,
	0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0xcd, 0x03, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x78, 0x41, 0x70, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x78, 0x41, 0x70, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x55,
	0x6e, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x55, 0x6e, 0x69, 0x74, 0x57, 0x65, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x55, 0x6e, 0x69, 0x74, 0x57, 0x65, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x61, 0x73, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x61, 0x73, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xc4,
	0x01, 0x0a, 0x0e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x3a, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x1a, 0x52, 0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x43, 0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x65, 0x62, 0x54,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x0c, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x33, 0x0a, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x44, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0x51, 0x0a, 0x0d, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x6f,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x34, 0x0a, 0x0e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d,
	0x73, 0x67, 0x22, 0x41, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67,
	0x12, 0x2a, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x30, 0x0a, 0x08,
	0x44, 0x65, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x44, 0x65, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2e,
	0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x37,
	0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0x27, 0x0a, 0x0d, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x22, 0x68, 0x0a, 0x0e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x52, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x65, 0x62, 0x54,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x78, 0x49, 0x44, 0x22, 0x58, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xa2, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x22, 0xb0, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77,
	0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x52, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x52, 0x65, 0x74,
	0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xab, 0x0b, 0x0a, 0x09, 0x77, 0x65,
	0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x41, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x0f, 0x67, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e,
	0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x53, 0x0a, 0x10, 0x73, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a,
	0x0d, 0x67, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b,
	0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x77, 0x65,
	0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0e, 0x69, 0x6e, 0x69,
	0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x77, 0x65,
	0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x77, 0x65, 0x62, 0x54,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x77, 0x65, 0x62,
	0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x50, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x4c, 0x6f, 0x67, 0x42,
	0x79, 0x54, 0x78, 0x69, 0x64, 0x12, 0x1f, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x54,
	0x78, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x41, 0x64, 0x64, 0x12,
	0x17, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x18, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x77, 0x65, 0x62,
	0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x44,
	0x65, 0x6c, 0x12, 0x17, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x77, 0x65,
	0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x44, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x53,
	0x6f, 0x72, 0x74, 0x12, 0x18, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x77, 0x65, 0x62,
	0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x77, 0x65,
	0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x4c,
	0x6f, 0x67, 0x12, 0x20, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5c, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x2e, 0x77,
	0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x23, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x77, 0x65, 0x62, 0x54, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x77, 0x65, 0x62,
	0x54, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_define_web3proxy_proto_rawDescOnce sync.Once
	file_define_web3proxy_proto_rawDescData = file_define_web3proxy_proto_rawDesc
)

func file_define_web3proxy_proto_rawDescGZIP() []byte {
	file_define_web3proxy_proto_rawDescOnce.Do(func() {
		file_define_web3proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_define_web3proxy_proto_rawDescData)
	})
	return file_define_web3proxy_proto_rawDescData
}

var file_define_web3proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_define_web3proxy_proto_goTypes = []interface{}{
	(*AccountInfo)(nil),              // 0: webTProxy.AccountInfo
	(*GetBalanceReq)(nil),            // 1: webTProxy.GetBalanceReq
	(*GetBalanceResp)(nil),           // 2: webTProxy.GetBalanceResp
	(*TransactionInfo)(nil),          // 3: webTProxy.TransactionInfo
	(*Nft)(nil),                      // 4: webTProxy.Nft
	(*GetTransactionListReq)(nil),    // 5: webTProxy.GetTransactionListReq
	(*GetTransactionListResp)(nil),   // 6: webTProxy.GetTransactionListResp
	(*TransactionItem)(nil),          // 7: webTProxy.TransactionItem
	(*SaveTransactionsReq)(nil),      // 8: webTProxy.SaveTransactionsReq
	(*SaveTransactionsResp)(nil),     // 9: webTProxy.SaveTransactionsResp
	(*GetContactsReq)(nil),           // 10: webTProxy.GetContactsReq
	(*ContactItem)(nil),              // 11: webTProxy.ContactItem
	(*GetContactsResp)(nil),          // 12: webTProxy.GetContactsResp
	(*GetWalletListReq)(nil),         // 13: webTProxy.GetWalletListReq
	(*GetWalletListResp)(nil),        // 14: webTProxy.GetWalletListResp
	(*WalletItem)(nil),               // 15: webTProxy.WalletItem
	(*InitWalletListReq)(nil),        // 16: webTProxy.InitWalletListReq
	(*InitWalletListResp)(nil),       // 17: webTProxy.InitWalletListResp
	(*GetWalletCountReq)(nil),        // 18: webTProxy.GetWalletCountReq
	(*GetWalletCountResp)(nil),       // 19: webTProxy.GetWalletCountResp
	(*WalletSearchReq)(nil),          // 20: webTProxy.WalletSearchReq
	(*WalletSearchResp)(nil),         // 21: webTProxy.WalletSearchResp
	(*UserInfo)(nil),                 // 22: webTProxy.UserInfo
	(*GetTransLogByTxidReq)(nil),     // 23: webTProxy.GetTransLogByTxidReq
	(*TokensAddResp)(nil),            // 24: webTProxy.TokensAddResp
	(*TokensAddReq)(nil),             // 25: webTProxy.TokensAddReq
	(*TokenInfo)(nil),                // 26: webTProxy.TokenInfo
	(*TokensListReq)(nil),            // 27: webTProxy.TokensListReq
	(*TokensListResp)(nil),           // 28: webTProxy.TokensListResp
	(*TokenInfoList)(nil),            // 29: webTProxy.TokenInfoList
	(*TokensDelReq)(nil),             // 30: webTProxy.TokensDelReq
	(*TokensDelResp)(nil),            // 31: webTProxy.TokensDelResp
	(*TokensSortReq)(nil),            // 32: webTProxy.TokensSortReq
	(*TokensSortResp)(nil),           // 33: webTProxy.TokensSortResp
	(*UserTokensListReq)(nil),        // 34: webTProxy.UserTokensListReq
	(*UserTokensListResp)(nil),       // 35: webTProxy.UserTokensListResp
	(*SyncTokenInfoReq)(nil),         // 36: webTProxy.SyncTokenInfoReq
	(*SyncTokenInfoResp)(nil),        // 37: webTProxy.SyncTokenInfoResp
	(*SymbolListReq)(nil),            // 38: webTProxy.SymbolListReq
	(*SymbolListResp)(nil),           // 39: webTProxy.SymbolListResp
	(*GetTransactionDetailReq)(nil),  // 40: webTProxy.GetTransactionDetailReq
	(*GetTransactionDetailResp)(nil), // 41: webTProxy.GetTransactionDetailResp
	(*SendTransactionReq)(nil),       // 42: webTProxy.SendTransactionReq
	(*SendTransactionResp)(nil),      // 43: webTProxy.SendTransactionResp
	nil,                              // 44: webTProxy.AccountInfo.TokensEntry
	nil,                              // 45: webTProxy.SaveTransactionsReq.MapWalletInfoEntry
	nil,                              // 46: webTProxy.TokensListResp.TokenEntry
	nil,                              // 47: webTProxy.SendTransactionResp.DataEntry
}
var file_define_web3proxy_proto_depIdxs = []int32{
	44, // 0: webTProxy.AccountInfo.Tokens:type_name -> webTProxy.AccountInfo.TokensEntry
	0,  // 1: webTProxy.GetBalanceResp.Accounts:type_name -> webTProxy.AccountInfo
	4,  // 2: webTProxy.TransactionInfo.Nft:type_name -> webTProxy.Nft
	3,  // 3: webTProxy.GetTransactionListResp.Accounts:type_name -> webTProxy.TransactionInfo
	7,  // 4: webTProxy.SaveTransactionsReq.Transactions:type_name -> webTProxy.TransactionItem
	45, // 5: webTProxy.SaveTransactionsReq.MapWalletInfo:type_name -> webTProxy.SaveTransactionsReq.MapWalletInfoEntry
	11, // 6: webTProxy.GetContactsResp.Contacts:type_name -> webTProxy.ContactItem
	15, // 7: webTProxy.GetWalletListResp.Accounts:type_name -> webTProxy.WalletItem
	22, // 8: webTProxy.WalletSearchResp.Info:type_name -> webTProxy.UserInfo
	26, // 9: webTProxy.TokensAddResp.Token:type_name -> webTProxy.TokenInfo
	46, // 10: webTProxy.TokensListResp.Token:type_name -> webTProxy.TokensListResp.TokenEntry
	26, // 11: webTProxy.TokenInfoList.TokenInfo:type_name -> webTProxy.TokenInfo
	26, // 12: webTProxy.UserTokensListResp.Token:type_name -> webTProxy.TokenInfo
	26, // 13: webTProxy.UserTokensListResp.DelToken:type_name -> webTProxy.TokenInfo
	26, // 14: webTProxy.SymbolListResp.TokenInfo:type_name -> webTProxy.TokenInfo
	3,  // 15: webTProxy.GetTransactionDetailResp.Transaction:type_name -> webTProxy.TransactionInfo
	47, // 16: webTProxy.SendTransactionResp.Data:type_name -> webTProxy.SendTransactionResp.DataEntry
	29, // 17: webTProxy.TokensListResp.TokenEntry.value:type_name -> webTProxy.TokenInfoList
	1,  // 18: webTProxy.webTProxy.getBalance:input_type -> webTProxy.GetBalanceReq
	5,  // 19: webTProxy.webTProxy.getTransactions:input_type -> webTProxy.GetTransactionListReq
	8,  // 20: webTProxy.webTProxy.saveTransactions:input_type -> webTProxy.SaveTransactionsReq
	10, // 21: webTProxy.webTProxy.getContacts:input_type -> webTProxy.GetContactsReq
	13, // 22: webTProxy.webTProxy.getWalletList:input_type -> webTProxy.GetWalletListReq
	16, // 23: webTProxy.webTProxy.initWalletList:input_type -> webTProxy.InitWalletListReq
	18, // 24: webTProxy.webTProxy.getWalletCount:input_type -> webTProxy.GetWalletCountReq
	20, // 25: webTProxy.webTProxy.walletSearch:input_type -> webTProxy.WalletSearchReq
	23, // 26: webTProxy.webTProxy.getTransLogByTxid:input_type -> webTProxy.GetTransLogByTxidReq
	25, // 27: webTProxy.webTProxy.tokensAdd:input_type -> webTProxy.TokensAddReq
	27, // 28: webTProxy.webTProxy.tokensList:input_type -> webTProxy.TokensListReq
	30, // 29: webTProxy.webTProxy.tokensDel:input_type -> webTProxy.TokensDelReq
	32, // 30: webTProxy.webTProxy.tokensSort:input_type -> webTProxy.TokensSortReq
	34, // 31: webTProxy.webTProxy.userTokensList:input_type -> webTProxy.UserTokensListReq
	36, // 32: webTProxy.webTProxy.syncTokenInfo:input_type -> webTProxy.SyncTokenInfoReq
	38, // 33: webTProxy.webTProxy.symbolList:input_type -> webTProxy.SymbolListReq
	5,  // 34: webTProxy.webTProxy.transLog:input_type -> webTProxy.GetTransactionListReq
	40, // 35: webTProxy.webTProxy.transactionDetail:input_type -> webTProxy.GetTransactionDetailReq
	42, // 36: webTProxy.webTProxy.sendTransaction:input_type -> webTProxy.SendTransactionReq
	2,  // 37: webTProxy.webTProxy.getBalance:output_type -> webTProxy.GetBalanceResp
	6,  // 38: webTProxy.webTProxy.getTransactions:output_type -> webTProxy.GetTransactionListResp
	9,  // 39: webTProxy.webTProxy.saveTransactions:output_type -> webTProxy.SaveTransactionsResp
	12, // 40: webTProxy.webTProxy.getContacts:output_type -> webTProxy.GetContactsResp
	14, // 41: webTProxy.webTProxy.getWalletList:output_type -> webTProxy.GetWalletListResp
	17, // 42: webTProxy.webTProxy.initWalletList:output_type -> webTProxy.InitWalletListResp
	19, // 43: webTProxy.webTProxy.getWalletCount:output_type -> webTProxy.GetWalletCountResp
	21, // 44: webTProxy.webTProxy.walletSearch:output_type -> webTProxy.WalletSearchResp
	3,  // 45: webTProxy.webTProxy.getTransLogByTxid:output_type -> webTProxy.TransactionInfo
	24, // 46: webTProxy.webTProxy.tokensAdd:output_type -> webTProxy.TokensAddResp
	28, // 47: webTProxy.webTProxy.tokensList:output_type -> webTProxy.TokensListResp
	31, // 48: webTProxy.webTProxy.tokensDel:output_type -> webTProxy.TokensDelResp
	33, // 49: webTProxy.webTProxy.tokensSort:output_type -> webTProxy.TokensSortResp
	35, // 50: webTProxy.webTProxy.userTokensList:output_type -> webTProxy.UserTokensListResp
	37, // 51: webTProxy.webTProxy.syncTokenInfo:output_type -> webTProxy.SyncTokenInfoResp
	39, // 52: webTProxy.webTProxy.symbolList:output_type -> webTProxy.SymbolListResp
	6,  // 53: webTProxy.webTProxy.transLog:output_type -> webTProxy.GetTransactionListResp
	41, // 54: webTProxy.webTProxy.transactionDetail:output_type -> webTProxy.GetTransactionDetailResp
	43, // 55: webTProxy.webTProxy.sendTransaction:output_type -> webTProxy.SendTransactionResp
	37, // [37:56] is the sub-list for method output_type
	18, // [18:37] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_define_web3proxy_proto_init() }
func file_define_web3proxy_proto_init() {
	if File_define_web3proxy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_define_web3proxy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveTransactionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveTransactionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContactsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitWalletListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitWalletListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWalletCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletSearchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransLogByTxidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokensAddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokensAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokensListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokensListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokensDelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokensDelResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokensSortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokensSortResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTokensListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTokensListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncTokenInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncTokenInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTransactionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_define_web3proxy_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTransactionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_define_web3proxy_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_define_web3proxy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_define_web3proxy_proto_goTypes,
		DependencyIndexes: file_define_web3proxy_proto_depIdxs,
		MessageInfos:      file_define_web3proxy_proto_msgTypes,
	}.Build()
	File_define_web3proxy_proto = out.File
	file_define_web3proxy_proto_rawDesc = nil
	file_define_web3proxy_proto_goTypes = nil
	file_define_web3proxy_proto_depIdxs = nil
}
